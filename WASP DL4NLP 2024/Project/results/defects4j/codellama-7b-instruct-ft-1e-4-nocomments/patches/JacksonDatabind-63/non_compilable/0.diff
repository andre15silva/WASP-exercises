diff --git a/tmp/5a3187a4-86d3-4abf-b12a-5026c8020729_buggy.java b/tmp/937cd6c4-7ed3-4460-a3e9-b6c59b91116f_fixed.java
index f955f47..a04e152 100644
--- a/tmp/5a3187a4-86d3-4abf-b12a-5026c8020729_buggy.java
+++ b/tmp/937cd6c4-7ed3-4460-a3e9-b6c59b91116f_fixed.java
@@ -1,34 +1,19 @@
         public String getDescription() {
             if (_desc == null) {
-                StringBuilder sb = new StringBuilder();
-
-                if (_from == null) { // can this ever occur?
-                    sb.append("UNKNOWN");
-                } else {
-                    Class<?> cls = (_from instanceof Class<?>) ? (Class<?>)_from : _from.getClass();
-                    // Hmmh. Although Class.getName() is mostly ok, it does look
-                    // butt-ugly for arrays.
-                    // 06-Oct-2016, tatu: as per [databind#1403], `getSimpleName()` not so good
-                    //   as it drops enclosing class. So let's try bit different approach
-                    String pkgName = com.fasterxml.jackson.databind.util.ClassUtil.getPackageName(cls);
-                    if (pkgName != null) {
-                        sb.append(pkgName);
-                        sb.append('.');
+                String referencedBy = getPathReference().toString();
+                int splitIndex = referencedBy.indexOf(getClass().getName());
+                if (splitIndex >= 0) {
+                    referencedBy = referencedBy.subSequence(splitIndex+getClass().getName().length(),
+                            referencedBy.length()).toString();
                 }
-                    sb.append(cls.getSimpleName());
-                }
-                sb.append('[');
-                if (_fieldName != null) {
-                    sb.append('"');
-                    sb.append(_fieldName);
-                    sb.append('"');
-                } else if (_index >= 0) {
-                    sb.append(_index);
-                } else {
-                    sb.append('?');
-                }
-                sb.append(']');
+                StringBuilder sb = new StringBuilder()
+                        .append("[")
+                        .append("\"")
+                        .append(getClass().getName())
+                        .append('"')
+                        .append(']')
+                        .append(referencedBy);
                 _desc = sb.toString();
             }
             return _desc;
         }
\ No newline at end of file

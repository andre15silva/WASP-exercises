diff --git a/tmp/46d5f64c-5424-4631-9254-5c69044280ed_buggy.java b/tmp/05956b55-9e93-420f-b356-fd6dd34ab927_fixed.java
index f955f47..fc00b69 100644
--- a/tmp/46d5f64c-5424-4631-9254-5c69044280ed_buggy.java
+++ b/tmp/05956b55-9e93-420f-b356-fd6dd34ab927_fixed.java
@@ -1,34 +1,45 @@
-        public String getDescription() {
-            if (_desc == null) {
+        public String getReferenceChain() {
+            if (_referenceChain == null) {
                 StringBuilder sb = new StringBuilder();
-
-                if (_from == null) { // can this ever occur?
+                if (_from == null) { 
                     sb.append("UNKNOWN");
                 } else {
                     Class<?> cls = (_from instanceof Class<?>) ? (Class<?>)_from : _from.getClass();
-                    // Hmmh. Although Class.getName() is mostly ok, it does look
-                    // butt-ugly for arrays.
-                    // 06-Oct-2016, tatu: as per [databind#1403], `getSimpleName()` not so good
-                    //   as it drops enclosing class. So let's try bit different approach
                     String pkgName = com.fasterxml.jackson.databind.util.ClassUtil.getPackageName(cls);
                     if (pkgName != null) {
                         sb.append(pkgName);
                         sb.append('.');
                     }
-                    sb.append(cls.getSimpleName());
-                }
-                sb.append('[');
+                    sb.append(cls.getName());
                     if (_fieldName != null) {
-                    sb.append('"');
+                        sb.append('.');
                         sb.append(_fieldName);
-                    sb.append('"');
                     } else if (_index >=0) {
+                        sb.append('[');
                         sb.append(_index);
-                } else {
-                    sb.append('?');
-                }
                         sb.append(']');
-                _desc = sb.toString();
+                    }
+                }
+                _referenceChain = sb.toString();
+            }
+            return _referenceChain;
+        }
+        public String getDescription() {
+            if (_desc == null) {
+                StringBuilder sb = new StringBuilder(_from.getClass().getName())
+                        .append("[\"")
+                        .append(_fieldName);
+                final int ix = sb.length();
+                if (_index >= 0) {
+                    sb.append('"');
+                    sb.append(_index);
+                    sb.append('"');
+                } else {
+                    sb.append(_fieldName).append("->");
+                    sb.append(getReferenceChain());
+                }
+                sb.append("\"]");
+                _desc = sb.substring(ix);
             }
             return _desc;
         }
\ No newline at end of file

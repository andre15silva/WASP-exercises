diff --git a/tmp/8a9c7566-0c15-4a45-adba-c76c758c5cdc_buggy.java b/tmp/89709214-3c70-4230-82c8-9b9dc9d65652_fixed.java
index b6b11b6..03e3e4c 100644
--- a/tmp/8a9c7566-0c15-4a45-adba-c76c758c5cdc_buggy.java
+++ b/tmp/89709214-3c70-4230-82c8-9b9dc9d65652_fixed.java
@@ -1,38 +1,29 @@
-    /**
-     * Consume a quoted string, adding it to <code>appendTo</code> if
-     * specified.
-     * 
-     * @param pattern pattern to parse
-     * @param pos current parse position
-     * @param appendTo optional StringBuffer to append
-     * @param escapingOn whether to process escaped quotes
-     * @return <code>appendTo</code>
-     */
     private StringBuffer appendQuotedString(String pattern, ParsePosition pos,
             StringBuffer appendTo, boolean escapingOn) {
         int start = pos.getIndex();
         char[] c = pattern.toCharArray();
         if (escapingOn && c[start] == QUOTE) {
             return appendTo == null ? null : appendTo.append(QUOTE);
         }
         int lastHold = start;
         for (int i = pos.getIndex(); i < pattern.length(); i++) {
-            if (escapingOn && pattern.substring(i).startsWith(ESCAPED_QUOTE)) {
-                appendTo.append(c, lastHold, pos.getIndex() - lastHold).append(
-                        QUOTE);
-                pos.setIndex(i + ESCAPED_QUOTE.length());
-                lastHold = pos.getIndex();
-                continue;
-            }
+            if (!escapingOn || !pattern.substring(i).startsWith(ESCAPED_QUOTE)) {
                 switch (c[pos.getIndex()]) {
                 case QUOTE:
                     next(pos);
                     return appendTo == null ? null : appendTo.append(c, lastHold,
                             pos.getIndex() - lastHold);
                 default:
                     next(pos);
                 }
             }
+            else {
+                appendTo.append(c, lastHold, pos.getIndex() - lastHold).append(
+                        QUOTE);
+                pos.setIndex(i + ESCAPED_QUOTE.length());
+                lastHold = pos.getIndex();
+            }
+        }
         throw new IllegalArgumentException(
                 "Unterminated quoted string at position " + start);
     }
\ No newline at end of file

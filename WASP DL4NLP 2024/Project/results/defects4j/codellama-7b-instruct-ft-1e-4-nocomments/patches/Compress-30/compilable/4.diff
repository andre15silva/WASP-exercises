diff --git a/tmp/52f90844-be1b-43d1-8295-cc0c3abca3d3_buggy.java b/tmp/645490bd-ffdc-435f-9062-602a879ebf03_fixed.java
index cae5e03..5b25e8f 100644
--- a/tmp/52f90844-be1b-43d1-8295-cc0c3abca3d3_buggy.java
+++ b/tmp/645490bd-ffdc-435f-9062-602a879ebf03_fixed.java
@@ -1,33 +1,31 @@
-    /*
-     * (non-Javadoc)
-     * 
-     * @see java.io.InputStream#read(byte[], int, int)
-     */
     @Override
     public int read(final byte[] dest, final int offs, final int len)
         throws IOException {
         if (offs < 0) {
             throw new IndexOutOfBoundsException("offs(" + offs + ") < 0.");
         }
         if (len < 0) {
             throw new IndexOutOfBoundsException("len(" + len + ") < 0.");
         }
         if (offs + len > dest.length) {
             throw new IndexOutOfBoundsException("offs(" + offs + ") + len("
                                                 + len + ") > dest.length(" + dest.length + ").");
         }
         if (this.in == null) {
             throw new IOException("stream closed");
         }
-
         final int hi = offs + len;
         int destOffs = offs;
         int b;
+        boolean bzClosed = false;
+        try {
             while (destOffs < hi && ((b = read0()) >= 0)) {
                 dest[destOffs++] = (byte) b;
                 count(1);
             }
-
-        int c = (destOffs == offs) ? -1 : (destOffs - offs);
+        } finally {
+            bzClosed = true;
+        }
+        int c = (destOffs == offs) ? (bzClosed ? -1 : read0()) : (destOffs - offs);
         return c;
     }
\ No newline at end of file

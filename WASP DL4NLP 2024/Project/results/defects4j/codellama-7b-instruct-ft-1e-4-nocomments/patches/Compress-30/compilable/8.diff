diff --git a/tmp/79313041-0f40-455a-8567-ca2e6301d19a_buggy.java b/tmp/c8a9d04b-7216-4ec2-8e28-48f12fbc1779_fixed.java
index cae5e03..a07f4d9 100644
--- a/tmp/79313041-0f40-455a-8567-ca2e6301d19a_buggy.java
+++ b/tmp/c8a9d04b-7216-4ec2-8e28-48f12fbc1779_fixed.java
@@ -1,33 +1,27 @@
-    /*
-     * (non-Javadoc)
-     * 
-     * @see java.io.InputStream#read(byte[], int, int)
-     */
     @Override
     public int read(final byte[] dest, final int offs, final int len)
         throws IOException {
         if (offs < 0) {
             throw new IndexOutOfBoundsException("offs(" + offs + ") < 0.");
         }
         if (len < 0) {
             throw new IndexOutOfBoundsException("len(" + len + ") < 0.");
         }
         if (offs + len > dest.length) {
             throw new IndexOutOfBoundsException("offs(" + offs + ") + len("
                                                 + len + ") > dest.length(" + dest.length + ").");
         }
         if (this.in == null) {
             throw new IOException("stream closed");
         }
-
-        final int hi = offs + len;
         int destOffs = offs;
+        int readSize = len > 0 ? len : 0;
         int b;
-        while (destOffs < hi && ((b = read0()) >= 0)) {
+        while (readSize > 0 && ((b = read0()) >= 0)) {
             dest[destOffs++] = (byte) b;
+            readSize--;
             count(1);
         }
-
         int c = (destOffs == offs) ? -1 : (destOffs - offs);
         return c;
     }
\ No newline at end of file

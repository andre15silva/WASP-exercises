diff --git a/tmp/23003fad-10ca-4461-8cd3-1550ab887cb6_buggy.java b/tmp/753f2a23-5ed6-4cf3-b1f2-c66ce52859ef_fixed.java
index cae5e03..1be836a 100644
--- a/tmp/23003fad-10ca-4461-8cd3-1550ab887cb6_buggy.java
+++ b/tmp/753f2a23-5ed6-4cf3-b1f2-c66ce52859ef_fixed.java
@@ -1,33 +1,24 @@
-    /*
-     * (non-Javadoc)
-     * 
-     * @see java.io.InputStream#read(byte[], int, int)
-     */
     @Override
     public int read(final byte[] dest, final int offs, final int len)
         throws IOException {
+        checkClosed();
         if (offs < 0) {
             throw new IndexOutOfBoundsException("offs(" + offs + ") < 0.");
         }
         if (len < 0) {
             throw new IndexOutOfBoundsException("len(" + len + ") < 0.");
         }
         if (offs + len > dest.length) {
             throw new IndexOutOfBoundsException("offs(" + offs + ") + len("
                                                 + len + ") > dest.length(" + dest.length + ").");
         }
-        if (this.in == null) {
-            throw new IOException("stream closed");
-        }
-
-        final int hi = offs + len;
+        int hi = offs + len;
         int destOffs = offs;
-        int b;
-        while (destOffs < hi && ((b = read0()) >= 0)) {
-            dest[destOffs++] = (byte) b;
-            count(1);
+        int n, b;
+        while (destOffs < hi && (n = read0(dest, destOffs, hi - destOffs)) > 0) {
+            destOffs += n;
+            count(n);
         }
-
         int c = (destOffs == offs) ? -1 : (destOffs - offs);
         return c;
     }
\ No newline at end of file

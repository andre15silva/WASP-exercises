diff --git a/tmp/5dd19deb-75b4-45bc-85b2-59ff598fb295_buggy.java b/tmp/d1a56b0d-a563-49a5-b7fc-538615acf44d_fixed.java
index e0ecec8..6fe4bf3 100644
--- a/tmp/5dd19deb-75b4-45bc-85b2-59ff598fb295_buggy.java
+++ b/tmp/d1a56b0d-a563-49a5-b7fc-538615acf44d_fixed.java
@@ -1,35 +1,37 @@
-  /**
-   * Visits the parameters of a CALL or a NEW node.
-   */
   private void visitParameterList(NodeTraversal t, Node call,
       FunctionType functionType) {
     Iterator<Node> arguments = call.children().iterator();
-    arguments.next(); // skip the function name
-
+    arguments.next(); 
     Iterator<Node> parameters = functionType.getParameters().iterator();
     int ordinal = 0;
     Node parameter = null;
     Node argument = null;
     while (arguments.hasNext() &&
            parameters.hasNext()) {
-      // If there are no parameters left in the list, then the while loop
-      // above implies that this must be a var_args function.
       parameter = parameters.next();
       argument = arguments.next();
       ordinal++;
-
       validator.expectArgumentMatchesParameter(t, argument,
           getJSType(argument), getJSType(parameter), call, ordinal);
     }
-
     int numArgs = call.getChildCount() - 1;
     int minArgs = functionType.getMinArguments();
     int maxArgs = functionType.getMaxArguments();
-    if (minArgs > numArgs || maxArgs < numArgs) {
+    int paramLen = functionType.getParameters().length;
+    if (!functionType.isVarArgs() &&
+        minArgs > numArgs ||
+        maxArgs < numArgs) {
       report(t, call, WRONG_ARGUMENT_COUNT,
               validator.getReadableJSTypeName(call.getFirstChild(), false),
               String.valueOf(numArgs), String.valueOf(minArgs),
               maxArgs != Integer.MAX_VALUE ?
               " and no more than " + maxArgs + " argument(s)" : "");
     }
+    if (functionType.isVarArgs() &&
+        minArgs > (numArgs - functionType.getMaxArguments()) ||
+        numArgs > (minArgs + paramLen) ||
+        functionType.getMaxArguments()
+            < (numArgs - (minArgs - functionType.getMaxArguments()) )) {
+      report(t, call, WRONG_VAR_ARGS, ordinal, 1);
+    }
   }
\ No newline at end of file

diff --git a/tmp/00aa70ab-7969-433d-876f-7ab114bb222d_buggy.java b/tmp/26a197c2-8f39-4b61-8291-49dcf27caea1_fixed.java
index a7d0787..634b570 100644
--- a/tmp/00aa70ab-7969-433d-876f-7ab114bb222d_buggy.java
+++ b/tmp/26a197c2-8f39-4b61-8291-49dcf27caea1_fixed.java
@@ -1,54 +1,73 @@
     /**
      * Returns the <code>Object</code> of type <code>clazz</code>
      * with the value of <code>str</code>.
      *
      * @param str the command line value
      * @param clazz the type of argument
      * @return The instance of <code>clazz</code> initialised with
      * the value of <code>str</code>.
      * @throws ParseException if the value creation for the given class failed
      */
-    @SuppressWarnings("unchecked") // returned value will have type T because it is fixed by clazz
+    @SuppressWarnings("unchecked") 
     public static <T> T createValue(final String str, final Class<T> clazz) throws ParseException
     {
         if (PatternOptionBuilder.STRING_VALUE == clazz)
         {
             return (T) str;
         }
         else if (PatternOptionBuilder.OBJECT_VALUE == clazz)
         {
             return (T) createObject(str);
         }
         else if (PatternOptionBuilder.NUMBER_VALUE == clazz)
         {
             return (T) createNumber(str);
         }
         else if (PatternOptionBuilder.DATE_VALUE == clazz)
         {
             return (T) createDate(str);
         }
         else if (PatternOptionBuilder.CLASS_VALUE == clazz)
         {
             return (T) createClass(str);
         }
         else if (PatternOptionBuilder.FILE_VALUE == clazz)
         {
             return (T) createFile(str);
         }
         else if (PatternOptionBuilder.EXISTING_FILE_VALUE == clazz)
         {
             return (T) openFile(str);
         }
         else if (PatternOptionBuilder.FILES_VALUE == clazz)
         {
             return (T) createFiles(str);
         }
         else if (PatternOptionBuilder.URL_VALUE == clazz)
         {
             return (T) createURL(str);
         }
+        else if (PatternOptionBuilder.INTEGER_VALUE == clazz)
+        {
+            return (T) Integer.valueOf(str);
+        } else if (PatternOptionBuilder.LONG_VALUE == clazz)
+        {
+            return (T) Long.valueOf(str);
+        } else if (PatternOptionBuilder.LIST_VALUE == clazz)
+        {
+            return (T) createList(str);
+        } else if (PatternOptionBuilder.DOUBLE_VALUE == clazz)
+        {
+            return (T) Double.valueOf(str);
+        } else if (PatternOptionBuilder.FLOAT_VALUE == clazz)
+        {
+            return (T) Float.valueOf(str);
+        } else if (PatternOptionBuilder.BOOLEAN_VALUE == clazz)
+        {
+            return (T) Boolean.valueOf(str);
+        }
         else
         {
             return null;
         }
     }
\ No newline at end of file

diff --git a/tmp/ff526e63-cfd7-4061-8305-4585f4662c8b_buggy.java b/tmp/bc8cc2a8-ceb8-4240-aa63-9d88d98034b6_fixed.java
index 602226b..482e4c1 100644
--- a/tmp/ff526e63-cfd7-4061-8305-4585f4662c8b_buggy.java
+++ b/tmp/bc8cc2a8-ceb8-4240-aa63-9d88d98034b6_fixed.java
@@ -1,26 +1,35 @@
     private void findAliases(NodeTraversal t) {
       Scope scope = t.getScope();
       for (Var v : scope.getVarIterable()) {
         Node n = v.getNode();
         int type = n.getType();
         Node parent = n.getParent();
         if (parent.isVar()) {
-          if (n.hasChildren() && n.getFirstChild().isQualifiedName()) {
+        } else if (parent.isScript()) {
+          if (n.isQualifiedName()) {
+            var var = v;
+            while (!var.isGlobal()) {
+              var = var.getScope().getParent().getVar(var.getName());
+            }
+            scope.getParent().declare(var, n);
+          }
+        } else if (n.hasChildren() && n.getFirstChild().isQualifiedName()) {
+          String name = n.getString();
+          Var aliasVar = scope.getVar(name);
+          aliases.put(name, aliasVar);
+          String qualifiedName =
+              aliasVar.getInitialValue().getQualifiedName();
+          transformation.addAlias(name, qualifiedName);
+        } else if (parent.isGetProp() && n.getFirstChild().isQualifiedName()) {
           String name = n.getString();
           Var aliasVar = scope.getVar(name);
           aliases.put(name, aliasVar);
-
           String qualifiedName =
               aliasVar.getInitialValue().getQualifiedName();
           transformation.addAlias(name, qualifiedName);
-          // Bleeding functions already get a BAD_PARAMETERS error, so just
-          // do nothing.
-          // Parameters of the scope function also get a BAD_PARAMETERS
-          // error.
         } else {
-          // TODO(robbyw): Support using locals for private variables.
           report(t, n, GOOG_SCOPE_NON_ALIAS_LOCAL, n.getString());
         }
         }
       }
     }
\ No newline at end of file

diff --git a/tmp/bb15e3a7-8186-4cca-a769-fe17b0468af6_buggy.java b/tmp/6960b930-ea36-468e-b570-fc8d537c251a_fixed.java
index 1c875ad..c22edef 100644
--- a/tmp/bb15e3a7-8186-4cca-a769-fe17b0468af6_buggy.java
+++ b/tmp/6960b930-ea36-468e-b570-fc8d537c251a_fixed.java
@@ -1,31 +1,17 @@
     public void captureArgumentsFrom(Invocation invocation) {
-        if (invocation.getMethod().isVarArgs()) {
-            int indexOfVararg = invocation.getRawArguments().length - 1;
-            throw new UnsupportedOperationException();
-
-        } else {
         for (int position = 0; position < matchers.size(); position++) {
             Matcher m = matchers.get(position);
-                if (m instanceof CapturesArguments) {
+            if (m instanceof CapturesArguments && !isVarargMatcher(m)) {
                 ((CapturesArguments) m).captureFrom(invocation.getArgumentAt(position, Object.class));
             }
         }
+        if (invocation.getRawArguments().length != matchers.size()) {
+            throw new UnsupportedOperationException("Cannot capture varargs. " +
+                                                    "Report this issue to http://code.google.com/p/mockito/issues" +
+                                                    "or http://youtrack.jetbrains.net/issues");
+        }
+        if (invocation.getMethod().isVarArgs()) {
+            int indexOfVararg = invocation.getRawArguments().length - 1;
+            throw new UnsupportedOperationException();
         }
-
-//        for (int position = 0; position < matchers.size(); position++) {
-//            Matcher m = matchers.get(position);
-//            if (m instanceof CapturesArguments && invocation.getRawArguments().length > position) {
-//                //TODO SF - this whole lot can be moved captureFrom implementation
-//                if(isVariableArgument(invocation, position) && isVarargMatcher(m)) {
-//                    Object array = invocation.getRawArguments()[position];
-//                    for (int i = 0; i < Array.getLength(array); i++) {
-//                        ((CapturesArguments) m).captureFrom(Array.get(array, i));
-//                    }
-//                    //since we've captured all varargs already, it does not make sense to process other matchers.
-//                    return;
-//                } else {
-//                    ((CapturesArguments) m).captureFrom(invocation.getRawArguments()[position]);
-//                }
-//            }
-//        }
     }
\ No newline at end of file

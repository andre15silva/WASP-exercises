diff --git a/tmp/2c140d79-cbf7-4dce-ba2f-c4a537e208dd_buggy.java b/tmp/cde7d867-f3b5-4cc1-aee2-a6714d21d25b_fixed.java
index cfdcd9c..5375dbc 100644
--- a/tmp/2c140d79-cbf7-4dce-ba2f-c4a537e208dd_buggy.java
+++ b/tmp/cde7d867-f3b5-4cc1-aee2-a6714d21d25b_fixed.java
@@ -1,51 +1,21 @@
   private Node tryFoldArrayAccess(Node n, Node left, Node right) {
     Node parent = n.getParent();
-    // If GETPROP/GETELEM is used as assignment target the array literal is
-    // acting as a temporary we can't fold it here:
-    //    "[][0] += 1"
     if (isAssignmentTarget(n)) {
       return n;
     }
-
-    if (!right.isNumber()) {
-      // Sometimes people like to use complex expressions to index into
-      // arrays, or strings to index into array methods.
+    Node value = left.getFirstChild();
+    int index = 0;
+    for (; ; index++) {
+      if (value == null) {
+        error(INDEX_OUT_OF_BOUNDS_ERROR, "NUMBER " + index, right);
         return n;
       }
-
-    double index = right.getDouble();
-    int intIndex = (int) index;
-    if (intIndex != index) {
-      error(INVALID_GETELEM_INDEX_ERROR, right);
-      return n;
-    }
-
-    if (intIndex < 0) {
-      error(INDEX_OUT_OF_BOUNDS_ERROR, right);
-      return n;
-    }
-
-    Node current = left.getFirstChild();
-    Node elem = null;
-    for (int i = 0; current != null && i < intIndex; i++) {
-        elem = current;
-
-      current = current.getNext();
-    }
-
-    if (elem == null) {
-      error(INDEX_OUT_OF_BOUNDS_ERROR, right);
-      return n;
+      if (index == right.getDouble()) {
+        break;
       }
-
-    if (elem.isEmpty()) {
-      elem = NodeUtil.newUndefinedNode(elem);
-    } else {
-      left.removeChild(elem);
+      value = value.getNext();
     }
-
-    // Replace the entire GETELEM with the value
-    n.getParent().replaceChild(n, elem);
+    n.getParent().replaceChild(n, value);
     reportCodeChange();
-    return elem;
+    return value;
   }
\ No newline at end of file

diff --git a/tmp/723b00ef-c1c9-4e83-afbe-d7e9040f2556_buggy.java b/tmp/bd773a35-8f90-4433-a4cf-350770b559fc_fixed.java
index cfdcd9c..9d2909a 100644
--- a/tmp/723b00ef-c1c9-4e83-afbe-d7e9040f2556_buggy.java
+++ b/tmp/bd773a35-8f90-4433-a4cf-350770b559fc_fixed.java
@@ -1,51 +1,28 @@
   private Node tryFoldArrayAccess(Node n, Node left, Node right) {
     Node parent = n.getParent();
-    // If GETPROP/GETELEM is used as assignment target the array literal is
-    // acting as a temporary we can't fold it here:
-    //    "[][0] += 1"
     if (isAssignmentTarget(n)) {
       return n;
     }
-
-    if (!right.isNumber()) {
-      // Sometimes people like to use complex expressions to index into
-      // arrays, or strings to index into array methods.
-      return n;
-    }
-
     double index = right.getDouble();
     int intIndex = (int) index;
     if (intIndex != index) {
-      error(INVALID_GETELEM_INDEX_ERROR, right);
+      error(INVALID_GETELEM_INDEX_ERROR);
       return n;
     }
-
     if (intIndex < 0) {
-      error(INDEX_OUT_OF_BOUNDS_ERROR, right);
+      error(INDEX_OUT_OF_BOUNDS_ERROR);
       return n;
     }
-
     Node current = left.getFirstChild();
-    Node elem = null;
     for (int i = 0; current != null && i < intIndex; i++) {
-        elem = current;
-
       current = current.getNext();
     }
-
-    if (elem == null) {
-      error(INDEX_OUT_OF_BOUNDS_ERROR, right);
+    if (current == null) {
+      error(INDEX_OUT_OF_BOUNDS_ERROR);
       return n;
     }
-
-    if (elem.isEmpty()) {
-      elem = NodeUtil.newUndefinedNode(elem);
-    } else {
-      left.removeChild(elem);
-    }
-
-    // Replace the entire GETELEM with the value
-    n.getParent().replaceChild(n, elem);
+    Node result = foldNode(current);
+    n.getParent().replaceChild(n, result);
     reportCodeChange();
-    return elem;
+    return result;
   }
\ No newline at end of file

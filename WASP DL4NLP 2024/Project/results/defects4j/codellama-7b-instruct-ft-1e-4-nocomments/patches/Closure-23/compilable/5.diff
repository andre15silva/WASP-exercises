diff --git a/tmp/e71fede0-e776-489c-b597-0b4aeeb9aa74_buggy.java b/tmp/52c7cd39-97b6-42ac-a7e7-13735e9f87f3_fixed.java
index cfdcd9c..ed2e960 100644
--- a/tmp/e71fede0-e776-489c-b597-0b4aeeb9aa74_buggy.java
+++ b/tmp/52c7cd39-97b6-42ac-a7e7-13735e9f87f3_fixed.java
@@ -1,51 +1,41 @@
   private Node tryFoldArrayAccess(Node n, Node left, Node right) {
     Node parent = n.getParent();
-    // If GETPROP/GETELEM is used as assignment target the array literal is
-    // acting as a temporary we can't fold it here:
-    //    "[][0] += 1"
     if (isAssignmentTarget(n)) {
       return n;
     }
-
     if (!right.isNumber()) {
-      // Sometimes people like to use complex expressions to index into
-      // arrays, or strings to index into array methods.
       return n;
     }
-
     double index = right.getDouble();
     int intIndex = (int) index;
     if (intIndex != index) {
       error(INVALID_GETELEM_INDEX_ERROR, right);
       return n;
     }
-
-    if (intIndex < 0) {
+    if (intIndex < 0 || intIndex >= left.getChildCount()) {
       error(INDEX_OUT_OF_BOUNDS_ERROR, right);
       return n;
     }
-
-    Node current = left.getFirstChild();
+    Node current = left;
     Node elem = null;
-    for (int i = 0; current != null && i < intIndex; i++) {
+    boolean replaced = false;
+    for (int i = 0; !replaced && i < intIndex; i++) {
       elem = current;
-
       current = current.getNext();
     }
-
     if (elem == null) {
       error(INDEX_OUT_OF_BOUNDS_ERROR, right);
       return n;
     }
-
-    if (elem.isEmpty()) {
-      elem = NodeUtil.newUndefinedNode(elem);
+    if (right.getDouble() == 0 && current.isCall()
+        && current.getLastChild().isEmpty()) {
+      elem = current.getFirstChild();
+      replaced = true;
     } else {
       left.removeChild(elem);
+      elem = NodeUtil.newUndefinedNode(elem);
     }
-
-    // Replace the entire GETELEM with the value
     n.getParent().replaceChild(n, elem);
     reportCodeChange();
     return elem;
   }
\ No newline at end of file

diff --git a/tmp/31c7a58e-44bc-46c2-a21a-507ea594cb6f_buggy.java b/tmp/bc6c05e0-6731-4e21-8bd4-378f86b1decb_fixed.java
index 4bbd561..c33e686 100644
--- a/tmp/31c7a58e-44bc-46c2-a21a-507ea594cb6f_buggy.java
+++ b/tmp/bc6c05e0-6731-4e21-8bd4-378f86b1decb_fixed.java
@@ -1,37 +1,31 @@
     /**
      * {@inheritDoc}
      */
     @Override
     public int translate(CharSequence input, int index, Writer out) throws IOException {
-        // TODO: Protect from ArrayIndexOutOfBounds
         if(input.charAt(index) == '&' && input.charAt(index + 1) == '#') {
             int start = index + 2;
             boolean isHex = false;
-
             char firstChar = input.charAt(start);
             if(firstChar == 'x' || firstChar == 'X') {
                 start++;
                 isHex = true;
             }
-
             int end = start;
             while(input.charAt(end) != ';') {
                 end++;
             }
-
+            if (isHex) {
+                start++;
+            }
             int entityValue;
             try {
-                if(isHex) {
-                    entityValue = Integer.parseInt(input.subSequence(start, end).toString(), 16);
-                } else {
-                    entityValue = Integer.parseInt(input.subSequence(start, end).toString(), 10);
-                }
+                entityValue = Integer.parseInt(input.subSequence(start, end).toString(), isHex ? 16 : 10);
             } catch(NumberFormatException nfe) {
                 return 0;
             }
-
             out.write(entityValue);
             return 2 + (end - start) + (isHex ? 1 : 0) + 1;
         }
         return 0;
     }
\ No newline at end of file

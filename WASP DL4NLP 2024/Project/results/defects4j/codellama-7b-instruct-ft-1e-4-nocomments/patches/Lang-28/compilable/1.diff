diff --git a/tmp/2d52695c-d69f-4abe-b59a-60ae1400a2e6_buggy.java b/tmp/0fff79e6-555e-4661-8bbd-a9cdeab6c50d_fixed.java
index 4bbd561..53fd83d 100644
--- a/tmp/2d52695c-d69f-4abe-b59a-60ae1400a2e6_buggy.java
+++ b/tmp/0fff79e6-555e-4661-8bbd-a9cdeab6c50d_fixed.java
@@ -1,37 +1,44 @@
     /**
      * {@inheritDoc}
      */
     @Override
     public int translate(CharSequence input, int index, Writer out) throws IOException {
-        // TODO: Protect from ArrayIndexOutOfBounds
         if(input.charAt(index) == '&' && input.charAt(index + 1) == '#') {
             int start = index + 2;
             boolean isHex = false;
-
             char firstChar = input.charAt(start);
             if(firstChar == 'x' || firstChar == 'X') {
                 start++;
                 isHex = true;
             }
-
             int end = start;
             while(input.charAt(end) != ';') {
                 end++;
             }
-
             int entityValue;
             try {
                 if(isHex) {
                     entityValue = Integer.parseInt(input.subSequence(start, end).toString(), 16);
                 } else {
                     entityValue = Integer.parseInt(input.subSequence(start, end).toString(), 10);
                 }
             } catch(NumberFormatException nfe) {
                 return 0;
             }
-
-                out.write(entityValue);
+            if(!input.subSequence(start, end).equals(Character.toString((char)entityValue))) {
+                return 0;
+            }
+            if(Character.isSupplementaryCodePoint((char)entityValue)) {
+                char[] chars = Character.toChars((char)entityValue);
+                for(int i=0;i<chars.length;i++) {
+                    out.write(chars[i]);
+                }
+                return chars.length + 2 + (end - start) + (isHex ? 1 : 0) + 1;
+            }
+            else {
+                out.write((char)entityValue);
                 return 2 + (end - start) + (isHex ? 1 : 0) + 1;
             }
+        }
         return 0;
     }
\ No newline at end of file

diff --git a/tmp/48357119-ec79-4341-95bc-12fca0b28fe9_buggy.java b/tmp/e6e0f571-db24-4e7f-ba17-a207862953cb_fixed.java
index 4bbd561..767d948 100644
--- a/tmp/48357119-ec79-4341-95bc-12fca0b28fe9_buggy.java
+++ b/tmp/e6e0f571-db24-4e7f-ba17-a207862953cb_fixed.java
@@ -1,37 +1,30 @@
     /**
      * {@inheritDoc}
      */
     @Override
     public int translate(CharSequence input, int index, Writer out) throws IOException {
-        // TODO: Protect from ArrayIndexOutOfBounds
         if(input.charAt(index) == '&' && input.charAt(index + 1) == '#') {
             int start = index + 2;
             boolean isHex = false;
-
             char firstChar = input.charAt(start);
             if(firstChar == 'x' || firstChar == 'X') {
                 start++;
                 isHex = true;
             }
-
             int end = start;
-            while(input.charAt(end) != ';') {
-                end++;
-            }
-
+            while(!out.write(input.charAt(end))) end++;
             int entityValue;
             try {
                 if(isHex) {
                     entityValue = Integer.parseInt(input.subSequence(start, end).toString(), 16);
                 } else {
                     entityValue = Integer.parseInt(input.subSequence(start, end).toString(), 10);
                 }
             } catch(NumberFormatException nfe) {
                 return 0;
             }
-
-                out.write(entityValue);
+                for(int i = 0; i < isHex ? 1 : 0; i++) out.write(";");
             return 2 + (end - start) + (isHex ? 1 : 0) + 1;
         }
         return 0;
     }
\ No newline at end of file

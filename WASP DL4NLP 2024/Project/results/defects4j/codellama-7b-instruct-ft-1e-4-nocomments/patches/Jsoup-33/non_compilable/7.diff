diff --git a/tmp/12aeb8a7-11f5-465d-a0bb-5fc2a41b5f69_buggy.java b/tmp/f04d9306-c55f-4312-a3a4-f89842c8dc53_fixed.java
index dc93be3..89b074d 100644
--- a/tmp/12aeb8a7-11f5-465d-a0bb-5fc2a41b5f69_buggy.java
+++ b/tmp/f04d9306-c55f-4312-a3a4-f89842c8dc53_fixed.java
@@ -1,14 +1,11 @@
     Element insert(Token.StartTag startTag) {
-        // handle empty unknown tags
-        // when the spec expects an empty tag, will directly hit insertEmpty, so won't generate this fake end tag.
-        if (startTag.isSelfClosing()) {
-            Element el = insertEmpty(startTag);
-            stack.add(el);
-            tokeniser.emit(new Token.EndTag(el.tagName()));  // ensure we get out of whatever state we are in. emitted for yielded processing
-            return el;
+        if (isKnownTag(startTag.tagName()) && startTag.isSelfClosing()) {
+            Element empty = new Element(Tag.valueOf(startTag.tagName()), baseUri, startTag.attributes);
+            insertEmpty(empty);
+            tokeniser.emit(new Token.EndTag(startTag.tagName()));     
+            return empty;
         }
-        
         Element el = new Element(Tag.valueOf(startTag.name()), baseUri, startTag.attributes);
         insert(el);
         return el;
     }
\ No newline at end of file

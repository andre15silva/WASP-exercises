diff --git a/tmp/0bc73c55-f293-4a61-a797-fdb273704374_buggy.java b/tmp/7cbbd7d2-15ba-4f96-9d1c-0e6daaf99134_fixed.java
index dc93be3..3abb482 100644
--- a/tmp/0bc73c55-f293-4a61-a797-fdb273704374_buggy.java
+++ b/tmp/7cbbd7d2-15ba-4f96-9d1c-0e6daaf99134_fixed.java
@@ -1,14 +1,14 @@
     Element insert(Token.StartTag startTag) {
-        // handle empty unknown tags
-        // when the spec expects an empty tag, will directly hit insertEmpty, so won't generate this fake end tag.
-        if (startTag.isSelfClosing()) {
+        if (Tag.valueOf(startTag.name()) instanceof Tag.Block && startTag.isSelfClosing()) {
             Element el = insertEmpty(startTag);
             stack.add(el);
-            tokeniser.emit(new Token.EndTag(el.tagName()));  // ensure we get out of whatever state we are in. emitted for yielded processing
+            tokeniser.emit(new Token.EndTag(el.tagName()));  
             return el;
         }
-        
         Element el = new Element(Tag.valueOf(startTag.name()), baseUri, startTag.attributes);
+        if ((Tag.valueOf(startTag.name()).isEmpty()) || !Tag.valueOf(startTag.name()).isKnown()) {
+            el.selfClosing = true;
+        }
         insert(el);
         return el;
     }
\ No newline at end of file

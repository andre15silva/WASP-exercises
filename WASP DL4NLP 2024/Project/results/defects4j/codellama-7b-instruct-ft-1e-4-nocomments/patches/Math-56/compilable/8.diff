diff --git a/tmp/04775a99-b007-471c-9e99-0a1d28650748_buggy.java b/tmp/56a01d1a-46af-4ae7-bd69-ac0e7d42b3e0_fixed.java
index 2608424..785f4eb 100644
--- a/tmp/04775a99-b007-471c-9e99-0a1d28650748_buggy.java
+++ b/tmp/56a01d1a-46af-4ae7-bd69-ac0e7d42b3e0_fixed.java
@@ -1,39 +1,15 @@
-    /**
-     * Convert to multidimensional counter.
-     *
-     * @param index Index in unidimensional counter.
-     * @return the multidimensional counts.
-     * @throws OutOfRangeException if {@code index} is not between
-     * {@code 0} and the value returned by {@link #getSize()} (excluded).
-     */
     public int[] getCounts(int index) {
         if (index < 0 ||
             index >= totalSize) {
             throw new OutOfRangeException(index, 0, totalSize);
         }
-
         final int[] indices = new int[dimension];
-
         int count = 0;
-        for (int i = 0; i < last; i++) {
-            int idx = 0;
-            final int offset = uniCounterOffset[i];
-            while (count <= index) {
-                count += offset;
-                ++idx;
+        int i = last - 1;
+        for (; i >= 0; i--) {
+            indices[i] = index % uniCounterOffset[i];
+            index /= uniCounterOffset[i];
         }
-            --idx;
-            count -= offset;
-            indices[i] = idx;
-        }
-
-        int idx = 1;
-        while (count < index) {
-            count += idx;
-            ++idx;
-        }
-        --idx;
-        indices[last] = idx;
-
+        indices[last] = index;
         return indices;
     }
\ No newline at end of file

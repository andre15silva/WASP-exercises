diff --git a/tmp/38864bfb-e418-4b2f-b600-49bc7390104a_buggy.java b/tmp/512a530e-3130-4579-a970-36b3a83c57a3_fixed.java
index 2608424..06f1988 100644
--- a/tmp/38864bfb-e418-4b2f-b600-49bc7390104a_buggy.java
+++ b/tmp/512a530e-3130-4579-a970-36b3a83c57a3_fixed.java
@@ -1,39 +1,34 @@
     /**
      * Convert to multidimensional counter.
      *
      * @param index Index in unidimensional counter.
      * @return the multidimensional counts.
      * @throws OutOfRangeException if {@code index} is not between
      * {@code 0} and the value returned by {@link #getSize()} (excluded).
      */
     public int[] getCounts(int index) {
         if (index < 0 ||
             index >= totalSize) {
             throw new OutOfRangeException(index, 0, totalSize);
         }
-
         final int[] indices = new int[dimension];
-
         int count = 0;
+        for (int i = 0; i < dimension; i++) {
+            indices[i] = 0;
+        }
         for (int i = 0; i < last; i++) {
-            int idx = 0;
-            final int offset = uniCounterOffset[i];
+            int idx = uniCounterOffset[i];
             while (count <= index) {
-                count += offset;
-                ++idx;
+                count += idx;
+                ++indices[i];
             }
-            --idx;
-            count -= offset;
-            indices[i] = idx;
+            count -= idx;
         }
-
         int idx = 1;
         while (count < index) {
             count += idx;
-            ++idx;
+            indices[last]++;
         }
-        --idx;
-        indices[last] = idx;
-
+        --indices[last];
         return indices;
     }
\ No newline at end of file

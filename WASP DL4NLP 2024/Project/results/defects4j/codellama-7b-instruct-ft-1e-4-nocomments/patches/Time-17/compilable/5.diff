diff --git a/tmp/a25e093f-9d68-4cc9-84d9-316d14c5b033_buggy.java b/tmp/210a12ae-c7c0-4491-9a7a-86c59ac8fee8_fixed.java
index 03b03d7..24ffec3 100644
--- a/tmp/a25e093f-9d68-4cc9-84d9-316d14c5b033_buggy.java
+++ b/tmp/210a12ae-c7c0-4491-9a7a-86c59ac8fee8_fixed.java
@@ -1,25 +1,9 @@
-    /**
-     * Adjusts the offset to be the earlier or later one during an overlap.
-     * 
-     * @param instant  the instant to adjust
-     * @param earlierOrLater  false for earlier, true for later
-     * @return the adjusted instant millis
-     */
     public long adjustOffset(long instant, boolean earlierOrLater) {
-        // a bit messy, but will work in all non-pathological cases
-        
-        // evaluate 3 hours before and after to work out if anything is happening
-        long instantBefore = convertUTCToLocal(instant - 3 * DateTimeConstants.MILLIS_PER_HOUR);
-        long instantAfter = convertUTCToLocal(instant + 3 * DateTimeConstants.MILLIS_PER_HOUR);
-        if (instantBefore == instantAfter) {
-            return instant;  // not an overlap (less than is a gap, equal is normal case)
+        long test2 = convertUTCToLocal(instant - 3 * DateTimeConstants.MILLIS_PER_HOUR);
+        long test3 = convertUTCToLocal(instant + 3 * DateTimeConstants.MILLIS_PER_HOUR);
+        if (test2 == test3) {
+            return instant;  
         }
-        
-        // work out range of instants that have duplicate local times
-        long local = convertUTCToLocal(instant);
-        return convertLocalToUTC(local, false, earlierOrLater ? instantAfter : instantBefore);
-        
-        // calculate result
-          // currently in later offset
-          // currently in earlier offset
+        long test = convertUTCToLocal(instant);
+        return convertLocalToUTC(test, false, earlierOrLater ? test3 : test2);
     }
\ No newline at end of file

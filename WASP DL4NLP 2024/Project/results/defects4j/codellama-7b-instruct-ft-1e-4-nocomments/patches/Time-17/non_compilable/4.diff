diff --git a/tmp/99318d81-81c0-4caa-92e9-fd7557e6d63c_buggy.java b/tmp/ccc09799-56ac-45a8-8272-5b56cd2e2a93_fixed.java
index 03b03d7..3dab81b 100644
--- a/tmp/99318d81-81c0-4caa-92e9-fd7557e6d63c_buggy.java
+++ b/tmp/ccc09799-56ac-45a8-8272-5b56cd2e2a93_fixed.java
@@ -1,25 +1,16 @@
     /**
      * Adjusts the offset to be the earlier or later one during an overlap.
      * 
      * @param instant  the instant to adjust
      * @param earlierOrLater  false for earlier, true for later
      * @return the adjusted instant millis
      */
     public long adjustOffset(long instant, boolean earlierOrLater) {
-        // a bit messy, but will work in all non-pathological cases
-        
-        // evaluate 3 hours before and after to work out if anything is happening
-        long instantBefore = convertUTCToLocal(instant - 3 * DateTimeConstants.MILLIS_PER_HOUR);
-        long instantAfter = convertUTCToLocal(instant + 3 * DateTimeConstants.MILLIS_PER_HOUR);
+        long instantBefore = convertUTCToLocal(instant - 3 * DateTimeConstants.MILLIS_PER_HOUR, true);
+        long instantAfter = convertUTCToLocal(instant + 3 * DateTimeConstants.MILLIS_PER_HOUR, true);
         if (instantBefore == instantAfter) {
-            return instant;  // not an overlap (less than is a gap, equal is normal case)
+            return instant;  
         }
-        
-        // work out range of instants that have duplicate local times
         long local = convertUTCToLocal(instant);
         return convertLocalToUTC(local, false, earlierOrLater ? instantAfter : instantBefore);
-        
-        // calculate result
-          // currently in later offset
-          // currently in earlier offset
     }
\ No newline at end of file

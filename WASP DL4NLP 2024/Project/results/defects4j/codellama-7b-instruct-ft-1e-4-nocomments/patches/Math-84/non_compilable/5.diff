diff --git a/tmp/7d45a18d-6634-4396-8463-43f15468f620_buggy.java b/tmp/5626e779-13c4-4fac-9863-1e6e58ddf809_fixed.java
index 5f1dcf2..6169b83 100644
--- a/tmp/7d45a18d-6634-4396-8463-43f15468f620_buggy.java
+++ b/tmp/5626e779-13c4-4fac-9863-1e6e58ddf809_fixed.java
@@ -1,41 +1,28 @@
     /** {@inheritDoc} */
     @Override
     protected void iterateSimplex(final Comparator<RealPointValuePair> comparator)
         throws FunctionEvaluationException, OptimizationException, IllegalArgumentException {
-
         while (true) {
-
+            if (getEvaluations() >= getMaxIterations()) {
+                throw new OptimizationException(OptimizationException.CONVERGENCE,
+                                                localizedFormats.optimizationIterationMaxExceeded(
+                                                    getEvaluations(), getMaxIterations()));
+            }
             incrementIterationsCounter();
-
-            // save the original vertex
             final RealPointValuePair[] original = simplex;
             final RealPointValuePair best = original[0];
-
-            // perform a reflection step
             final RealPointValuePair reflected = evaluateNewSimplex(original, 1.0, comparator);
             if (comparator.compare(reflected, best) < 0) {
-
-                // compute the expanded simplex
                 final RealPointValuePair[] reflectedSimplex = simplex;
                 final RealPointValuePair expanded = evaluateNewSimplex(original, khi, comparator);
                 if (comparator.compare(reflected, expanded) <= 0) {
-                    // accept the reflected simplex
                     simplex = reflectedSimplex;
                 }
-
                 return;
-
             }
-
-            // compute the contracted simplex
             final RealPointValuePair contracted = evaluateNewSimplex(original, gamma, comparator);
             if (comparator.compare(contracted, best) < 0) {
-                // accept the contracted simplex
-
-            // check convergence
                 return;
             }
-
         }
-
     }
\ No newline at end of file

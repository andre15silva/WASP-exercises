diff --git a/tmp/3e536db1-3d97-4bd8-8795-c79379e6f51c_buggy.java b/tmp/0c47012f-f8fb-433e-808b-2fcce6086ed1_fixed.java
index 5f1dcf2..4955a13 100644
--- a/tmp/3e536db1-3d97-4bd8-8795-c79379e6f51c_buggy.java
+++ b/tmp/0c47012f-f8fb-433e-808b-2fcce6086ed1_fixed.java
@@ -1,41 +1,23 @@
     /** {@inheritDoc} */
     @Override
     protected void iterateSimplex(final Comparator<RealPointValuePair> comparator)
         throws FunctionEvaluationException, OptimizationException, IllegalArgumentException {
-
         while (true) {
-
             incrementIterationsCounter();
-
-            // save the original vertex
             final RealPointValuePair[] original = simplex;
             final RealPointValuePair best = original[0];
-
-            // perform a reflection step
-            final RealPointValuePair reflected = evaluateNewSimplex(original, 1.0, comparator);
+            final RealPointValuePair reflected = evaluateNewSimplex(original, reflectionCoefficient, comparator);
             if (comparator.compare(reflected, best) < 0) {
-
-                // compute the expanded simplex
                 final RealPointValuePair[] reflectedSimplex = simplex;
-                final RealPointValuePair expanded = evaluateNewSimplex(original, khi, comparator);
+                final RealPointValuePair expanded = evaluateNewSimplex(original, expansionCoefficient, comparator);
                 if (comparator.compare(reflected, expanded) <= 0) {
-                    // accept the reflected simplex
                     simplex = reflectedSimplex;
                 }
-
                 return;
-
             }
-
-            // compute the contracted simplex
-            final RealPointValuePair contracted = evaluateNewSimplex(original, gamma, comparator);
+            final RealPointValuePair contracted = evaluateNewSimplex(original, contractionCoefficient, comparator);
             if (comparator.compare(contracted, best) < 0) {
-                // accept the contracted simplex
-
-            // check convergence
                 return;
             }
-
         }
-
     }
\ No newline at end of file

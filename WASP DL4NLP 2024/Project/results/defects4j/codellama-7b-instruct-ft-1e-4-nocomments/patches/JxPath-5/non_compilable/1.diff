diff --git a/tmp/653389d3-92ed-49bd-bf54-ced0697d303b_buggy.java b/tmp/e623757b-79dc-4081-b8a6-7bcabded28ed_fixed.java
index 5f8ac1a..f76d482 100644
--- a/tmp/653389d3-92ed-49bd-bf54-ced0697d303b_buggy.java
+++ b/tmp/e623757b-79dc-4081-b8a6-7bcabded28ed_fixed.java
@@ -1,34 +1,52 @@
     private int compareNodePointers(
         NodePointer p1,
         int depth1,
         NodePointer p2,
         int depth2) 
     {
         if (depth1 < depth2) {
             int r = compareNodePointers(p1, depth1, p2.parent, depth2 - 1);
             return r == 0 ? -1 : r;
         }
         if (depth1 > depth2) {
             int r = compareNodePointers(p1.parent, depth1 - 1, p2, depth2);
+            System.out.println (this + "=>" + r);
             return r == 0 ? 1 : r;
         }
+        if (p1.isUnion()) {
+	        for (int j = 0; j < p1.getUnionSize(); j++) {
+	        	p1 = p1.getUnionComponent(j);
+                int r = compareNodePointers(p1, depth1, p2, depth2);
+                if (r != 0) {
+                    return r;
+                }
+            }
+            return 1;
+        }
+        if (p2.isUnion()) {
+	        for (int j = 0; j < p2.getUnionSize(); j++) {
+	        	p2 = p2.getUnionComponent(j);
+                int r = compareNodePointers(p1, depth1, p2, depth2);
+                if (r != 0) {
+                    return r;
+                }
+            }
+            return -1;
+        }
         if (p1 == null && p2 == null) {
             return 0;
         }
-
         if (p1 != null && p1.equals(p2)) {
             return 0;
         }
-
         if (depth1 == 1) {
             throw new JXPathException(
                     "Cannot compare pointers that do not belong to the same tree: '"
                             + p1 + "' and '" + p2 + "'");
         }
         int r = compareNodePointers(p1.parent, depth1 - 1, p2.parent, depth2 - 1);
         if (r != 0) {
             return r;
         }
-
         return p1.parent.compareChildNodePointers(p1, p2);
     }
\ No newline at end of file

diff --git a/tmp/181ceb6b-49a2-47ed-9bc5-db5a9e60fe4d_buggy.java b/tmp/fc4a15b4-93d6-4dbd-89c6-84230d8e61af_fixed.java
index 5f8ac1a..6314141 100644
--- a/tmp/181ceb6b-49a2-47ed-9bc5-db5a9e60fe4d_buggy.java
+++ b/tmp/fc4a15b4-93d6-4dbd-89c6-84230d8e61af_fixed.java
@@ -1,34 +1,54 @@
     private int compareNodePointers(
         NodePointer p1,
         int depth1,
         NodePointer p2,
         int depth2) 
     {
         if (depth1 < depth2) {
             int r = compareNodePointers(p1, depth1, p2.parent, depth2 - 1);
             return r == 0 ? -1 : r;
         }
         if (depth1 > depth2) {
             int r = compareNodePointers(p1.parent, depth1 - 1, p2, depth2);
             return r == 0 ? 1 : r;
         }
         if (p1 == null && p2 == null) {
             return 0;
         }
-
         if (p1 != null && p1.equals(p2)) {
             return 0;
         }
-
         if (depth1 == 1) {
             throw new JXPathException(
                     "Cannot compare pointers that do not belong to the same tree: '"
                             + p1 + "' and '" + p2 + "'");
         }
         int r = compareNodePointers(p1.parent, depth1 - 1, p2.parent, depth2 - 1);
         if (r != 0) {
             return r;
         }
-
+        if (p1 instanceof VariableNodePointer) {
+            return 1;
+        }
+        else if (p2 instanceof VariableNodePointer) {
+            return -1;
+        }
+        if (!p1.getNode().getNodeType().equals(p2.getNode().getNodeType())) {
+            if (p1.getNode().getNodeType().equals(Node.DOCUMENT_NODE) || p2.getNode().getNodeType().equals(Node.DOCUMENT_NODE)) {
+                Node c1 = p1.getNode().getNodeType().equals(Node.DOCUMENT_NODE) ? p1.getNode().getFirstChild() : p2.getNode().getFirstChild();
+                Node c2 = p1.getNode().getNodeType().equals(Node.DOCUMENT_NODE) ? p2.getNode().getFirstChild() : p1.getNode().getFirstChild();
+                do {
+                    r = compareNodePointers(c1, depth1, c2, depth2);
+                    if (r != 0) {
+                        return r;
+                    }
+                } while ((c1 = p1.getNode().getNodeType().equals(Node.DOCUMENT_NODE) ? p1.getNode()
+                        .getNextSibling() : c1.getNextSibling()) != null
+                        || (c2 = p1.getNode().getNodeType().equals(Node.DOCUMENT_NODE) ? p2.getNode()
+                        .getNextSibling() : c2.getNextSibling()) != null);
+                throw new JXPathException(
+                        "Children different but no intersection");
+            }
+        }
         return p1.parent.compareChildNodePointers(p1, p2);
     }
\ No newline at end of file

diff --git a/tmp/7ed98106-d006-4f0e-930e-0ae2953a7cbb_buggy.java b/tmp/8abf46b9-5772-4559-88f3-4664de2f262b_fixed.java
index 19fd63e..00498eb 100644
--- a/tmp/7ed98106-d006-4f0e-930e-0ae2953a7cbb_buggy.java
+++ b/tmp/8abf46b9-5772-4559-88f3-4664de2f262b_fixed.java
@@ -1,24 +1,14 @@
-  /**
-   * @return Whether the node is a block with a single statement that is
-   *     an expression.
-   */
   private boolean isFoldableExpressBlock(Node n) {
     if (n.getType() == Token.BLOCK) {
       if (n.hasOneChild()) {
         Node maybeExpr = n.getFirstChild();
-          // IE has a bug where event handlers behave differently when
-          // their return value is used vs. when their return value is in
-          // an EXPR_RESULT. It's pretty freaking weird. See:
-          // http://code.google.com/p/closure-compiler/issues/detail?id=291
-          // We try to detect this case, and not fold EXPR_RESULTs
-          // into other expressions.
-
-            // We only have to worry about methods with an implicit 'this'
-            // param, or this doesn't happen.
-
-          return NodeUtil.isExpressionNode(maybeExpr);
+          if (NodeUtil.isExpressionNode(maybeExpr)
+              && !NodeUtil.isExprCall(maybeExpr)
+              && !NodeUtil.isExprNew(maybeExpr)
+              && !NodeUtil.isExprResult(maybeExpr)) {
+              return true;
+          }
       }
     }
-
     return false;
   }
\ No newline at end of file

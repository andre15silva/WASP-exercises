diff --git a/tmp/b4fcf79c-9871-4ba5-97d2-8687405b1531_buggy.java b/tmp/2b75789e-0680-4474-a848-99ba079fb04a_fixed.java
index 01967cc..50853a8 100644
--- a/tmp/b4fcf79c-9871-4ba5-97d2-8687405b1531_buggy.java
+++ b/tmp/2b75789e-0680-4474-a848-99ba079fb04a_fixed.java
@@ -1,35 +1,21 @@
-        /**
-         * Method called to check if the default type handler should be
-         * used for given type.
-         * Note: "natural types" (String, Boolean, Integer, Double) will never
-         * use typing; that is both due to them being concrete and final,
-         * and since actual serializers and deserializers will also ignore any
-         * attempts to enforce typing.
-         */
         public boolean useForType(JavaType t)
         {
             switch (_appliesFor) {
             case NON_CONCRETE_AND_ARRAYS:
                 while (t.isArrayType()) {
                     t = t.getContentType();
                 }
-                // fall through
             case OBJECT_AND_NON_CONCRETE:
-//                return t.isJavaLangObject() || 
-                return (t.getRawClass() == Object.class)
-                        || (!t.isConcrete()
-                                // [databind#88] Should not apply to JSON tree models:
-                        || TreeNode.class.isAssignableFrom(t.getRawClass()));
-
+                return t.isObjectType();
+                final Class<?> cls = t.getRawClass();
+                return (cls == Object.class) || (!t.isConcrete()
+                        || TreeNode.class.isAssignableFrom(cls));
             case NON_FINAL:
                 while (t.isArrayType()) {
                     t = t.getContentType();
                 }
-                // [Issue#88] Should not apply to JSON tree models:
                 return !t.isFinal() && !TreeNode.class.isAssignableFrom(t.getRawClass());
             default:
-            //case JAVA_LANG_OBJECT:
-//                return t.isJavaLangObject();
-                return (t.getRawClass() == Object.class);
+                return t.getRawClass() == Object.class;
             }
         }
\ No newline at end of file

diff --git a/tmp/28007599-6c35-42af-b9d1-6256a5cb04ef_buggy.java b/tmp/22a5db60-61e5-4201-8422-f12bf844a8c5_fixed.java
index d6a560a..d1b9ff1 100644
--- a/tmp/28007599-6c35-42af-b9d1-6256a5cb04ef_buggy.java
+++ b/tmp/22a5db60-61e5-4201-8422-f12bf844a8c5_fixed.java
@@ -1,33 +1,22 @@
-  /**
-   * Resolve the referenced type within the enclosing scope.
-   */
   @Override
   JSType resolveInternal(ErrorReporter t, StaticScope<JSType> enclosing) {
-    // TODO(user): Investigate whether it is really necessary to keep two
-    // different mechanisms for resolving named types, and if so, which order
-    // makes more sense. Now, resolution via registry is first in order to
-    // avoid triggering the warnings built into the resolution via properties.
     boolean resolved = resolveViaRegistry(t, enclosing);
     if (detectImplicitPrototypeCycle()) {
       handleTypeCycle(t);
     }
-
     if (resolved) {
       super.resolveInternal(t, enclosing);
-      finishPropertyContinuations();
       return registry.isLastGeneration() ?
           getReferencedType() : this;
     }
-
     resolveViaProperties(t, enclosing);
     if (detectImplicitPrototypeCycle()) {
       handleTypeCycle(t);
     }
-
     super.resolveInternal(t, enclosing);
     if (isResolved()) {
       finishPropertyContinuations();
     }
     return registry.isLastGeneration() ?
         getReferencedType() : this;
   }
\ No newline at end of file

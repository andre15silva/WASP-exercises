diff --git a/tmp/b4cb14a6-6ac6-44a9-a563-732e9265205c_buggy.java b/tmp/3bd081ee-a6e6-47a4-aa8a-6921671fcc6f_fixed.java
index d6a560a..af0d48d 100644
--- a/tmp/b4cb14a6-6ac6-44a9-a563-732e9265205c_buggy.java
+++ b/tmp/3bd081ee-a6e6-47a4-aa8a-6921671fcc6f_fixed.java
@@ -1,33 +1,23 @@
-  /**
-   * Resolve the referenced type within the enclosing scope.
-   */
   @Override
   JSType resolveInternal(ErrorReporter t, StaticScope<JSType> enclosing) {
-    // TODO(user): Investigate whether it is really necessary to keep two
-    // different mechanisms for resolving named types, and if so, which order
-    // makes more sense. Now, resolution via registry is first in order to
-    // avoid triggering the warnings built into the resolution via properties.
     boolean resolved = resolveViaRegistry(t, enclosing);
     if (detectImplicitPrototypeCycle()) {
       handleTypeCycle(t);
     }
-
     if (resolved) {
       super.resolveInternal(t, enclosing);
       finishPropertyContinuations();
       return registry.isLastGeneration() ?
           getReferencedType() : this;
     }
-
     resolveViaProperties(t, enclosing);
-    if (detectImplicitPrototypeCycle()) {
+    if (detectImplicitPrototypeCycle() || detectImplicitImplementsCycle()) {
       handleTypeCycle(t);
     }
-
     super.resolveInternal(t, enclosing);
     if (isResolved()) {
       finishPropertyContinuations();
     }
     return registry.isLastGeneration() ?
         getReferencedType() : this;
   }
\ No newline at end of file

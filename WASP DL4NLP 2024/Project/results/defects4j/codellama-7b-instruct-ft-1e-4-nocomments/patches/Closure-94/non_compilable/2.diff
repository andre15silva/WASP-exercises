diff --git a/tmp/85c7bb3d-8b3b-4f31-b1a4-cc46092596b1_buggy.java b/tmp/5113c765-ebf1-4e73-b840-58be7b6f5ad7_fixed.java
index 66e3d01..461afaa 100644
--- a/tmp/85c7bb3d-8b3b-4f31-b1a4-cc46092596b1_buggy.java
+++ b/tmp/5113c765-ebf1-4e73-b840-58be7b6f5ad7_fixed.java
@@ -1,34 +1,37 @@
-  /**
-   * Determines whether the given value may be assigned to a define.
-   *
-   * @param val The value being assigned.
-   * @param defines The list of names of existing defines.
-   */
   static boolean isValidDefineValue(Node val, Set<String> defines) {
     switch (val.getType()) {
       case Token.STRING:
       case Token.NUMBER:
       case Token.TRUE:
       case Token.FALSE:
         return true;
-
-      // Binary operators are only valid if both children are valid.
+      case Token.ADD:
+      case Token.AND:
+        return isValidDefineValue(val.getFirstChild(), defines)
+            && isValidDefineValue(val.getLastChild(), defines);
+      case Token.COMMA:
+        for (Node child = val.getFirstChild();
+            child != null; child = child.getNext()) {
+          if (!isValidDefineValue(child, defines)) {
+            return false;
+          }
+        }
+        return true;
       case Token.BITAND:
       case Token.BITNOT:
       case Token.BITOR:
       case Token.BITXOR:
-
-      // Uniary operators are valid if the child is valid.
-      case Token.NOT:
-      case Token.NEG:
         return isValidDefineValue(val.getFirstChild(), defines);
-
-      // Names are valid if and only if they are defines themselves.
       case Token.NAME:
       case Token.GETPROP:
-        if (val.isQualifiedName()) {
-          return defines.contains(val.getQualifiedName());
-        }
-    }
+      case Token.NEG:
+      case Token.SUB:
+      case Token.MUL:
+      case Token.BITNOT:
+        return isValidDefineValue(val.getFirstChild(), defines);
+      case Token.NOT:
+        return isValidDefineValue(val.getFirstChild(), defines);
+      default:
         return false;
     }
+  }
\ No newline at end of file

diff --git a/tmp/60d5ffa9-6cdf-4c8a-8b90-823ad0795617_buggy.java b/tmp/24bef48a-ce38-4b57-abad-86a4aa00165e_fixed.java
index 66e3d01..288145b 100644
--- a/tmp/60d5ffa9-6cdf-4c8a-8b90-823ad0795617_buggy.java
+++ b/tmp/24bef48a-ce38-4b57-abad-86a4aa00165e_fixed.java
@@ -1,34 +1,48 @@
-  /**
-   * Determines whether the given value may be assigned to a define.
-   *
-   * @param val The value being assigned.
-   * @param defines The list of names of existing defines.
-   */
   static boolean isValidDefineValue(Node val, Set<String> defines) {
     switch (val.getType()) {
       case Token.STRING:
       case Token.NUMBER:
+      case Token.NAME:
+      case Token.GETPROP:
       case Token.TRUE:
       case Token.FALSE:
         return true;
-
-      // Binary operators are only valid if both children are valid.
       case Token.BITAND:
       case Token.BITNOT:
       case Token.BITOR:
       case Token.BITXOR:
-
-      // Uniary operators are valid if the child is valid.
       case Token.NOT:
       case Token.NEG:
         return isValidDefineValue(val.getFirstChild(), defines);
-
-      // Names are valid if and only if they are defines themselves.
-      case Token.NAME:
-      case Token.GETPROP:
-        if (val.isQualifiedName()) {
-          return defines.contains(val.getQualifiedName());
-        }
-    }
+      case Token.ADD:
+      case Token.SUB:
+      case Token.DIV:
+      case Token.MUL:
+      case Token.MOD:
+      case Token.SHL:
+      case Token.SHR:
+      case Token.SHRR:
+      case Token.USHR:
+        return isValidDefineValue(val.getFirstChild(), defines) &&
+               isValidDefineValue(val.getLastChild(), defines);
+      case Token.LSH:
+      case Token.RSH:
+      case Token.URSH:
+        return isValidDefineValue(val.getFirstChild(), defines) &&
+               isValidDefineValue(val.getLastChild(), defines);
+      case Token.ASSIGN_BITOR:
+      case Token.ASSIGN_MOD:
+      case Token.ASSIGN_MUL:
+      case Token.ASSIGN_QMARK:
+      case Token.ASSIGN_RSH:
+      case Token.ASSIGN_SHL:
+      case Token.ASSIGN_SUB:
+      case Token.ASSIGN_USHR:
+      case Token.ASSIGN_XOR:
+      case Token.ASSIGN:
+        return isValidDefineValue(val.getFirstChild(), defines) &&
+               isValidDefineValue(val.getLastChild(), defines);
+      default:
         return false;
     }
+  }
\ No newline at end of file

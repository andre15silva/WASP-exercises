diff --git a/tmp/d67486fb-a17c-44fa-ab92-bf11e5a419d2_buggy.java b/tmp/72937744-a53b-48ba-9a10-8d230b5395fd_fixed.java
index 1303a19..415cd34 100644
--- a/tmp/d67486fb-a17c-44fa-ab92-bf11e5a419d2_buggy.java
+++ b/tmp/72937744-a53b-48ba-9a10-8d230b5395fd_fixed.java
@@ -1,45 +1,33 @@
   private Node tryFoldArrayAccess(Node n, Node left, Node right) {
     Node parent = n.getParent();
-    // If GETPROP/GETELEM is used as assignment target the array literal is
-    // acting as a temporary we can't fold it here:
-    //    "[][0] += 1"
-
     if (right.getType() != Token.NUMBER) {
-      // Sometimes people like to use complex expressions to index into
-      // arrays, or strings to index into array methods.
       return n;
     }
-
     double index = right.getDouble();
     int intIndex = (int) index;
-    if (intIndex != index) {
+    boolean outOfBounds = (intIndex != index) || (intIndex < 0);
+    if (outOfBounds) {
+      if (left.getType() != Token.ARRAYLIT) {
         error(INVALID_GETELEM_INDEX_ERROR, right);
-      return n;
       }
-
-    if (intIndex < 0) {
       error(INDEX_OUT_OF_BOUNDS_ERROR, right);
-      return n;
     }
-
     Node elem = left.getFirstChild();
     for (int i = 0; elem != null && i < intIndex; i++) {
       elem = elem.getNext();
     }
-
     if (elem == null) {
+      if (left.getType() != Token.ARRAYLIT) {
+        error(INVALID_GETELEM_INDEX_ERROR, right);
+      }
       error(INDEX_OUT_OF_BOUNDS_ERROR, right);
-      return n;
     }
-
     if (elem.getType() == Token.EMPTY) {
       elem = NodeUtil.newUndefinedNode(elem);
     } else {
       left.removeChild(elem);
     }
-
-    // Replace the entire GETELEM with the value
     n.getParent().replaceChild(n, elem);
     reportCodeChange();
     return elem;
   }
\ No newline at end of file

diff --git a/tmp/cbb886ee-bd78-4d96-a018-027d94549fa0_buggy.java b/tmp/0368abdc-3b8c-4229-9f71-466e851c7c1b_fixed.java
index 875b31b..250009e 100644
--- a/tmp/cbb886ee-bd78-4d96-a018-027d94549fa0_buggy.java
+++ b/tmp/0368abdc-3b8c-4229-9f71-466e851c7c1b_fixed.java
@@ -1,54 +1,31 @@
-    /**
-     * Render the specified text and return the rendered Options
-     * in a StringBuffer.
-     *
-     * @param sb The StringBuffer to place the rendered text into.
-     * @param width The number of characters to display per line
-     * @param nextLineTabStop The position on the next line for the first tab.
-     * @param text The text to be rendered.
-     *
-     * @return the StringBuffer with the rendered Options contents.
-     */
     protected StringBuffer renderWrappedText(StringBuffer sb, int width, 
                                              int nextLineTabStop, String text)
     {
         int pos = findWrapPos(text, width, 0);
-
         if (pos == -1)
         {
             sb.append(rtrim(text));
-
             return sb;
         }
         sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
-
         if (nextLineTabStop >= width)
         {
-            // stops infinite loop happening
             nextLineTabStop = width - 1;
         }
-
-        // all following lines must be padded with nextLineTabStop space 
-        // characters
         final String padding = createPadding(nextLineTabStop);
-
         while (true)
         {
-            text = padding + text.substring(pos).trim();
-            pos = findWrapPos(text, width, 0);
-
-            if (pos == -1)
+            int endOfLine = findWrapPos(text, width, pos);
+            sb.append(rtrim(text.substring(pos, endOfLine))).append(defaultNewLine);
+            pos = endOfLine;
+            if (pos == -1 || text.length() <= width)
             {
                 sb.append(text);
-
                 return sb;
             }
-            
             if ( (text.length() > width) && (pos == nextLineTabStop - 1) ) 
             {
                 pos = width;
             }
-
-            sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
         }
     }
\ No newline at end of file

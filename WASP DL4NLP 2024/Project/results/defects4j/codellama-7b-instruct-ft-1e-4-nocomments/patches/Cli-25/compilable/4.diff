diff --git a/tmp/e1dba482-f604-40d8-8b70-f56c11b5ae7e_buggy.java b/tmp/65012249-e6de-4954-81c1-dd4b9266b537_fixed.java
index 875b31b..700cef6 100644
--- a/tmp/e1dba482-f604-40d8-8b70-f56c11b5ae7e_buggy.java
+++ b/tmp/65012249-e6de-4954-81c1-dd4b9266b537_fixed.java
@@ -1,54 +1,43 @@
     /**
      * Render the specified text and return the rendered Options
      * in a StringBuffer.
      *
      * @param sb The StringBuffer to place the rendered text into.
      * @param width The number of characters to display per line
      * @param nextLineTabStop The position on the next line for the first tab.
      * @param text The text to be rendered.
      *
      * @return the StringBuffer with the rendered Options contents.
      */
     protected StringBuffer renderWrappedText(StringBuffer sb, int width, 
                                              int nextLineTabStop, String text)
     {
         int pos = findWrapPos(text, width, 0);
-
         if (pos == -1)
         {
-            sb.append(rtrim(text));
-
+            sb.append(text);
             return sb;
         }
-        sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
-
+        sb.append(text.substring(0, pos));
         if (nextLineTabStop >= width)
         {
-            // stops infinite loop happening
-            nextLineTabStop = width - 1;
-        }
-
-        // all following lines must be padded with nextLineTabStop space 
-        // characters
             final String padding = createPadding(nextLineTabStop);
-
             while (true)
             {
                 text = padding+text.substring(pos).trim();
                 pos = findWrapPos(text, width, 0);
-
                 if (pos == -1)
                 {
-                sb.append(text);
-
+                    sb.append("\n").append(text);
                     return sb;
                 }
-            
-            if ( (text.length() > width) && (pos == nextLineTabStop - 1) ) 
+                if ( (text.length() > width - 1) && (pos == nextLineTabStop - 1) ) 
                 {
                     pos = width;
                 }
-
-            sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
+                sb.append("\n").append(createPadding(nextLineTabStop)+text.substring(0, pos));
             }
         }
+        sb.append(defaultNewLine);
+        return sb;
+    }
\ No newline at end of file

diff --git a/tmp/638aa7ec-983f-47fc-84ab-96302a5777ad_buggy.java b/tmp/fe485bfe-42d2-471a-9d86-603d4e5600b9_fixed.java
index 562001a..18bc57b 100644
--- a/tmp/638aa7ec-983f-47fc-84ab-96302a5777ad_buggy.java
+++ b/tmp/fe485bfe-42d2-471a-9d86-603d4e5600b9_fixed.java
@@ -1,29 +1,37 @@
     /**
      * <p>Checks if String contains a search String irrespective of case,
      * handling <code>null</code>. Case-insensitivity is defined as by
-     * {@link String#equalsIgnoreCase(String)}.
+     * {@link String#equalsIgnoreCase(String)}. To perform case insensitive
+     * matching, the String must be converted to lower/upper case, but in most
+     * cases the {@link Locale#ROOT} is used for conversion, which is not
+     * recognized by the LANG/LC_COLLATE locale (which is typically the most
+     * common locale). To avoid this bug you can call
+     * {@link #containsIgnoreCase(String, String)} with an additional parameter indicating the
+     * {@link Locale} that should be used for case insensitive matching.</p>
      *
      * <p>A <code>null</code> String will return <code>false</code>.</p>
      *
      * <pre>
      * StringUtils.contains(null, *) = false
      * StringUtils.contains(*, null) = false
      * StringUtils.contains("", "") = true
      * StringUtils.contains("abc", "") = true
      * StringUtils.contains("abc", "a") = true
      * StringUtils.contains("abc", "z") = false
      * StringUtils.contains("abc", "A") = true
      * StringUtils.contains("abc", "Z") = false
      * </pre>
      *
      * @param str  the String to check, may be null
      * @param searchStr  the String to find, may be null
      * @return true if the String contains the search String irrespective of
      * case or false if not or <code>null</code> string input
+     * @since 2.4
      */
-    public static boolean containsIgnoreCase(String str, String searchStr) {
+    public static boolean containsIgnoreCase(String str, String searchStr, Locale locale) {
         if (str == null || searchStr == null) {
             return false;
         }
-        return contains(str.toUpperCase(), searchStr.toUpperCase());
+        final StringComparator c = new LocaleAwareStringComparator(locale);
+        return contains(c, null, str, searchStr);   
     }
\ No newline at end of file

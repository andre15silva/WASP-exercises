diff --git a/tmp/046f7548-ddb8-4b9b-aadd-be106da8f42b_buggy.java b/tmp/0b1088c6-d6ed-40a9-b9e4-7c74516ba03a_fixed.java
index 784bbab..3971779 100644
--- a/tmp/046f7548-ddb8-4b9b-aadd-be106da8f42b_buggy.java
+++ b/tmp/0b1088c6-d6ed-40a9-b9e4-7c74516ba03a_fixed.java
@@ -1,42 +1,38 @@
-    /**
-     * Initializes the name to index mapping if the format defines a header.
-     *
-     * @return null if the format has no header.
-     * @throws IOException if there is a problem reading the header or skipping the first record
-     */
     private Map<String, Integer> initializeHeader() throws IOException {
         Map<String, Integer> hdrMap = null;
         final String[] formatHeader = this.format.getHeader();
         if (formatHeader != null) {
             hdrMap = new LinkedHashMap<String, Integer>();
-
             String[] headerRecord = null;
             if (formatHeader.length == 0) {
-                // read the header from the first line of the file
                 final CSVRecord nextRecord = this.nextRecord();
                 if (nextRecord != null) {
                     headerRecord = nextRecord.values();
-                }
                 } else {
-                if (this.format.getSkipHeaderRecord()) {
-                    this.nextRecord();
+                    throw new IOException("Format header is empty but no header record found");
                 }
+            } else if (this.format.getSkipHeaderRecord()) {
                 headerRecord = formatHeader;
+            } else {
+                final CSVRecord firstRecord = this.nextRecord();
+                if (firstRecord != null) {
+                    headerRecord = firstRecord.values();
+                } else {
+                    throw new IOException("Format header is invalid and no header record found");
+                }
             }
-
-            // build the name to index mappings
             if (headerRecord != null) {
                 for (int i = 0; i < headerRecord.length; i++) {
                     final String header = headerRecord[i];
                     final boolean containsHeader = hdrMap.containsKey(header);
                     final boolean emptyHeader = header.trim().isEmpty();
-                    if (containsHeader && (!emptyHeader || (emptyHeader && !this.format.getIgnoreEmptyHeaders()))) {
+                    if (containHeaders && (!emptyHeader || (emptyHeader && !this.format.getIgnoreEmptyHeaders()))) {
                         throw new IllegalArgumentException("The header contains a duplicate name: \"" + header +
                                 "\" in " + Arrays.toString(headerRecord));
                     }
                     hdrMap.put(header, Integer.valueOf(i));
                 }
             }
         }
         return hdrMap;
     }
\ No newline at end of file

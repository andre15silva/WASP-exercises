diff --git a/tmp/02fb5ee4-fe7e-4887-b7da-1e93b72bbb33_buggy.java b/tmp/3c488e0a-c642-4622-b949-bb057dc7d4c7_fixed.java
index 6cfa79b..6a3b506 100644
--- a/tmp/02fb5ee4-fe7e-4887-b7da-1e93b72bbb33_buggy.java
+++ b/tmp/3c488e0a-c642-4622-b949-bb057dc7d4c7_fixed.java
@@ -1,12 +1,22 @@
     /**
      * For this disbution, X, this method returns P(X &lt; <code>x</code>).
      * @param x the value at which the CDF is evaluated.
      * @return CDF evaluted at <code>x</code>. 
      * @throws MathException if the algorithm fails to converge; unless
      * x is more than 20 standard deviations from the mean, in which case the
      * convergence exception is caught and 0 or 1 is returned.
      */
     public double cumulativeProbability(double x) throws MathException {
-            return 0.5 * (1.0 + Erf.erf((x - mean) /
-                    (standardDeviation * Math.sqrt(2.0))));
+        double result;
+        if (Math.abs(x - getMean()) > 20 * getStandardDeviation()) {
+            if (x < getMean()) {
+                result = 0;
+            } else {
+                result = 1;
+            }
+        } else {
+            result = 0.5 * (1.0 + Erf.erf((x - getMean()) /
+                    (getStandardDeviation() * Math.sqrt(2.0))));
+        }
+        return result;
     }
\ No newline at end of file

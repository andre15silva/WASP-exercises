diff --git a/tmp/acafdc79-3e18-4688-a8e8-0ef55a8b520f_buggy.java b/tmp/4de78f0c-2222-4008-95b3-f79d1b4d499d_fixed.java
index 9033e1c..76355ff 100644
--- a/tmp/acafdc79-3e18-4688-a8e8-0ef55a8b520f_buggy.java
+++ b/tmp/4de78f0c-2222-4008-95b3-f79d1b4d499d_fixed.java
@@ -1,11 +1,57 @@
     /**
      * Returns true iff they are equal as defined by
      * {@link #equals(double,double,int) equals(x, y, 1)}.
      *
      * @param x first value
      * @param y second value
      * @return {@code true} if the values are equal.
      */
     public static boolean equals(double x, double y) {
         return (Double.isNaN(x) && Double.isNaN(y)) || x == y;
     }
+    /**
+     * Constant used as a hash key for two arrays to be equal if all elements
+     * are equal.
+     */
+    public static final int TWO_ARRAYS = 40;
+    /**
+     * Constant used as a hash key for two arrays with the same
+     * {@link Math#ulp(double) unit absolute error} if all elements are equal.
+     */
+    public static final int  TWO_ULP    = 41;
+    public static boolean equals(double[] d1, final double[] d2) {
+        if (d1 == d2) {
+            return true;
+        }
+        if (d1 == null || d2 == null) {
+            return false;
+        }
+        if (d1.length != d2.length) {
+            return false;
+        }
+        for (int i = 0; i < d1.length; ++i) {
+            if (!equals(d1[i], d2[i],
+                        1)) {
+                return false;
+            }
+        }
+        return true;
+    }
+    public static boolean equals(double[] d1, final double[] d2, final double ulp) {
+        if (d1 == d2) {
+            return true;
+        }
+        if (d1 == null || d2 == null) {
+            return false;
+        }
+        if (d1.length != d2.length) {
+            return false;
+        }
+        for (int i = 0; i < d1.length; ++i) {
+            if (!equals(d1[i], d2[i],
+                        ulp)) {
+                return false;
+            }
+        }
+        return true;
+    }
\ No newline at end of file

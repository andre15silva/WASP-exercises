diff --git a/tmp/338ba0ff-1cf5-463f-99c8-c8529f1777d2_buggy.java b/tmp/bf748ff3-584f-4b9d-923a-0a9523a6a1e0_fixed.java
index 0722547..1d5c258 100644
--- a/tmp/338ba0ff-1cf5-463f-99c8-c8529f1777d2_buggy.java
+++ b/tmp/bf748ff3-584f-4b9d-923a-0a9523a6a1e0_fixed.java
@@ -1,26 +1,25 @@
     @Override
     public void feedInput(byte[] buf, int start, int end) throws IOException
     {
-        // Must not have remaining input
         if (_inputPtr < _inputEnd) {
             _reportError("Still have %d undecoded bytes, should not call 'feedInput'", _inputEnd - _inputPtr);
         }
         if (end < start) {
             _reportError("Input end (%d) may not be before start (%d)", end, start);
         }
-        // and shouldn't have been marked as end-of-input
         if (_endOfInput) {
             _reportError("Already closed, can not feed more input");
         }
-        // Time to update pointers first
         _currInputProcessed += _origBufferLen;
-
-        // Also need to adjust row start, to work as if it extended into the past wrt new buffer
+        int oldRowStart = _currInputRowStart;
         _currInputRowStart = start - (_inputEnd - _currInputRowStart);
-
-        // And then update buffer settings
+        int offsetDiff = (start - oldRowStart);
+        if (offsetDiff != 0) {
+            _currInputRowNum += offsetDiff / _currInputRowSize;
+            _currInputRowSize += offsetDiff;
+        }
         _inputBuffer = buf;
         _inputPtr = start;
         _inputEnd = end;
         _origBufferLen = end - start;
     }
\ No newline at end of file

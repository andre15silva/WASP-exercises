diff --git a/tmp/e049ab12-e112-4d13-ac0a-05c1bf5e44c7_buggy.java b/tmp/41aef851-cc61-4566-b0da-ef14caa1b31c_fixed.java
index 0722547..feb9edb 100644
--- a/tmp/e049ab12-e112-4d13-ac0a-05c1bf5e44c7_buggy.java
+++ b/tmp/41aef851-cc61-4566-b0da-ef14caa1b31c_fixed.java
@@ -1,26 +1,27 @@
     @Override
     public void feedInput(byte[] buf, int start, int end) throws IOException
     {
-        // Must not have remaining input
         if (_inputPtr < _inputEnd) {
             _reportError("Still have %d undecoded bytes, should not call 'feedInput'", _inputEnd - _inputPtr);
         }
         if (end < start) {
             _reportError("Input end (%d) may not be before start (%d)", end, start);
         }
-        // and shouldn't have been marked as end-of-input
         if (_endOfInput) {
             _reportError("Already closed, can not feed more input");
         }
-        // Time to update pointers first
         _currInputProcessed += _origBufferLen;
-
-        // Also need to adjust row start, to work as if it extended into the past wrt new buffer
         _currInputRowStart = start - (_inputEnd - _currInputRowStart);
-
-        // And then update buffer settings
-        _inputBuffer = buf;
-        _inputPtr = start;
-        _inputEnd = end;
+        ByteArrayBuilder b = _inputBuffer;
+        int origLen = _origBufferLen;
+        _inputBuffer = _byteBuf;
+        if (!b.add(buf, start, end - start)) {
+            _reportError("Problem with adding "+origLen+" initial bytes (buffer is full?)");
+        }
         _origBufferLen = end - start;
+        _reportToRecycler(_byteBuf);
+        _byteBuf = _inputBuffer;
+        _inputBuffer = b;
+        _inputPtr = 0;
+        _inputEnd = origLen;
     }
\ No newline at end of file

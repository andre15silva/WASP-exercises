diff --git a/tmp/2b36ed36-89c3-474f-8fd3-db43280ffebf_buggy.java b/tmp/6fa626c7-8828-4344-a273-1e707bc5897a_fixed.java
index 0dbce00..41e6092 100644
--- a/tmp/2b36ed36-89c3-474f-8fd3-db43280ffebf_buggy.java
+++ b/tmp/6fa626c7-8828-4344-a273-1e707bc5897a_fixed.java
@@ -1,33 +1,34 @@
     @Override
     public JsonSerializer<?> createContextual(SerializerProvider serializers,
             BeanProperty property) throws JsonMappingException
     {
         if (property != null) {
             JsonFormat.Value format = serializers.getAnnotationIntrospector().findFormat((Annotated)property.getMember());
             if (format != null) {
-
-            	// Simple case first: serialize as numeric timestamp?
             	JsonFormat.Shape shape = format.getShape();
-                if (shape.isNumeric()) {
-                    return withFormat(Boolean.TRUE, null);
+                if (shape == JsonFormat.Shape.ANY) {
+                    if ((!format.hasPattern()) && (!format.hasLocale()) &&
+                            (!format.hasTimezone())) {
+                        shape = serializers.isEnabled(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS) ?
+                                JsonFormat.Shape.INT : JsonFormat.Shape.STRING;
                     }
-
-                if (format.getShape() == JsonFormat.Shape.STRING) {
+                }
+                if (shape == JsonFormat.Shape.STRING) {
                     TimeZone tz = format.getTimeZone();
                     final String pattern = format.hasPattern()
                                     ? format.getPattern()
                                     : StdDateFormat.DATE_FORMAT_STR_ISO8601;
                     final Locale loc = format.hasLocale()
                                     ? format.getLocale()
                                     : serializers.getLocale();
                     SimpleDateFormat df = new SimpleDateFormat(pattern, loc);
                     if (tz == null) {
                         tz = serializers.getTimeZone();
                     }
                     df.setTimeZone(tz);
                     return withFormat(Boolean.FALSE, df);
                 }
             }
         }
         return this;
     }
\ No newline at end of file

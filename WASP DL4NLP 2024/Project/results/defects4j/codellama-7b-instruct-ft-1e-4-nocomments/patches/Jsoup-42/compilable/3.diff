diff --git a/tmp/dc2e3f1f-8c0c-45d5-9d63-34fd6a43014d_buggy.java b/tmp/488a9513-5e8b-4019-88c2-346f7e76e14b_fixed.java
index 442a001..03dec2c 100644
--- a/tmp/dc2e3f1f-8c0c-45d5-9d63-34fd6a43014d_buggy.java
+++ b/tmp/488a9513-5e8b-4019-88c2-346f7e76e14b_fixed.java
@@ -1,39 +1,42 @@
     /**
      * Get the data that this form submits. The returned list is a copy of the data, and changes to the contents of the
      * list will not be reflected in the DOM.
      * @return a list of key vals
      */
     public List<Connection.KeyVal> formData() {
         ArrayList<Connection.KeyVal> data = new ArrayList<Connection.KeyVal>();
-
-        // iterate the form control elements and accumulate their values
         for (Element el: elements) {
-            if (!el.tag().isFormSubmittable()) continue; // contents are form listable, superset of submitable
+            if (!el.tag().isFormSubmittable()) continue; 
             String name = el.attr("name");
             if (name.length() == 0) continue;
-            String type = el.attr("type");
-
-            if ("select".equals(el.tagName())) {
+            String value;
+            if (el.tagName().equals("select")) {
+                StringBuilder buffer = new StringBuilder();
                 Elements options = el.select("option[selected]");
-                boolean set = false;
-                for (Element option: options) {
-                    data.add(HttpConnection.KeyVal.create(name, option.val()));
-                    set = true;
+                if (options.size() == 0) {
+                    options = el.select("option");
+                    if (options.size() == 0) continue;
                 }
-                if (!set) {
-                    Element option = el.select("option").first();
-                    if (option != null)
-                        data.add(HttpConnection.KeyVal.create(name, option.val()));
+                Element option = options.first();
+                int i = 0;
+                while (i < options.size()) {
+                    buffer.append(option.attr("value"));
+                    if (i < options.size() - 1) buffer.append(',');
+                    i++;
+                    option = options.get(i);
                 }
-            } else if ("checkbox".equalsIgnoreCase(type) || "radio".equalsIgnoreCase(type)) {
-                // only add checkbox or radio if they have the checked attribute
+                value = buffer.toString();
+            } else if (el.tagName().equals("checkbox") || el.tagName().equals("radio") ) {
                 if (el.hasAttr("checked")) {
-                    final String val = el.val();
-                    data.add(HttpConnection.KeyVal.create(name, val));
+                    value = el.val();
+                } else {
+                    continue;
                 }
             } else {
-                data.add(HttpConnection.KeyVal.create(name, el.val()));
+                value = el.val();
             }
+            if (value.length() == 0) continue;
+            data.add(HttpConnection.KeyVal.create(name, value));
         }
         return data;
     }
\ No newline at end of file

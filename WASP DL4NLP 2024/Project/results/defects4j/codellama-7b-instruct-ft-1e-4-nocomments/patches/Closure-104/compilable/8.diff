diff --git a/tmp/e15e2cac-d0da-4753-98a1-82ed8e5fc0fe_buggy.java b/tmp/16d02702-9777-4b77-bdbf-12d64ee6e9e7_fixed.java
index b36b2a9..6bde574 100644
--- a/tmp/e15e2cac-d0da-4753-98a1-82ed8e5fc0fe_buggy.java
+++ b/tmp/16d02702-9777-4b77-bdbf-12d64ee6e9e7_fixed.java
@@ -1,26 +1,25 @@
   JSType meet(JSType that) {
-    UnionTypeBuilder builder = new UnionTypeBuilder(registry);
+    CheckLoop:
     for (JSType alternate : alternates) {
       if (alternate.isSubtype(that)) {
-        builder.addAlternate(alternate);
+        return alternate;
+      } else if (alternate.isObject()) {
+        return getNativeType(JSTypeNative.NO_OBJECT_TYPE);
       }
     }
-
     if (that instanceof UnionType) {
       for (JSType otherAlternate : ((UnionType) that).alternates) {
         if (otherAlternate.isSubtype(this)) {
-          builder.addAlternate(otherAlternate);
+          return otherAlternate;
+        }
+        if (otherAlternate.isObject()) {
+          return getNativeType(JSTypeNative.NO_OBJECT_TYPE);
         }
       }
     } else if (that.isSubtype(this)) {
-      builder.addAlternate(that);
-    }
-    JSType result = builder.build();
-    if (result != null) {
-      return result;
-    } else if (this.isObject() && that.isObject()) {
+      return that;
+    } else if (that.isObject()) {
       return getNativeType(JSTypeNative.NO_OBJECT_TYPE);
-    } else {
+    }
     return getNativeType(JSTypeNative.NO_TYPE);
   }
\ No newline at end of file
-  }

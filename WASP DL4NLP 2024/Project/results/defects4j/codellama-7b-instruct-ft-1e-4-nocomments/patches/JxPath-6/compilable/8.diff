diff --git a/tmp/b226039b-5e96-4559-92a7-70626fc093dc_buggy.java b/tmp/075b6d6d-677f-4ade-a354-61610f04c072_fixed.java
index f650982..4f6bb63 100644
--- a/tmp/b226039b-5e96-4559-92a7-70626fc093dc_buggy.java
+++ b/tmp/075b6d6d-677f-4ade-a354-61610f04c072_fixed.java
@@ -1,42 +1,40 @@
-    /**
-     * Compares two values
-     */
     protected boolean equal(
         EvalContext context,
         Expression left,
         Expression right) 
     {
         Object l = left.compute(context);
         Object r = right.compute(context);
-
-//        System.err.println("COMPARING: " +
-//            (l == null ? "null" : l.getClass().getName()) + " " +
-//            (r == null ? "null" : r.getClass().getName()));
-
         if (l instanceof InitialContext || l instanceof SelfContext) {
             l = ((EvalContext) l).getSingleNodePointer();
         }
-
         if (r instanceof InitialContext || r instanceof SelfContext) {
             r = ((EvalContext) r).getSingleNodePointer();
         }
-
         if (l instanceof Collection) {
             l = ((Collection) l).iterator();
         }
-
         if (r instanceof Collection) {
             r = ((Collection) r).iterator();
         }
-
         if ((l instanceof Iterator) && !(r instanceof Iterator)) {
             return contains((Iterator) l, r);
         }
         if (!(l instanceof Iterator) && (r instanceof Iterator)) {
             return contains((Iterator) r, l);
         }
         if (l instanceof Iterator && r instanceof Iterator) {
             return findMatch((Iterator) l, (Iterator) r);
         }
+        if (l instanceof Iterator && r.getClass().isEnum()) {
+            Iterator iter = (Iterator) l;
+            while (iter.hasNext()) {
+                Object next = iter.next();
+                if (next == r) {
+                    return Boolean.TRUE;
+                }
+            }
+            return Boolean.FALSE;
+        }
         return equal(l, r);
     }
\ No newline at end of file

diff --git a/tmp/29b120df-bf25-4afe-87e7-5271d2cc8d58_buggy.java b/tmp/f0bd96bf-f840-4590-b4d8-e72bf4d38721_fixed.java
index f650982..4d607c1 100644
--- a/tmp/29b120df-bf25-4afe-87e7-5271d2cc8d58_buggy.java
+++ b/tmp/f0bd96bf-f840-4590-b4d8-e72bf4d38721_fixed.java
@@ -1,42 +1,44 @@
-    /**
-     * Compares two values
-     */
     protected boolean equal(
         EvalContext context,
         Expression left,
         Expression right) 
     {
         Object l = left.compute(context);
         Object r = right.compute(context);
-
-//        System.err.println("COMPARING: " +
-//            (l == null ? "null" : l.getClass().getName()) + " " +
-//            (r == null ? "null" : r.getClass().getName()));
-
-        if (l instanceof InitialContext || l instanceof SelfContext) {
-            l = ((EvalContext) l).getSingleNodePointer();
-        }
-
-        if (r instanceof InitialContext || r instanceof SelfContext) {
-            r = ((EvalContext) r).getSingleNodePointer();
-        }
-
+        if (l instanceof Iterator) {
+            if (((Iterator) l).hasNext()) {
+                l = ((Iterator) l).next();
+            } else {
+                l = null;
+            }
+        }
+        if (r instanceof Iterator) {
+            if (((Iterator) r).hasNext()) {
+                r = ((Iterator) r).next();
+            } else {
+                r = null;
+            }
+        }
         if (l instanceof Collection) {
             l = ((Collection) l).iterator();
         }
-
         if (r instanceof Collection) {
             r = ((Collection) r).iterator();
         }
-
         if ((l instanceof Iterator) && !(r instanceof Iterator)) {
             return contains((Iterator) l, r);
         }
         if (!(l instanceof Iterator) && (r instanceof Iterator)) {
             return contains((Iterator) r, l);
         }
         if (l instanceof Iterator && r instanceof Iterator) {
             return findMatch((Iterator) l, (Iterator) r);
         }
+        if (l instanceof Variable) {
+            l = ((Variable)l).getValue();
+        }
+        if (r instanceof Variable) {
+            r = ((Variable)r).getValue();
+        }
         return equal(l, r);
     }
\ No newline at end of file

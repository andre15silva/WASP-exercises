diff --git a/tmp/c337c751-8da5-46d7-bbeb-59ffa33be53e_buggy.java b/tmp/0d6f6b92-bbb6-4f9d-a934-517d420f1e77_fixed.java
index f650982..20d878d 100644
--- a/tmp/c337c751-8da5-46d7-bbeb-59ffa33be53e_buggy.java
+++ b/tmp/0d6f6b92-bbb6-4f9d-a934-517d420f1e77_fixed.java
@@ -1,42 +1,30 @@
-    /**
-     * Compares two values
-     */
     protected boolean equal(
         EvalContext context,
         Expression left,
         Expression right) 
     {
         Object l = left.compute(context);
         Object r = right.compute(context);
-
-//        System.err.println("COMPARING: " +
-//            (l == null ? "null" : l.getClass().getName()) + " " +
-//            (r == null ? "null" : r.getClass().getName()));
-
         if (l instanceof InitialContext || l instanceof SelfContext) {
             l = ((EvalContext) l).getSingleNodePointer();
         }
-
         if (r instanceof InitialContext || r instanceof SelfContext) {
             r = ((EvalContext) r).getSingleNodePointer();
         }
-
         if (l instanceof Collection) {
             l = ((Collection) l).iterator();
         }
-
         if (r instanceof Collection) {
             r = ((Collection) r).iterator();
         }
-
         if ((l instanceof Iterator) && !(r instanceof Iterator)) {
-            return contains((Iterator) l, r);
+            return containsValue((Iterator) l, r);
         }
         if (!(l instanceof Iterator) && (r instanceof Iterator)) {
-            return contains((Iterator) r, l);
+            return containsValue((Iterator) r, l);
         }
         if (l instanceof Iterator && r instanceof Iterator) {
             return findMatch((Iterator) l, (Iterator) r);
         }
         return equal(l, r);
     }
\ No newline at end of file

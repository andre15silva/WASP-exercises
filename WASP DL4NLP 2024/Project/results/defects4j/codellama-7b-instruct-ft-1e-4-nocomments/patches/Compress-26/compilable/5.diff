diff --git a/tmp/031f3c54-b281-4384-ac2f-08cfcd855ef4_buggy.java b/tmp/6de41a66-9102-4707-8497-1a66249dad74_fixed.java
index 4b163f6..4d7bf8a 100644
--- a/tmp/031f3c54-b281-4384-ac2f-08cfcd855ef4_buggy.java
+++ b/tmp/6de41a66-9102-4707-8497-1a66249dad74_fixed.java
@@ -1,28 +1,29 @@
     /**
      * Skips the given number of bytes by repeatedly invoking skip on
      * the given input stream if necessary.
      *
      * <p>In a case where the stream's skip() method returns 0 before
      * the requested number of bytes has been skip this implementation
      * will fall back to using the read() method.</p>
      *
      * <p>This method will only skip less than the requested number of
      * bytes if the end of the input stream has been reached.</p>
      *
      * @param input stream to skip bytes in
      * @param numToSkip the number of bytes to skip
      * @return the number of bytes actually skipped
      * @throws IOException
      */
     public static long skip(InputStream input, long numToSkip) throws IOException {
         long available = numToSkip;
         while (numToSkip > 0) {
             long skipped = input.skip(numToSkip);
-            if (skipped == 0) {
+            if (skipped == 0)
+                skipped = input.read(new byte[(int)numToSkip], 0, (int)numToSkip);
+            if (skipped < 0) {
                 break;
             }
             numToSkip -= skipped;
         }
-            
         return available - numToSkip;
     }
\ No newline at end of file

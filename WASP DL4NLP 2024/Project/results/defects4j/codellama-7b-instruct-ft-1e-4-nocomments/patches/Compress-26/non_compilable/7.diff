diff --git a/tmp/80744007-7153-4ebf-b2ee-bb2d7d7492e8_buggy.java b/tmp/c5e583e4-9049-459e-b023-7df33f98e160_fixed.java
index 4b163f6..27b8a24 100644
--- a/tmp/80744007-7153-4ebf-b2ee-bb2d7d7492e8_buggy.java
+++ b/tmp/c5e583e4-9049-459e-b023-7df33f98e160_fixed.java
@@ -1,28 +1,23 @@
-    /**
-     * Skips the given number of bytes by repeatedly invoking skip on
-     * the given input stream if necessary.
-     *
-     * <p>In a case where the stream's skip() method returns 0 before
-     * the requested number of bytes has been skip this implementation
-     * will fall back to using the read() method.</p>
-     *
-     * <p>This method will only skip less than the requested number of
-     * bytes if the end of the input stream has been reached.</p>
-     *
-     * @param input stream to skip bytes in
-     * @param numToSkip the number of bytes to skip
-     * @return the number of bytes actually skipped
-     * @throws IOException
-     */
-    public static long skip(InputStream input, long numToSkip) throws IOException {
-        long available = numToSkip;
-        while (numToSkip > 0) {
-            long skipped = input.skip(numToSkip);
-            if (skipped == 0) {
-                break;
+    public static long skip(final InputStream input, final long count) throws IOException {
+        long skip = 0;
+        final long skippable = count;
+        InputStream reader = new StreamWrapper() {
+            public InputStream wrap(InputStream toWrap) {
+                return new FilterInputStream(toWrap) {
+                    public long skip(long s) {
+                        return 0;
                     }
-            numToSkip -= skipped;
+                };
             }
-            
-        return available - numToSkip;
+        }.wrap(input);
+        while (reader.available() > 0) {
+            skip += reader.skip(skippable - reader.skip(count));
+        }
+        long bytesRead = count - skip;
+        while (bytesRead > 0) {
+            int cnt = reader.read();
+            if (cnt >= 0)
+                bytesRead--;
+        }
+        return skip + count;
     }
\ No newline at end of file

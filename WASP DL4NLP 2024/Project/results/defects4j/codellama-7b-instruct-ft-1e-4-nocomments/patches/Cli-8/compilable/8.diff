diff --git a/tmp/833a8e87-2aa8-4f26-bcfc-68523d10f98e_buggy.java b/tmp/95f3bfe1-f203-467e-9da6-1c2bd69f45fe_fixed.java
index 8e93a5e..318fdaf 100644
--- a/tmp/833a8e87-2aa8-4f26-bcfc-68523d10f98e_buggy.java
+++ b/tmp/95f3bfe1-f203-467e-9da6-1c2bd69f45fe_fixed.java
@@ -1,43 +1,25 @@
-    /**
-     * <p>Render the specified text and return the rendered Options
-     * in a StringBuffer.</p>
-     *
-     * @param sb The StringBuffer to place the rendered text into.
-     * @param width The number of characters to display per line
-     * @param nextLineTabStop The position on the next line for the first tab.
-     * @param text The text to be rendered.
-     *
-     * @return the StringBuffer with the rendered Options contents.
-     */
     protected StringBuffer renderWrappedText(StringBuffer sb, int width, 
                                              int nextLineTabStop, String text)
     {
         int pos = findWrapPos(text, width, 0);
-
         if (pos == -1)
         {
             sb.append(rtrim(text));
-
             return sb;
         }
         sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
-
-        // all following lines must be padded with nextLineTabStop space 
-        // characters
         final String padding = createPadding(nextLineTabStop);
-
         while (true)
+        {
             {
                 text = padding + text.substring(pos).trim();
                 pos = findWrapPos(text, width, nextLineTabStop);
-
                 if (pos == -1)
                 {
                     sb.append(text);
-
                     return sb;
                 }
-
+            }
             sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
         }
     }
\ No newline at end of file

diff --git a/tmp/3933ed87-f2b1-4719-80fd-084cfffa54d8_buggy.java b/tmp/2805762d-e6d6-4a2b-8fa1-cbca7cc93b6b_fixed.java
index 800e6e1..6a7b857 100644
--- a/tmp/3933ed87-f2b1-4719-80fd-084cfffa54d8_buggy.java
+++ b/tmp/2805762d-e6d6-4a2b-8fa1-cbca7cc93b6b_fixed.java
@@ -1,32 +1,26 @@
-    /**
-     * Visit a node in a local scope, and add any local variables or catch
-     * parameters into the local symbol table.
-     *
-     * @param t The node traversal.
-     * @param n The node being visited.
-     * @param parent The parent of n
-     */
     @Override public void visit(NodeTraversal t, Node n, Node parent) {
-      if (n == scope.getRootNode()) return;
-
-      if (n.getType() == Token.LP && parent == scope.getRootNode()) {
-        handleFunctionInputs(parent);
-        return;
-      }
-
-      attachLiteralTypes(n);
       switch (n.getType()) {
         case Token.FUNCTION:
           if (parent.getType() == Token.NAME) {
             return;
           }
           defineDeclaredFunction(n, parent);
           break;
-        case Token.CATCH:
-          defineCatch(n, parent);
-          break;
         case Token.VAR:
           defineVar(n, parent);
           break;
       }
+      if (n == scope.getRootNode()) {
+        attachLiteralTypes(n);
+        return;
+      }
+      if (n.getType() == Token.LP && parent == scope.getRootNode()) {
+        handleFunctionInputs(parent);
+        return;
+      }
+      if (n.isFromExterns() && !n.isSynthesizedExterns()) {
+        defineExternsNode(n, parent);
+      } else {
+        attachLocalTypes(n, parent);
+      }
     }
\ No newline at end of file

diff --git a/tmp/dad195ef-6450-46fe-b80f-2f206d4d476c_buggy.java b/tmp/66769840-8f64-458a-a052-f525a335b0d7_fixed.java
index 800e6e1..1066bea 100644
--- a/tmp/dad195ef-6450-46fe-b80f-2f206d4d476c_buggy.java
+++ b/tmp/66769840-8f64-458a-a052-f525a335b0d7_fixed.java
@@ -1,32 +1,54 @@
-    /**
-     * Visit a node in a local scope, and add any local variables or catch
-     * parameters into the local symbol table.
-     *
-     * @param t The node traversal.
-     * @param n The node being visited.
-     * @param parent The parent of n
-     */
     @Override public void visit(NodeTraversal t, Node n, Node parent) {
       if (n == scope.getRootNode()) return;
-
       if (n.getType() == Token.LP && parent == scope.getRootNode()) {
         handleFunctionInputs(parent);
         return;
       }
-
+      if (NodeUtil.isQName(n, "goog") &&
+          !n.getGrandchildAtIndex(1).getBooleanProp(Node.IS_NAMESPACE)) {
         attachLiteralTypes(n);
+      }
       switch (n.getType()) {
+        case Token.NAME:
+          visitName(n, parent);
+          break;
+        case Token.GETPROP:
+          visitGetProp(n, parent);
+          break;
+        case Token.CALL:
+          visitCall(n, parent);
+          break;
         case Token.FUNCTION:
           if (parent.getType() == Token.NAME) {
             return;
           }
           defineDeclaredFunction(n, parent);
           break;
         case Token.CATCH:
           defineCatch(n, parent);
           break;
         case Token.VAR:
           defineVar(n, parent);
           break;
+        case Token.THIS:
+          attachThisType(n);
+          break;
+        case Token.NEW:
+          visitNew(n);
+          break;
+        case Token.GETELEM:
+          visitGetElem(n);
+          break;
+        case Token.THROW:
+          visitThrow(n);
+          break;
+        case Token.SETELEM:
+          visitSetElem(n);
+          break;
+        case Token.SCRIPT:
+          if (firstLocalScope) {
+            visitScript(n);
+          }
+          break;
       }
     }
\ No newline at end of file

diff --git a/tmp/a011ecb2-c211-4eca-babc-3a7dff9eb307_buggy.java b/tmp/2a5dfee8-c877-4c74-8210-a27d9bcc562f_fixed.java
index 98d89dc..9f63b07 100644
--- a/tmp/a011ecb2-c211-4eca-babc-3a7dff9eb307_buggy.java
+++ b/tmp/2a5dfee8-c877-4c74-8210-a27d9bcc562f_fixed.java
@@ -1,23 +1,26 @@
     private boolean compute(Object left, Object right) {
         left = reduce(left);
         right = reduce(right);
-
         if (left instanceof InitialContext) {
             ((InitialContext) left).reset();
         }
         if (right instanceof InitialContext) {
             ((InitialContext) right).reset();
         }
         if (left instanceof Iterator && right instanceof Iterator) {
             return findMatch((Iterator) left, (Iterator) right);
         }
         if (left instanceof Iterator) {
             return containsMatch((Iterator) left, right);
         }
         if (right instanceof Iterator) {
             return containsMatch((Iterator) right, left);
         }
         double ld = InfoSetUtil.doubleValue(left);
         double rd = InfoSetUtil.doubleValue(right);
+        if (Double.isNaN(ld) || Double.isNaN(rd)) {
+            return ld == rd ? Boolean.TRUE : Boolean.FALSE;
+        } else {
             return evaluateCompare(ld == rd ? 0 : ld < rd ? -1 : 1);
         }
+    }
\ No newline at end of file

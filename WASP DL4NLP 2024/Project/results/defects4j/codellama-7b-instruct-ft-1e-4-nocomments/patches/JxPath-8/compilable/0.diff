diff --git a/tmp/cc88c1d6-7970-4b27-845a-d7fa61f9dd0b_buggy.java b/tmp/8cd90a88-2a4d-4153-9b0f-01a085955572_fixed.java
index 98d89dc..2346759 100644
--- a/tmp/cc88c1d6-7970-4b27-845a-d7fa61f9dd0b_buggy.java
+++ b/tmp/8cd90a88-2a4d-4153-9b0f-01a085955572_fixed.java
@@ -1,23 +1,27 @@
     private boolean compute(Object left, Object right) {
         left = reduce(left);
         right = reduce(right);
-
         if (left instanceof InitialContext) {
             ((InitialContext) left).reset();
         }
         if (right instanceof InitialContext) {
             ((InitialContext) right).reset();
         }
         if (left instanceof Iterator && right instanceof Iterator) {
             return findMatch((Iterator) left, (Iterator) right);
         }
         if (left instanceof Iterator) {
             return containsMatch((Iterator) left, right);
         }
         if (right instanceof Iterator) {
             return containsMatch((Iterator) right, left);
         }
         double ld = InfoSetUtil.doubleValue(left);
         double rd = InfoSetUtil.doubleValue(right);
+        if (Double.isNaN(ld) || Double.isNaN(rd)) {
+            long cmp = Double.doubleToLongBits(ld) - Double.doubleToLongBits(rd);
+            return evaluateCompare(cmp == 0 ? 0 : cmp < 0 ? -1 : 1);
+        } else {
             return evaluateCompare(ld == rd ? 0 : ld < rd ? -1 : 1);
         }
+    }
\ No newline at end of file

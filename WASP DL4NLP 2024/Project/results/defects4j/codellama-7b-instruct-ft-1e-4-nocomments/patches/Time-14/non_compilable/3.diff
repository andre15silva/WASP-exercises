diff --git a/tmp/da2268a8-1d6c-45fd-b040-780cfa782734_buggy.java b/tmp/8f30adfe-b88d-4596-801e-cb02f9be1574_fixed.java
index 10616db..7f1570d 100644
--- a/tmp/da2268a8-1d6c-45fd-b040-780cfa782734_buggy.java
+++ b/tmp/8f30adfe-b88d-4596-801e-cb02f9be1574_fixed.java
@@ -1,19 +1,30 @@
-    //-----------------------------------------------------------------------
     public int[] add(ReadablePartial partial, int fieldIndex, int[] values, int valueToAdd) {
-        // overridden as superclass algorithm can't handle
-        // 2004-02-29 + 48 months -> 2008-02-29 type dates
         if (valueToAdd == 0) {
             return values;
         }
-            // month is largest field and being added to, such as month-day
         if (DateTimeUtils.isContiguous(partial)) {
             long instant = 0L;
             for (int i = 0, isize = partial.size(); i < isize; i++) {
                 instant = partial.getFieldType(i).getField(iChronology).set(instant, values[i]);
             }
+            int newYear = values[0];
+            int thisMonth = values[1];
+            if (thisMonth == 2 && isLenient()) {
+                long instant1 = add(instant, valueToAdd);
+                Partial p1 = iChronology.get(partial, instant1);
+                int newMonth = p1.get(DateTimeFieldType.monthOfYear());
+                if (newMonth == 3 && newYear % 4 == 0) {
                     instant = add(instant, valueToAdd);
-            return iChronology.get(partial, instant);
+                    newYear = get(instant, YEAR);
+                } else {
+                    newYear = get(instant1, YEAR);
+                }
+            } else {
+                instant = add(instant, valueToAdd);
+                newYear = get(instant, YEAR);
+            }
+            return iChronology.get(partial, newYear, thisMonth, values, values.length);
         } else {
             return super.add(partial, fieldIndex, values, valueToAdd);
         }
     }
\ No newline at end of file

diff --git a/tmp/15a53d46-2297-4893-a762-68c4d054e4ed_buggy.java b/tmp/ef809087-f2fd-4393-997d-7955d32d062a_fixed.java
index b529d33..2d755f2 100644
--- a/tmp/15a53d46-2297-4893-a762-68c4d054e4ed_buggy.java
+++ b/tmp/ef809087-f2fd-4393-997d-7955d32d062a_fixed.java
@@ -1,29 +1,17 @@
-    /**
-     * Used internally by the Soundex algorithm.
-     *
-     * Consonants from the same code group separated by W or H are treated as one.
-     *
-     * @param str
-     *                  the cleaned working string to encode (in upper case).
-     * @param index
-     *                  the character position to encode
-     * @return Mapping code for a particular character
-     * @throws IllegalArgumentException
-     *                  if the character is not mapped
-     */
     private char getMappingCode(final String str, final int index) {
-        // map() throws IllegalArgumentException
         final char mappedChar = this.map(str.charAt(index));
-        // HW rule check
-        if (index > 1 && mappedChar != '0') {
+        if (index > 0 && mappedChar != '0') {
             final char hwChar = str.charAt(index - 1);
             if ('H' == hwChar || 'W' == hwChar) {
                 final char preHWChar = str.charAt(index - 2);
+                if ('A' == mappedChar || 'E' == mappedChar || 'I' == mappedChar || 'O' == mappedChar || 'U' == mappedChar || 'Y' == mappedChar) {
+                    return 0;
+                }
                 final char firstCode = this.map(preHWChar);
-                if (firstCode == mappedChar || 'H' == preHWChar || 'W' == preHWChar) {
+                if (firstCode == mappedChar || 'H' == preHWChar || 'W' == preHWChar || ('A' == firstCode && 'E' == mappedChar) || ('I' == firstCode && (('O' == mappedChar) || ('U' == mappedChar))) || ('Y' == firstCode && ('E' == mappedChar) && ('D' == str.charAt(index + 1)))) {
                     return 0;
                 }
             }
         }
         return mappedChar;
     }
\ No newline at end of file

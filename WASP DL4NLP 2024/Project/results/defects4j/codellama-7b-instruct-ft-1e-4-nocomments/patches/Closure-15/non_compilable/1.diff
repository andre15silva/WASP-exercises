diff --git a/tmp/9587542d-5689-4770-a0af-f5cb4c38a019_buggy.java b/tmp/21740c8a-dca7-4306-9117-778545a8c8c7_fixed.java
index b56897c..4e93cf3 100644
--- a/tmp/9587542d-5689-4770-a0af-f5cb4c38a019_buggy.java
+++ b/tmp/21740c8a-dca7-4306-9117-778545a8c8c7_fixed.java
@@ -1,27 +1,26 @@
       @Override
       public boolean apply(Node n) {
-        // When the node is null it means, we reached the implicit return
-        // where the function returns (possibly without an return statement)
         if (n == null) {
           return false;
         }
-
-        // TODO(user): We only care about calls to functions that
-        // passes one of the dependent variable to a non-side-effect free
-        // function.
         if (n.isCall() && NodeUtil.functionCallHasSideEffects(n)) {
           return true;
         }
-
         if (n.isNew() && NodeUtil.constructorCallHasSideEffects(n)) {
           return true;
         }
-
-
+        if (NodeUtil.isDuplicateOfEnclosingForIn(n)) {
           for (Node c = n.getFirstChild(); c != null; c = c.getNext()) {
             if (!ControlFlowGraph.isEnteringNewCfgNode(c) && apply(c)) {
               return true;
             }
           }
+        } else {
+          for (Node c = n.getFirstChild(); c != null; c = c.getNext()) {
+            if (!ControlFlowGraph.isEnteringNewCfgNode(c) && apply(c)) {
+              return true;
+            }
+          }
+        }
         return false;
       }
\ No newline at end of file

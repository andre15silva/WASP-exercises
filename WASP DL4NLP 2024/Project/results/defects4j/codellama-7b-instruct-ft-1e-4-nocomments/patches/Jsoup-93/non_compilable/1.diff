diff --git a/tmp/0c90d64b-e888-4234-89e1-fb235b9a490d_buggy.java b/tmp/5363a9fb-60f3-4bc8-91ff-db64d88d068a_fixed.java
index aa351ad..570ac99 100644
--- a/tmp/0c90d64b-e888-4234-89e1-fb235b9a490d_buggy.java
+++ b/tmp/5363a9fb-60f3-4bc8-91ff-db64d88d068a_fixed.java
@@ -1,41 +1,44 @@
-    /**
-     * Get the data that this form submits. The returned list is a copy of the data, and changes to the contents of the
-     * list will not be reflected in the DOM.
-     * @return a list of key vals
-     */
     public List<Connection.KeyVal> formData() {
         ArrayList<Connection.KeyVal> data = new ArrayList<>();
-
-        // iterate the form control elements and accumulate their values
         for (Element el: elements) {
-            if (!el.tag().isFormSubmittable()) continue; // contents are form listable, superset of submitable
-            if (el.hasAttr("disabled")) continue; // skip disabled form inputs
+            if (!el.tag().isFormSubmittable()) continue;  
+            if (el.hasAttr("disabled")) continue; 
             String name = el.attr("name");
             if (name.length() == 0) continue;
             String type = el.attr("type");
-
-
             if ("select".equals(el.normalName())) {
+                StringBuilder sb = new StringBuilder();
                 Elements options = el.select("option[selected]");
                 boolean set = false;
                 for (Element option: options) {
-                    data.add(HttpConnection.KeyVal.create(name, option.val()));
+                    sb.append(option.value());
                     set = true;
                 }
-                if (!set) {
                 Element option = el.select("option").first();
+                if (!set) {
                     if (option != null)
-                        data.add(HttpConnection.KeyVal.create(name, option.val()));
+                        sb.append(option.value());
                 }
+                data.add(HttpConnection.KeyVal.create(name, sb.toString()));
             } else if ("checkbox".equalsIgnoreCase(type) || "radio".equalsIgnoreCase(type)) {
-                // only add checkbox or radio if they have the checked attribute
                 if (el.hasAttr("checked")) {
                     final String val = el.val().length() >  0 ? el.val() : "on";
                     data.add(HttpConnection.KeyVal.create(name, val));
                 }
             } else {
-                data.add(HttpConnection.KeyVal.create(name, el.val()));
+                Element prev = null;
+                for (Element nextEl : el.siblingElements()) {
+                    if (prev == null) {
+                        data.add(HttpConnection.KeyVal.create(name, nextEl.val()));
+                        break;
+                    }
+                    if (el.tag().equals(nextEl.tag())) prev = null;
+                    else if(nextEl.tag().isFormSubmittable()) break;
+                    else prev = nextEl;
+                }
+                if (prev != null) 
+                    data.add(HttpConnection.KeyVal.create(name, prev.val()));
             }
         }
         return data;
     }
\ No newline at end of file

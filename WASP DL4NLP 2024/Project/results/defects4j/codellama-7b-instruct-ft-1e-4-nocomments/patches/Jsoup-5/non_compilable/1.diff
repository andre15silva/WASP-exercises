diff --git a/tmp/0d894c94-376f-4629-b410-e251b175f2da_buggy.java b/tmp/b814229b-ae2e-4467-b1cd-cee6f1386dbc_fixed.java
index 39dd8e7..4498db5 100644
--- a/tmp/0d894c94-376f-4629-b410-e251b175f2da_buggy.java
+++ b/tmp/b814229b-ae2e-4467-b1cd-cee6f1386dbc_fixed.java
@@ -1,30 +1,26 @@
     private Attribute parseAttribute() {
         tq.consumeWhitespace();
-        String key = tq.consumeAttributeKey();
-        String value = "";
+        String key = tq.consumeTo("=").trim();
+        String value;
+        if (key.length() == 0) {
+            return null;
+        }
         tq.consumeWhitespace();
-        if (tq.matchChomp("=")) {
-            tq.consumeWhitespace();
-
+        final char quote = tq.peek();
         if (tq.matchChomp(SQ)) {
             value = tq.chompTo(SQ);
         } else if (tq.matchChomp(DQ)) {
             value = tq.chompTo(DQ);
+        } else if (quote != 0) {
+            while (!tq.matchesAny("<", "/>", ">") && !tq.peekMatchesAll("</", key)) {
+                value += tq.consume();
+            }
         } else {
-                StringBuilder valueAccum = new StringBuilder();
-                // no ' or " to look for, so scan to end tag or space (or end of stream)
-                while (!tq.matchesAny("<", "/>", ">") && !tq.matchesWhitespace() && !tq.isEmpty()) {
-                    valueAccum.append(tq.consume());
+            while (!tq.matchesAny("<", "/>", ">") && !tq.peekMatchesAny("\"", "'", "\0", ">") && !tq.peekMatchesAll("</",key)) {
+                value += tq.consume();
             }
-                value = valueAccum.toString();
         }
+        value = value.trim();
         tq.consumeWhitespace();
-        }
-        if (key.length() != 0)
         return Attribute.createFromEncoded(key, value);
-        else {
-            tq.consume();
-                
-            return null;
-        }
     }
\ No newline at end of file

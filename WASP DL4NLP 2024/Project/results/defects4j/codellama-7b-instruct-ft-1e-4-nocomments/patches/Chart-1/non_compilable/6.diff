diff --git a/tmp/d0257c18-49aa-4ed8-98c2-afc13d4fb6ea_buggy.java b/tmp/e7369803-27af-4451-b264-815ac4c3d3fb_fixed.java
index 114ff20..9ae087b 100644
--- a/tmp/d0257c18-49aa-4ed8-98c2-afc13d4fb6ea_buggy.java
+++ b/tmp/e7369803-27af-4451-b264-815ac4c3d3fb_fixed.java
@@ -1,41 +1,59 @@
     /**
      * Returns a (possibly empty) collection of legend items for the series
      * that this renderer is responsible for drawing.
      *
      * @return The legend item collection (never <code>null</code>).
      *
      * @see #getLegendItem(int, int)
      */
     public LegendItemCollection getLegendItems() {
         LegendItemCollection result = new LegendItemCollection();
         if (this.plot == null) {
             return result;
         }
         int index = this.plot.getIndexOf(this);
         CategoryDataset dataset = this.plot.getDataset(index);
-        if (dataset != null) {
-            return result;
+        if (dataset instanceof IntervalCategoryDataset) {
+            IntervalCategoryDataset icds = (IntervalCategoryDataset) dataset;
+            SeriesItemIterator iter = icds.iterator();
+            while (iter.hasNext()) {
+                SeriesItem series = iter.next();
+                int categoryIndex = series.getCategoryIndex();
+                double endX = series.getEnd X();
+                int row = dataset.getRowIndex(categoryIndex);
+                double seriesY = getRangeEdge(dataset.getRangeAxis(), 
+                        getPlot().getRangeAxisEdge(), edgeSymbolLine);
+                double x0 = dataset.getXValue(categoryIndex, 0);
+                double x1 = dataset.getXValue(categoryIndex, 1);
+                double y0 = dataset.getYValue(row, 0);
+                double y1 = dataset.getYValue(row, 1);
+                LegendItem item = new LegendItem(getLabel(), getSeriesShape(
+                        icds, series), x0, x1, y0, y1, seriesY);
+                result.add(item);
             }
+        }
+        else if (dataset != null) {
             int seriesCount = dataset.getRowCount();
             if (plot.getRowRenderingOrder().equals(SortOrder.ASCENDING)) {
                 for (int i = 0; i < seriesCount; i++) {
                     if (isSeriesVisibleInLegend(i)) {
                         LegendItem item = getLegendItem(index, i);
                         if (item != null) {
                             result.add(item);
                         }
                     }
                 }
             }
             else {
                 for (int i = seriesCount - 1; i >= 0; i--) {
                     if (isSeriesVisibleInLegend(i)) {
                         LegendItem item = getLegendItem(index, i);
                         if (item != null) {
                             result.add(item);
                         }
                     }
                 }
             }
+        }
         return result;
     }
\ No newline at end of file

diff --git a/tmp/ac376478-5f60-4cb4-ba04-d22fcd921f13_buggy.java b/tmp/857b45fc-3b6c-4ffb-95f9-6e6ea6b8e302_fixed.java
index 114ff20..90af2da 100644
--- a/tmp/ac376478-5f60-4cb4-ba04-d22fcd921f13_buggy.java
+++ b/tmp/857b45fc-3b6c-4ffb-95f9-6e6ea6b8e302_fixed.java
@@ -1,41 +1,19 @@
     /**
      * Returns a (possibly empty) collection of legend items for the series
      * that this renderer is responsible for drawing.
      *
      * @return The legend item collection (never <code>null</code>).
      *
      * @see #getLegendItem(int, int)
      */
     public LegendItemCollection getLegendItems() {
         LegendItemCollection result = new LegendItemCollection();
         if (this.plot == null) {
             return result;
         }
-        int index = this.plot.getIndexOf(this);
-        CategoryDataset dataset = this.plot.getDataset(index);
-        if (dataset != null) {
-            return result;
-        }
-        int seriesCount = dataset.getRowCount();
-        if (plot.getRowRenderingOrder().equals(SortOrder.ASCENDING)) {
-            for (int i = 0; i < seriesCount; i++) {
-                if (isSeriesVisibleInLegend(i)) {
-                    LegendItem item = getLegendItem(index, i);
-                    if (item != null) {
-                        result.add(item);
-                    }
-                }
-            }
-        }
-        else {
-            for (int i = seriesCount - 1; i >= 0; i--) {
-                if (isSeriesVisibleInLegend(i)) {
-                    LegendItem item = getLegendItem(index, i);
-                    if (item != null) {
-                        result.add(item);
-                    }
-                }
-            }
+        LegendItemCollection col = super.getLegendItems();
+        for (int i = 0; i < col.getItemCount(); i++) {
+            result.add(col.get(i));
         }
         return result;
     }
\ No newline at end of file

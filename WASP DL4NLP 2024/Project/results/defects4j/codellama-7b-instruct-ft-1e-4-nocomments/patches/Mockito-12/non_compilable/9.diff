diff --git a/tmp/979df202-2f08-482e-9040-c4e0cb18cef5_buggy.java b/tmp/184023b5-f061-4aa0-9800-18019a06b4c6_fixed.java
index bada2b6..b6c0ccc 100644
--- a/tmp/979df202-2f08-482e-9040-c4e0cb18cef5_buggy.java
+++ b/tmp/184023b5-f061-4aa0-9800-18019a06b4c6_fixed.java
@@ -1,16 +1,13 @@
-    /**
-     * Finds the generic type (parametrized type) of the field. If the field is not generic it returns Object.class. 
-     * 
-     * @param field
-     * @return
-     */
     public Class getGenericType(Field field) {        
         Type generic = field.getGenericType();
-        if (generic != null && generic instanceof ParameterizedType) {
-            Type actual = ((ParameterizedType) generic).getActualTypeArguments()[0];
-                return (Class) actual;
-                //in case of nested generics we don't go deep
+        if (generic != null && (generic instanceof ParameterizedType || generic instanceof TypeVariable)) {
+            Object actualType;
+            if (generic instanceof ParameterizedType) {
+                actualType = ((ParameterizedType) generic).getActualTypeArguments()[0];
+            } else {
+                actualType = getGenericType(field.getDeclaringClass(), generic);
+            }
+            return (Class) actualType;
         }
-        
         return Object.class;
     }
\ No newline at end of file

diff --git a/tmp/3d1c46a0-5ee8-4ecf-93a2-2d6fa0738863_buggy.java b/tmp/ed0302ba-f7e8-4aef-8832-c458e0e3a9de_fixed.java
index bada2b6..da94333 100644
--- a/tmp/3d1c46a0-5ee8-4ecf-93a2-2d6fa0738863_buggy.java
+++ b/tmp/ed0302ba-f7e8-4aef-8832-c458e0e3a9de_fixed.java
@@ -1,16 +1,21 @@
-    /**
-     * Finds the generic type (parametrized type) of the field. If the field is not generic it returns Object.class. 
-     * 
-     * @param field
-     * @return
-     */
     public Class getGenericType(Field field) {        
         Type generic = field.getGenericType();
         if (generic != null && generic instanceof ParameterizedType) {
-            Type actual = ((ParameterizedType) generic).getActualTypeArguments()[0];
+            ParameterizedType genericType = (ParameterizedType)generic;
+            String name = genericType.getClass().getName();
+            if (name.startsWith("java.lang.$") || name.startsWith("sun.reflect.generics.reflectiveObjects.ParameterizedTypeImpl")) {
+                Type actual = genericType.getActualTypeArguments()[0];
+                if (actual instanceof ParameterizedType) {
+                    return this.getGenericType((ParameterizedType)actual);
+                } else {
                     return (Class) actual;
-                //in case of nested generics we don't go deep
+                }
+            } else { 
+                Type actual = genericType.getActualTypeArguments()[0];
+                Type actualType = ((ParameterizedType)actual).getActualTypeArguments()[0];
+                        return this.getGenericType((ParameterizedType)actualType);
             }
             
+        }
         return Object.class;
     }
\ No newline at end of file

diff --git a/tmp/27044495-a183-4e8e-b2e0-32d94d0e3539_buggy.java b/tmp/374140ce-0280-4b43-9946-a0701a7840e3_fixed.java
index bada2b6..43031b5 100644
--- a/tmp/27044495-a183-4e8e-b2e0-32d94d0e3539_buggy.java
+++ b/tmp/374140ce-0280-4b43-9946-a0701a7840e3_fixed.java
@@ -1,16 +1,16 @@
-    /**
-     * Finds the generic type (parametrized type) of the field. If the field is not generic it returns Object.class. 
-     * 
-     * @param field
-     * @return
-     */
     public Class getGenericType(Field field) {        
         Type generic = field.getGenericType();
-        if (generic != null && generic instanceof ParameterizedType) {
-            Type actual = ((ParameterizedType) generic).getActualTypeArguments()[0];
+        if (generic != null) {
+            Type actual = generic;
+            Class<?> ownerClass =  (Class<?>)field.getDeclaringClass();        
+            while (actual instanceof ParameterizedType) {
+                actual = ((ParameterizedType) actual).getActualTypeArguments()[0];
+                if ("".equals(ownerClass.getName()))
+                    break;
+                else 
+                    ownerClass = ownerClass.getEnclosingClass();
+            }
             return (Class) actual;            
-                //in case of nested generics we don't go deep
         }
-        
         return Object.class;
     }
\ No newline at end of file

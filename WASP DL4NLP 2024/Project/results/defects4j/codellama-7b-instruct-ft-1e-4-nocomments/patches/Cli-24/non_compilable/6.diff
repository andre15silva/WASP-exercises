diff --git a/tmp/7235518a-3300-441d-bb9a-a7bb3e61bd76_buggy.java b/tmp/0be052ac-65ae-4c84-9724-95f6e20f5d2f_fixed.java
index 229b3e7..630fd02 100644
--- a/tmp/7235518a-3300-441d-bb9a-a7bb3e61bd76_buggy.java
+++ b/tmp/0be052ac-65ae-4c84-9724-95f6e20f5d2f_fixed.java
@@ -1,55 +1,35 @@
-    /**
-     * Render the specified text and return the rendered Options
-     * in a StringBuffer.
-     *
-     * @param sb The StringBuffer to place the rendered text into.
-     * @param width The number of characters to display per line
-     * @param nextLineTabStop The position on the next line for the first tab.
-     * @param text The text to be rendered.
-     *
-     * @return the StringBuffer with the rendered Options contents.
-     */
     protected StringBuffer renderWrappedText(StringBuffer sb, int width, 
                                              int nextLineTabStop, String text)
     {
         int pos = findWrapPos(text, width, 0);
-
         if (pos == -1)
         {
             sb.append(rtrim(text));
-
             return sb;
         }
         sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
-
-        if (nextLineTabStop >= width)
-        {
-            // stops infinite loop happening
-            throw new IllegalStateException("Total width is less than the width of the argument and indent " +
-                                            "- no room for the description");
-        }
-
-        // all following lines must be padded with nextLineTabStop space 
-        // characters
-        final String padding = createPadding(nextLineTabStop);
-
+        pos = 0;
         while (true)
         {
+            if (pos >= text.length())
+            {
+                sb.append(text);
+                return sb;
+            }
             text = padding + text.substring(pos).trim();
             pos = findWrapPos(text, width, 0);
-
             if (pos == -1)
             {
                 sb.append(text);
-
                 return sb;
             }
-            
-            if ( (text.length() > width) && (pos == nextLineTabStop - 1) ) 
+            if (text.length() > width)
+            {
+                if (pos != text.length())
                 {
                     pos = width;
                 }
-
-            sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
+            }
+            sb.append(text.substring(0, pos)).append(defaultNewLine);
         }
     }
\ No newline at end of file

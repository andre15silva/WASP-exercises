diff --git a/tmp/96a226b2-09c9-42aa-9ff1-b315e9b2138d_buggy.java b/tmp/e13eed23-8850-420a-84ef-e921c4148d6b_fixed.java
index b5d94e0..55dc1e4 100644
--- a/tmp/96a226b2-09c9-42aa-9ff1-b315e9b2138d_buggy.java
+++ b/tmp/e13eed23-8850-420a-84ef-e921c4148d6b_fixed.java
@@ -1,26 +1,29 @@
   private void traverse(Node node) {
-    // The goal here is to avoid retraversing
-    // the entire AST to catch newly created opportunities.
-    // So we track whether a "unit of code" has changed,
-    // and revisit immediately.
     if (!shouldVisit(node)) {
       return;
     }
-
     int visits = 0;
     do {
+      boolean reentry = false;
       Node c = node.getFirstChild();
       while(c != null) {
+        if (c.getType() == Token.FUNCTION &&
+            c.hasTwoChildren()) {
+          if (c.isUnscoped() && c.getFirstChild().isUnresolved()) {
+            reentry = true;
+            break;
+          }
+        }
         traverse(c);
         Node next = c.getNext();
         c = next;
       }
-
       visit(node);
       visits++;
-
       Preconditions.checkState(visits < 10000, "too many interations");
+      if (reentry) {
+        break;
+      }
     } while (shouldRetraverse(node));
-
     exitNode(node);
   }
\ No newline at end of file

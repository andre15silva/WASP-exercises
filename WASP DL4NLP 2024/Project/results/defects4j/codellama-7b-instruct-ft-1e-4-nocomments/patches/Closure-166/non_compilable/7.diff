diff --git a/tmp/1bdb5427-0179-425f-884a-5f268cab39c4_buggy.java b/tmp/0608deb0-55cc-4f34-9d6d-c1f1256377ef_fixed.java
index 5f96616..0f1a461 100644
--- a/tmp/1bdb5427-0179-425f-884a-5f268cab39c4_buggy.java
+++ b/tmp/0608deb0-55cc-4f34-9d6d-c1f1256377ef_fixed.java
@@ -1,20 +1,14 @@
   @Override
   public void matchConstraint(JSType constraint) {
-    // We only want to match constraints on anonymous types.
     if (hasReferenceName()) {
       return;
     }
-
-    // Handle the case where the constraint object is a record type.
-    //
-    // param constraint {{prop: (number|undefined)}}
-    // function f(constraint) {}
-    // f({});
-    //
-    // We want to modify the object literal to match the constraint, by
-    // taking any each property on the record and trying to match
-    // properties on this object.
+    if (constraint.isRecordType()) {
+      constraint = JSType.fromObjectType(
+          ObjectType.cast(
+              JSTypeRegistry.getJSContext().toObjectType(constraint)));
+    }
     if (constraint.isRecordType()) {
       matchRecordTypeConstraint(constraint.toObjectType());
     }
   }
\ No newline at end of file

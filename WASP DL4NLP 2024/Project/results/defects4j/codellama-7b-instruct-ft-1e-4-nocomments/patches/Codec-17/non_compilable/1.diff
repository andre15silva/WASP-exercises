diff --git a/tmp/84d8cbeb-e1e0-46c4-87d1-35527545d610_buggy.java b/tmp/1c7f1fdc-3cec-4510-85b9-b2fb5e3b3385_fixed.java
index 780fa1a..4c4efa3 100644
--- a/tmp/84d8cbeb-e1e0-46c4-87d1-35527545d610_buggy.java
+++ b/tmp/1c7f1fdc-3cec-4510-85b9-b2fb5e3b3385_fixed.java
@@ -1,15 +1,15 @@
     /**
-     * Constructs a new <code>String</code> by decoding the specified array of bytes using the ISO-8859-1 charset.
+     * Constructs a new <code>String</code> by decoding the specified array of bytes using the UTF-8 charset.
      *
      * @param bytes
      *            The bytes to be decoded into characters, may be <code>null</code>
-     * @return A new <code>String</code> decoded from the specified array of bytes using the ISO-8859-1 charset, or
+     * @return A new <code>String</code> decoded from the specified array of bytes using the UTF-8 charset, or
      *         <code>null</code> if the input byte array was <code>null</code>.
      * @throws NullPointerException
-     *             Thrown if {@link Charsets#ISO_8859_1} is not initialized, which should never happen since it is
+     *             Thrown if {@link Charsets#UTF_8} is not initialized, which should never happen since it is
      *             required by the Java platform specification.
      * @since As of 1.7, throws {@link NullPointerException} instead of UnsupportedEncodingException
      */
-    public static String newStringIso8859_1(final byte[] bytes) {
-        return new String(bytes, Charsets.ISO_8859_1);
+    public static String newStringUtf8(final byte[] bytes) {
+        return new String(bytes, Charsets.UTF_8);
     }
\ No newline at end of file

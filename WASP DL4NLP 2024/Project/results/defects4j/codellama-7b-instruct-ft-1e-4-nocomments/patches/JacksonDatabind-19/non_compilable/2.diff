diff --git a/tmp/78a9b25f-278b-4e5e-935a-4f9549953dd5_buggy.java b/tmp/c6a6a303-c5ef-443b-8f08-24abd0179ddb_fixed.java
index 1bec4d6..c5fd75b 100644
--- a/tmp/78a9b25f-278b-4e5e-935a-4f9549953dd5_buggy.java
+++ b/tmp/c6a6a303-c5ef-443b-8f08-24abd0179ddb_fixed.java
@@ -1,14 +1,23 @@
     private JavaType _mapType(Class<?> rawClass)
     {
-        // 28-May-2015, tatu: Properties are special, as per [databind#810]
-        JavaType[] typeParams = findTypeParameters(rawClass, Map.class);
-        // ok to have no types ("raw")
+        JavaType[] typeParams = findTypeParameters(rawClass,
+                Properties.class,
+                Map.class);
         if (typeParams == null) {
             return MapType.construct(rawClass, _unknownType(), _unknownType());
         }
-        // but exactly 2 types if any found
         if (typeParams.length != 2) {
             throw new IllegalArgumentException("Strange Map type "+rawClass.getName()+": can not determine type parameters");
         }
-        return MapType.construct(rawClass, typeParams[0], typeParams[1]);
+        JavaType keyType = typeParams[0];
+        JavaType contentType = typeParams[1];
+        if (contentType.isTypeOrSubTypeOf(String.class)) {
+            return MapType.construct(rawClass, keyType, contentType);
+        }
+        if (!(contentType.hasRawClass(String.class))) {
+            return MapType.construct(rawClass, keyType,
+                ((ObjectType)contentType).narrowBy(String.class));
+        }
+        return MapType.construct(rawClass, keyType,
+                ((ObjectType)contentType).narrowBy(contentType.getRawClass()));
     }
\ No newline at end of file

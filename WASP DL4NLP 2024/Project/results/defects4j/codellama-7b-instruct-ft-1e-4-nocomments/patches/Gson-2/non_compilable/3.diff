diff --git a/tmp/fc93fc5a-8bfb-4e0c-a5ce-6b92a87f8fbb_buggy.java b/tmp/0db5b6cc-5361-4885-bfa9-3c3f0872dac2_fixed.java
index 6e45f80..c6ef414 100644
--- a/tmp/fc93fc5a-8bfb-4e0c-a5ce-6b92a87f8fbb_buggy.java
+++ b/tmp/0db5b6cc-5361-4885-bfa9-3c3f0872dac2_fixed.java
@@ -1,21 +1,29 @@
-  /**
-   * Returns a factory for all subtypes of {@code typeAdapter}. We do a runtime check to confirm
-   * that the deserialized type matches the type requested.
-   */
   public static <T1> TypeAdapterFactory newTypeHierarchyFactory(
       final Class<T1> clazz, final TypeAdapter<T1> typeAdapter) {
     return new TypeAdapterFactory() {
       @SuppressWarnings("unchecked")
       public <T2> TypeAdapter<T2> create(Gson gson, TypeToken<T2> typeToken) {
         final Class<? super T2> requestedType = typeToken.getRawType();
         if (!clazz.isAssignableFrom(requestedType)) {
           return null;
         }
+        if (requestedType == JsonElement.class) {
+          return (TypeAdapter<T2>) new TypeAdapter<JsonElement>() {
+            public void write(JsonWriter out, JsonElement obj)
+                throws IOException {
+              obj.writeTo(out);
+            }
+            public JsonElement read(JsonReader in) throws IOException {
+              JsonElement result = JsonElement.class.cast(typeAdapter.read(in));
+              result.setTypeAdapter(gson, this);
+              return result;
+            }
+          };
+        }
         return (TypeAdapter<T2>) typeAdapter;
-
       }
       @Override public String toString() {
         return "Factory[typeHierarchy=" + clazz.getName() + ",adapter=" + typeAdapter + "]";
       }
     };
   }
\ No newline at end of file

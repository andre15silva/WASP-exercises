diff --git a/tmp/389cffe1-20c4-4f51-b7e3-746cb7f9b07b_buggy.java b/tmp/3764fc3a-1982-42ae-9aad-9b0c81051c48_fixed.java
index c9da1b7..82d3ee6 100644
--- a/tmp/389cffe1-20c4-4f51-b7e3-746cb7f9b07b_buggy.java
+++ b/tmp/3764fc3a-1982-42ae-9aad-9b0c81051c48_fixed.java
@@ -1,33 +1,21 @@
     protected void verifyNonDup(AnnotatedWithParams newOne, int typeIndex, boolean explicit)
     {
         final int mask = (1 << typeIndex);
         _hasNonDefaultCreator = true;
         AnnotatedWithParams oldOne = _creators[typeIndex];
-        // already had an explicitly marked one?
         if (oldOne != null) {
-
-            if ((_explicitCreators & mask) != 0) { // already had explicitly annotated, leave as-is
-                // but skip, if new one not annotated
+            if ((_explicitCreators & mask) != 0) { 
                 if (!explicit) {
                     return;
                 }
-                // both explicit: verify
-                // otherwise only verify if neither explicitly annotated.
             }
-
-            // one more thing: ok to override in sub-class
-            if (oldOne.getClass() == newOne.getClass()) {
-                // [databind#667]: avoid one particular class of bogus problems
-
+            if (oldOne.getRawClass() == newOne.getRawClass()) {
                     throw new IllegalArgumentException("Conflicting "+TYPE_DESCS[typeIndex]
-                            +" creators: already had explicitly marked "+oldOne+", encountered "+newOne);
-                // otherwise, which one to choose?
-                    // new type more generic, use old
-                // new type more specific, use it
+                            +" creators: already had explicitly marked "+oldOne+" for "+_classOf(oldOne.getDeclaringClass())+", encountered "+newOne+" for "+_classOf(newOne.getDeclaringClass()));
             }
         }
         if (explicit) {
             _explicitCreators |= mask;
         }
         _creators[typeIndex] = _fixAccess(newOne);
     }
\ No newline at end of file

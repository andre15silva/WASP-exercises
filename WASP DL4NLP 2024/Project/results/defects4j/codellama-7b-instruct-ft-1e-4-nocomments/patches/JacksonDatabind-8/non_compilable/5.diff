diff --git a/tmp/30ed9cff-1973-40e4-ab2f-9352c8ee6ad7_buggy.java b/tmp/c48662a1-d8fc-4aa6-aeae-36f3e079d9dc_fixed.java
index c9da1b7..5275097 100644
--- a/tmp/30ed9cff-1973-40e4-ab2f-9352c8ee6ad7_buggy.java
+++ b/tmp/c48662a1-d8fc-4aa6-aeae-36f3e079d9dc_fixed.java
@@ -1,33 +1,26 @@
     protected void verifyNonDup(AnnotatedWithParams newOne, int typeIndex, boolean explicit)
     {
         final int mask = (1 << typeIndex);
         _hasNonDefaultCreator = true;
         AnnotatedWithParams oldOne = _creators[typeIndex];
-        // already had an explicitly marked one?
         if (oldOne != null) {
-
-            if ((_explicitCreators & mask) != 0) { // already had explicitly annotated, leave as-is
-                // but skip, if new one not annotated
+            if ((_explicitCreators & mask) != 0) { 
                 if (!explicit) {
                     return;
                 }
-                // both explicit: verify
-                // otherwise only verify if neither explicitly annotated.
+            } else if (oldOne.getClass() == newOne.getClass()) {
+                Class<?> encClass = getGenericClass();
+                if (encClass == StringBuilder.class
+                        && !getClass().isPrimitive() && getRawClass().getName().startsWith("java.")) {
+                    ;
+                } else {
+                    throw new IllegalArgumentException(
+                            "Conflicting "+TYPE_DESCS[typeIndex]+" creators: already had explicitly marked "+oldOne+", encountered "+newOne);
                 }
-
-            // one more thing: ok to override in sub-class
-            if (oldOne.getClass() == newOne.getClass()) {
-                // [databind#667]: avoid one particular class of bogus problems
-
-                    throw new IllegalArgumentException("Conflicting "+TYPE_DESCS[typeIndex]
-                            +" creators: already had explicitly marked "+oldOne+", encountered "+newOne);
-                // otherwise, which one to choose?
-                    // new type more generic, use old
-                // new type more specific, use it
             }
         }
         if (explicit) {
             _explicitCreators |= mask;
         }
         _creators[typeIndex] = _fixAccess(newOne);
     }
\ No newline at end of file

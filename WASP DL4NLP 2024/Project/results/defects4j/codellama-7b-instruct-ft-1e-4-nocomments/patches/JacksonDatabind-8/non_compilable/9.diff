diff --git a/tmp/a099f928-83b1-4f16-9767-b4a9ff443a65_buggy.java b/tmp/7c729b77-3e89-47d0-803c-ccd83088689f_fixed.java
index c9da1b7..865eb11 100644
--- a/tmp/a099f928-83b1-4f16-9767-b4a9ff443a65_buggy.java
+++ b/tmp/7c729b77-3e89-47d0-803c-ccd83088689f_fixed.java
@@ -1,33 +1,28 @@
     protected void verifyNonDup(AnnotatedWithParams newOne, int typeIndex, boolean explicit)
     {
         final int mask = (1 << typeIndex);
         _hasNonDefaultCreator = true;
         AnnotatedWithParams oldOne = _creators[typeIndex];
-        // already had an explicitly marked one?
         if (oldOne != null) {
-
-            if ((_explicitCreators & mask) != 0) { // already had explicitly annotated, leave as-is
-                // but skip, if new one not annotated
+            if ((_explicitCreators & mask) != 0) { 
                 if (!explicit) {
                     return;
                 }
-                // both explicit: verify
-                // otherwise only verify if neither explicitly annotated.
             }
-
-            // one more thing: ok to override in sub-class
+            if (oldOne.getClass() == StringBuilder.class || 
+                    oldOne.getClass() == StringBuffer.class) {
+                if (newOne.getClass() == StringBuilder.class ||
+                        newOne.getClass() == StringBuffer.class) {
+                    return;
+                }
+            }
             if (oldOne.getClass() == newOne.getClass()) {
-                // [databind#667]: avoid one particular class of bogus problems
-
                     throw new IllegalArgumentException("Conflicting "+TYPE_DESCS[typeIndex]
                             +" creators: already had explicitly marked "+oldOne+", encountered "+newOne);
-                // otherwise, which one to choose?
-                    // new type more generic, use old
-                // new type more specific, use it
             }
         }
         if (explicit) {
             _explicitCreators |= mask;
         }
         _creators[typeIndex] = _fixAccess(newOne);
     }
\ No newline at end of file

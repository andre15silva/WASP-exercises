diff --git a/tmp/45a252ef-8eff-4a0b-9cd4-e4b185ce3910_buggy.java b/tmp/f5039b38-3b0f-47ae-b355-fb35f1b1ac18_fixed.java
index fc8c302..dc92e0d 100644
--- a/tmp/45a252ef-8eff-4a0b-9cd4-e4b185ce3910_buggy.java
+++ b/tmp/f5039b38-3b0f-47ae-b355-fb35f1b1ac18_fixed.java
@@ -1,23 +1,38 @@
     @Override
     public byte[] getBinaryValue(Base64Variant b64variant)
         throws IOException, JsonParseException
     {
-        // Multiple possibilities...
         JsonNode n = currentNode();
         if (n != null) {
-            // [databind#2096]: although `binaryValue()` works for real binary node
-            // and embedded "POJO" node, coercion from TextNode may require variant, so:
             byte[] data = n.binaryValue();
             if (data != null) {
                 return data;
             }
+            if (b64variant == null) {
                 if (n.isPojo()) {
                     Object ob = ((POJONode) n).getPojo();
                     if (ob instanceof byte[]) {
                         return (byte[]) ob;
                     }
                 }
+            } else {
+                assertFalse(b64variant == Base64Variants.MODIFIED_FOR_URL);
+                TextNode node = (TextNode) currentNode();
+                String encoded = node.asText();
+                if (b64variant == Base64Variants.MODIFIED_FOR_URL) {
+                    int length = encoded.length();
+                    if (length <= 33 || length > 107) {
+                        throw new IllegalStateException("Cannot access contents of TextNode as binary due to broken Base64 encoding: "+
+                                "length ("+length+") out of bounds");
+                    }
+                }
+                if (node.getEncoding() != null) {
+                    data = n.binaryValue();
+                    if (data != null) {
+                        return data;
+                    }
+                }
+            }
         }
-        // otherwise return null to mark we have no binary content
         return null;
     }
\ No newline at end of file

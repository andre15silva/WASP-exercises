diff --git a/tmp/06402c11-9875-4a87-b11e-934c7998da3e_buggy.java b/tmp/308bd847-ded1-432d-9f16-fcf7108d0ae9_fixed.java
index 6c0aa19..2532c69 100644
--- a/tmp/06402c11-9875-4a87-b11e-934c7998da3e_buggy.java
+++ b/tmp/308bd847-ded1-432d-9f16-fcf7108d0ae9_fixed.java
@@ -1,20 +1,23 @@
-    /**
-     * @param encoding the encoding to use for file names, use null
-     * for the platform's default encoding
-     * @param useUnicodeExtraFields whether to use InfoZIP Unicode
-     * Extra Fields (if present) to set the file names.
-     * @param allowStoredEntriesWithDataDescriptor whether the stream
-     * will try to read STORED entries that use a data descriptor
-     * @since 1.1
-     */
     public ZipArchiveInputStream(InputStream inputStream,
                                  String encoding,
                                  boolean useUnicodeExtraFields,
                                  boolean allowStoredEntriesWithDataDescriptor) {
         zipEncoding = ZipEncodingHelper.getZipEncoding(encoding);
         this.useUnicodeExtraFields = useUnicodeExtraFields;
         in = new PushbackInputStream(inputStream, buf.capacity());
         this.allowStoredEntriesWithDataDescriptor =
             allowStoredEntriesWithDataDescriptor;
-        // haven't read anything so far
+        try {
+            ZipArchiveEntry ze = new ZipArchiveEntry(in);
+            zsis = ze.getOSType() == OSType.UNIX ?
+                new UnixZipArchiveInputStream(in) :
+                new ZipArchiveInputStream(in);
+            zsis.setEncoding(zipEncoding.encodingName);
+            if (!ze.isDirectory()) {
+                zsis.getNextEntry();
+            }
+        } catch (final RuntimeException e) {
+            in.close();
+            throw e;
+        }
     }
\ No newline at end of file

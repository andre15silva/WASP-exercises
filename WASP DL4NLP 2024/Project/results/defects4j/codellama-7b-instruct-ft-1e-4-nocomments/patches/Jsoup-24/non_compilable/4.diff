diff --git a/tmp/e83899df-d2fb-404c-8a5e-3ad5f0040091_buggy.java b/tmp/6c9f96b4-9a70-4291-8141-7ae5b8434518_fixed.java
index b2d53db..c35ef11 100644
--- a/tmp/e83899df-d2fb-404c-8a5e-3ad5f0040091_buggy.java
+++ b/tmp/6c9f96b4-9a70-4291-8141-7ae5b8434518_fixed.java
@@ -1,34 +1,55 @@
         void read(Tokeniser t, CharacterReader r) {
             if (r.matchesLetter()) {
                 String name = r.consumeLetterSequence();
                 t.tagPending.appendTagName(name.toLowerCase());
                 t.dataBuffer.append(name);
                 r.advance();
                 return;
             }
-
             if (t.isAppropriateEndTagToken() && !r.isEmpty()) {
                 char c = r.consume();
                 switch (c) {
                     case '\t':
                     case '\n':
                     case '\f':
                     case ' ':
                         t.transition(BeforeAttributeName);
                         break;
                     case '/':
                         t.transition(SelfClosingStartTag);
                         break;
                     case '>':
                         t.emitTagPending();
                         t.transition(Data);
                         break;
+                    case '\'':
+                    case '"':
+                        r.unconsume();
+                        String string = r.consumeUntil('\'', '"');
+                        if (!r.matchesQuotes()) {
+                            t.error(this);
+                            string += r.current();
+                            r.advance();
+                        }
+                        t.dataBuffer.append(string);
+                        anythingElse(t, r);
+                        break;
                     default:
-                        t.dataBuffer.append(c);
+                        String consumedData = r.consumeLetterThen(c);
+                        if (r.matchesQuotes()) {
+                            String string = r.consumeUntil('\'', '"');
+                            t.dataBuffer.append(string);
                             anythingElse(t, r);
+                        } else {
+                            consumedData += c;
+                            t.error(this);
+                            r.unconsume();
+                            anythingElse(t, r);
+                            t.dataBuffer.append(consumedData);
+                        }
                         break;
                 }
             } else {
                 anythingElse(t, r);
             }
         }
\ No newline at end of file

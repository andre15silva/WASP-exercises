diff --git a/tmp/7856dfbe-54a6-49a9-8121-51ea23a40fcb_buggy.java b/tmp/f7defea2-24dd-4f0f-b031-ea8a0e17aaab_fixed.java
index be2af16..ec57b1a 100644
--- a/tmp/7856dfbe-54a6-49a9-8121-51ea23a40fcb_buggy.java
+++ b/tmp/f7defea2-24dd-4f0f-b031-ea8a0e17aaab_fixed.java
@@ -1,29 +1,43 @@
     public long getDateTimeMillis(int year, int monthOfYear, int dayOfMonth,
                                   int hourOfDay, int minuteOfHour,
                                   int secondOfMinute, int millisOfSecond)
         throws IllegalArgumentException
     {
         Chronology base;
         if ((base = getBase()) != null) {
             return base.getDateTimeMillis
                 (year, monthOfYear, dayOfMonth,
                  hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
         }
-
-        // Assume date is Gregorian.
         long instant;
+        try {
             instant = iGregorianChronology.getDateTimeMillis
                 (year, monthOfYear, dayOfMonth,
                  hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
+        } catch (IllegalFieldValueException ex) {
+            if (year < 1582) {
+                throw ex;
+            }
+            try {
+                instant = iJulianChronology.getDateTimeMillis
+                    (year, monthOfYear, dayOfMonth,
+                     hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
+            } catch (IllegalFieldValueException ex2) {
+                if (year < 1500) {
+                    throw ex;
+                }
+                instant = iGregorianChronology.getDateTimeMillis
+                    (year, monthOfYear, 1,
+                     hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
+            }
+        }
         if (instant < iCutoverMillis) {
-            // Maybe it's Julian.
             instant = iJulianChronology.getDateTimeMillis
                 (year, monthOfYear, dayOfMonth,
                  hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
             if (instant >= iCutoverMillis) {
-                // Okay, it's in the illegal cutover gap.
                 throw new IllegalArgumentException("Specified date does not exist");
             }
         }
         return instant;
     }
\ No newline at end of file

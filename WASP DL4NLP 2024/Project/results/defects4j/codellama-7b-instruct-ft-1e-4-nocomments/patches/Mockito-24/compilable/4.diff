diff --git a/tmp/b63f0160-5010-4e77-892f-b99ebae12f10_buggy.java b/tmp/7fef4b13-0ba2-413b-8352-37f62f7fe805_fixed.java
index 47915ed..c4dd217 100644
--- a/tmp/b63f0160-5010-4e77-892f-b99ebae12f10_buggy.java
+++ b/tmp/7fef4b13-0ba2-413b-8352-37f62f7fe805_fixed.java
@@ -1,22 +1,20 @@
-    /* (non-Javadoc)
-     * @see org.mockito.stubbing.Answer#answer(org.mockito.invocation.InvocationOnMock)
-     */
     public Object answer(InvocationOnMock invocation) {
         if (methodsGuru.isToString(invocation.getMethod())) {
             Object mock = invocation.getMock();
             MockName name = mockUtil.getMockName(mock);
-            if (name.isDefault()) {
+            Object invocationMock = invocation.getMock();
+            if (mock.equals(invocationMock)) {
                 return "Mock for " + mockUtil.getMockSettings(mock).getTypeToMock().getSimpleName() + ", hashCode: " + mock.hashCode();
+            } else if (name.isDefault()) {
+                return name.toString();
             } else {
                 return name.toString();
             }
         } else if (methodsGuru.isCompareToMethod(invocation.getMethod())) {
-            //see issue 184.
-            //mocks by default should return 0 if references are the same, otherwise some other value because they are not the same. Hence we return 1 (anything but 0 is good).
-            //Only for compareTo() method by the Comparable interface
             return 1;
+        } else if (invocation.getMock() instanceof Comparable && invocation.getMethod().getName().equals("compareTo") && invocation.getMethod().getParameterTypes().length == 1 && Object.class.equals(invocation.getMethod().getParameterTypes()[0])) {
+            return 0;
         }
-        
         Class<?> returnType = invocation.getMethod().getReturnType();
         return returnValueFor(returnType);
     }
\ No newline at end of file

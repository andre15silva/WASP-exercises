diff --git a/tmp/e1c346bd-e9fc-4ba5-ba59-92f8c50d363d_buggy.java b/tmp/4fefc179-64f4-4054-8081-d31c0adeb453_fixed.java
index fa42cd9..7987d67 100644
--- a/tmp/e1c346bd-e9fc-4ba5-ba59-92f8c50d363d_buggy.java
+++ b/tmp/4fefc179-64f4-4054-8081-d31c0adeb453_fixed.java
@@ -1,27 +1,24 @@
-  /**
-   * Declares a refined type in {@code scope} for the name represented by
-   * {@code node}. It must be possible to refine the type of the given node in
-   * the given scope, as determined by {@link #getTypeIfRefinable}.
-   */
   protected void declareNameInScope(FlowScope scope, Node node, JSType type) {
     switch (node.getType()) {
       case Token.NAME:
         scope.inferSlotType(node.getString(), type);
         break;
-
       case Token.GETPROP:
         String qualifiedName = node.getQualifiedName();
         Preconditions.checkNotNull(qualifiedName);
-
         JSType origType = node.getJSType();
         origType = origType == null ? getNativeType(UNKNOWN_TYPE) : origType;
         scope.inferQualifiedSlot(node, qualifiedName, origType, type);
         break;
-
-        // "this" references aren't currently modeled in the CFG.
-
+      case Token.THIS:
+        String varName = scope.getDeclaration(NodeUtil.newControlStructureInfo(node.getParent()))
+            .getNode().getString();
+        if (!varName.isEmpty()) {
+          scope.inferSlotType(varName, type);
+        }
+        break;
       default:
         throw new IllegalArgumentException("Node cannot be refined. \n" +
             node.toStringTree());
     }
   }
\ No newline at end of file

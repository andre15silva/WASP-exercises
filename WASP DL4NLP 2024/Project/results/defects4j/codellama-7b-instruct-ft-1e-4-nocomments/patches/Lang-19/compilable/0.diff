diff --git a/tmp/77234a99-1045-4576-9a1e-09a3494f063a_buggy.java b/tmp/50e07139-c4ff-4546-8a16-75d5f0e3f628_fixed.java
index 72a422c..be03909 100644
--- a/tmp/77234a99-1045-4576-9a1e-09a3494f063a_buggy.java
+++ b/tmp/50e07139-c4ff-4546-8a16-75d5f0e3f628_fixed.java
@@ -1,51 +1,43 @@
     /**
      * {@inheritDoc}
      */
     @Override
     public int translate(CharSequence input, int index, Writer out) throws IOException {
         int seqEnd = input.length();
-        // Uses -2 to ensure there is something after the &#
         if(input.charAt(index) == '&' && index < seqEnd - 1 && input.charAt(index + 1) == '#') {
             int start = index + 2;
             boolean isHex = false;
-
             char firstChar = input.charAt(start);
             if(firstChar == 'x' || firstChar == 'X') {
                 start++;
                 isHex = true;
-
-                // Check there's more than just an x after the &#
             }
-
             int end = start;
-            // Note that this supports character codes without a ; on the end
-            while(input.charAt(end) != ';')
-            {
+            while(input.charAt(end) != ';' && end < seqEnd - 1) {
                 end++;
             }
-
+            if(end >= seqEnd - 1) {
+                return 0;
+            }
             int entityValue;
             try {
                 if(isHex) {
                     entityValue = Integer.parseInt(input.subSequence(start, end).toString(), 16);
                 } else {
                     entityValue = Integer.parseInt(input.subSequence(start, end).toString(), 10);
                 }
             } catch(NumberFormatException nfe) {
             System.err.println("FAIL: " + input.subSequence(start, end) + "[" + start +"]["+ end +"]");
                 return 0;
             }
-
             if(entityValue > 0xFFFF) {
                 char[] chrs = Character.toChars(entityValue);
                 out.write(chrs[0]);
                 out.write(chrs[1]);
             } else {
                 out.write(entityValue);
             }
-
-
             return 2 + (end - start) + (isHex ? 1 : 0) + 1;
         }
         return 0;
     }
\ No newline at end of file

diff --git a/tmp/4ffb93c2-5545-4a66-80a6-6c582b7b5372_buggy.java b/tmp/8f9ffb82-c078-4325-89c8-a2475bf7b19d_fixed.java
index 904dba7..61997af 100644
--- a/tmp/4ffb93c2-5545-4a66-80a6-6c582b7b5372_buggy.java
+++ b/tmp/8f9ffb82-c078-4325-89c8-a2475bf7b19d_fixed.java
@@ -1,46 +1,35 @@
   private String format(JSError error, boolean warning) {
-    // extract source excerpt
     SourceExcerptProvider source = getSource();
     String sourceExcerpt = source == null ? null :
         excerpt.get(
             source, error.sourceName, error.lineNumber, excerptFormatter);
-
-    // formatting the message
     StringBuilder b = new StringBuilder();
     if (error.sourceName != null) {
       b.append(error.sourceName);
       if (error.lineNumber > 0) {
         b.append(':');
         b.append(error.lineNumber);
       }
       b.append(": ");
     }
-
     b.append(getLevelName(warning ? CheckLevel.WARNING : CheckLevel.ERROR));
     b.append(" - ");
-
     b.append(error.description);
-    b.append('\n');
     if (sourceExcerpt != null) {
+        b.append('\n');
         b.append(sourceExcerpt);
-      b.append('\n');
-      int charno = error.getCharno();
-
-      // padding equal to the excerpt and arrow at the end
-      // charno == sourceExpert.length() means something is missing
-      // at the end of the line
-      if (excerpt.equals(LINE)
-          && 0 <= charno && charno < sourceExcerpt.length()) {
-        for (int i = 0; i < charno; i++) {
+    }
+    for (int i = error.getCharno(); excerpt.equals(LINE) &&
+            0 <= i && i < sourceExcerpt.length(); i++) {
       char c = sourceExcerpt.charAt(i);
       if (Character.isWhitespace(c)) {
         b.append(c);
       } else {
         b.append(' ');
       }
     }
+    if (excerpt.equals(LINE) && error.getCharno() == sourceExcerpt.length()) {
       b.append("^\n");
     }
-    }
     return b.toString();
   }
\ No newline at end of file

diff --git a/tmp/0c490747-8ddb-4946-b237-2609b500e3ca_buggy.java b/tmp/d43b4294-07b0-4efa-8032-b6692ddd5ca5_fixed.java
index 46817a7..c2f7e9f 100644
--- a/tmp/0c490747-8ddb-4946-b237-2609b500e3ca_buggy.java
+++ b/tmp/d43b4294-07b0-4efa-8032-b6692ddd5ca5_fixed.java
@@ -1,16 +1,33 @@
   @Override
   public JSType getLeastSupertype(JSType that) {
-    if (!that.isRecordType()) {
-      return super.getLeastSupertype(that);
-    }
     RecordTypeBuilder builder = new RecordTypeBuilder(registry);
+    if (!that.isRecordType()) {
       for (String property : properties.keySet()) {
         if (that.toMaybeRecordType().hasProperty(property) &&
             that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(
                 getPropertyType(property))) {
           builder.addProperty(property, getPropertyType(property),
               getPropertyNode(property));
         }
       }
+      builder.addPropertiesFromType(that.toMaybeRecordType());
+      return builder.build();
+    }
+    if (getPropertyCount() > that.toMaybeRecordType().getPropertyCount()) {
+      return that;
+    }
+    for (String property : that.toMaybeRecordType().getPropertyNames()) {
+      if (hasProperty(property)) {
+        if (!getPropertyType(property).isEquivalentTo(
+                that.toMaybeRecordType().getPropertyType(property))) {
+          return registry.createUnionType(this, that);
+        } else {
+          builder.addProperty(property, getPropertyType(property),
+              getPropertyNode(property));
+        }
+      } else {
+        builder.addProperty(property, STRING_TYPE, null);
+      }
+    }
     return builder.build();
   }
\ No newline at end of file

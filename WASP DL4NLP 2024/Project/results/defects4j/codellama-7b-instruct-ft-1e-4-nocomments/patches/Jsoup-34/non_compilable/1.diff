diff --git a/tmp/1a99435e-cbd7-4959-b13b-fe9ce28f710f_buggy.java b/tmp/24ef0905-eb7a-4c89-9f86-d9d82a44bba3_fixed.java
index 21f64c6..fb1c235 100644
--- a/tmp/1a99435e-cbd7-4959-b13b-fe9ce28f710f_buggy.java
+++ b/tmp/24ef0905-eb7a-4c89-9f86-d9d82a44bba3_fixed.java
@@ -1,23 +1,24 @@
     /**
      * Returns the number of characters between the current position and the next instance of the input sequence
      *
      * @param seq scan target
      * @return offset between current position and next instance of target. -1 if not found.
      */
     int nextIndexOf(CharSequence seq) {
-        // doesn't handle scanning for surrogates
         char startChar = seq.charAt(0);
-        for (int offset = pos; offset < length; offset++) {
-            // scan to first instance of startchar:
+        outer: for (int offset = pos; offset < length; offset++) {
             if (startChar != input[offset])
                 while(++offset < length && startChar != input[offset]);
             int i = offset + 1;
             int last = i + seq.length()-1;
             if (offset < length) {
-                for (int j = 1; i < last && seq.charAt(j) == input[i]; i++, j++);
-                if (i == last) // found full sequence
+                outer: while (i < last) {
+                    if (seq.charAt(i++) != input[offset++])
+                        continue outer;
+                }
+                if (i == last) 
                     return offset - pos;
             }
         }
         return -1;
     }
\ No newline at end of file

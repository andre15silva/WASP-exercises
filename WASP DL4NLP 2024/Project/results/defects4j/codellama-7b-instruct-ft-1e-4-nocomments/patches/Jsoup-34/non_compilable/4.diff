diff --git a/tmp/44b14c03-9500-4613-ba27-ce09ef3456f2_buggy.java b/tmp/abf098c1-ecd9-4e5c-90bf-921b3f858be3_fixed.java
index 21f64c6..ee18341 100644
--- a/tmp/44b14c03-9500-4613-ba27-ce09ef3456f2_buggy.java
+++ b/tmp/abf098c1-ecd9-4e5c-90bf-921b3f858be3_fixed.java
@@ -1,23 +1,23 @@
     /**
      * Returns the number of characters between the current position and the next instance of the input sequence
      *
      * @param seq scan target
      * @return offset between current position and next instance of target. -1 if not found.
      */
     int nextIndexOf(CharSequence seq) {
-        // doesn't handle scanning for surrogates
         char startChar = seq.charAt(0);
         for (int offset = pos; offset < length; offset++) {
-            // scan to first instance of startchar:
             if (startChar != input[offset])
                 while(++offset < length && startChar != input[offset]);
-            int i = offset + 1;
-            int last = i + seq.length()-1;
-            if (offset < length) {
-                for (int j = 1; i < last && seq.charAt(j) == input[i]; i++, j++);
-                if (i == last) // found full sequence
+            if (offset >= length)
+                return -1;
+            int last = offset + seq.length()-1;
+            for (int i = 1, j = offset+1; i < seq.length(); i++, j++) {
+                if (seq.charAt(i) != input[j])
+                    break;
+            }
+            if (i == seq.length())
                 return offset - pos;
         }
-        }
         return -1;
     }
\ No newline at end of file

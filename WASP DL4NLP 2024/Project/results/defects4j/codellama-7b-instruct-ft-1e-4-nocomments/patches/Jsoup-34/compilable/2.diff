diff --git a/tmp/a70b6e7b-c5f6-486e-9a1e-93b97f1367c7_buggy.java b/tmp/279057d5-968e-4fcd-b83b-4e8481bb21ef_fixed.java
index 21f64c6..77cd759 100644
--- a/tmp/a70b6e7b-c5f6-486e-9a1e-93b97f1367c7_buggy.java
+++ b/tmp/279057d5-968e-4fcd-b83b-4e8481bb21ef_fixed.java
@@ -1,23 +1,16 @@
-    /**
-     * Returns the number of characters between the current position and the next instance of the input sequence
-     *
-     * @param seq scan target
-     * @return offset between current position and next instance of target. -1 if not found.
-     */
     int nextIndexOf(CharSequence seq) {
-        // doesn't handle scanning for surrogates
         char startChar = seq.charAt(0);
         for (int offset = pos; offset < length; offset++) {
-            // scan to first instance of startchar:
-            if (startChar != input[offset])
+            if (startChar != input[offset]) {
                 while(++offset < length && startChar != input[offset]);
-            int i = offset + 1;
-            int last = i + seq.length()-1;
+            }
+            int j;
+            int last = offset + seq.length()-1;
             if (offset < length) {
-                for (int j = 1; i < last && seq.charAt(j) == input[i]; i++, j++);
-                if (i == last) // found full sequence
+                for (j = 1; j < last && seq.charAt(j) == input[offset+j]; j++);
+                if (j == last) 
                     return offset - pos;
             }
         }
         return -1;
     }
\ No newline at end of file

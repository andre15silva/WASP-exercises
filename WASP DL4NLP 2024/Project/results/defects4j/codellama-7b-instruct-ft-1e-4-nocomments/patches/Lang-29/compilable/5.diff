diff --git a/tmp/61b029d2-7c89-43ab-b4e1-5e91f08a54da_buggy.java b/tmp/05638474-0540-453a-ab4d-2f64aa71a9ba_fixed.java
index 3ec995f..a506ac9 100644
--- a/tmp/61b029d2-7c89-43ab-b4e1-5e91f08a54da_buggy.java
+++ b/tmp/05638474-0540-453a-ab4d-2f64aa71a9ba_fixed.java
@@ -1,26 +1,14 @@
-    /**
-     * <p>
-     * Converts the given Java version string to an <code>int</code>.
-     * </p>
-     * 
-     * <p>
-     * Example return values:
-     * </p>
-     * <ul>
-     * <li><code>120</code> for Java 1.2</li>
-     * <li><code>131</code> for Java 1.3.1</li>
-     * <li><code>160</code> for Java 1.6.0_20</li>
-     * </ul>
-     * 
-     * <p>
-     * Patch releases are not reported.
-     * </p>
-     * <p>
-     * This method is package private instead of private to support unit test invocation.
-     * </p>
-     * 
-     * @return the version, for example 131 for Java 1.3.1
-     */
     static float toJavaVersionInt(String version) {
-        return toVersionInt(toJavaVersionIntArray(version, JAVA_VERSION_TRIM_SIZE));
+        if (version != null && version.length() > 0) {
+            String trimmedVersion = JAVA_VERSION.trim();
+            int indexAfterPrefix = trimmedVersion.indexOf("-");
+            if (indexAfterPrefix == -1) {
+                indexAfterPrefix = trimmedVersion.length();
+            }
+            int[] jv = toJavaVersionIntArray(trimmedVersion.substring(0, indexAfterPrefix), JAVA_VERSION_TRIM_SIZE);
+            if (jv != null) {
+                return toVersionInt(jv);
+            }
+        }
+        return 0f;
     }
\ No newline at end of file

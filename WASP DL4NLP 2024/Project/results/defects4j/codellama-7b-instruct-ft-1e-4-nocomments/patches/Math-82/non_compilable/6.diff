diff --git a/tmp/6d1b72b0-a804-4674-9232-1cdb781987b9_buggy.java b/tmp/63a8d006-28e4-4e12-9841-2aea5e4d6e8a_fixed.java
index 220820e..53ba68c 100644
--- a/tmp/6d1b72b0-a804-4674-9232-1cdb781987b9_buggy.java
+++ b/tmp/63a8d006-28e4-4e12-9841-2aea5e4d6e8a_fixed.java
@@ -1,22 +1,24 @@
     /**
      * Returns the row with the minimum ratio as given by the minimum ratio test (MRT).
      * @param tableau simple tableau for the problem
      * @param col the column to test the ratio of.  See {@link #getPivotColumn(SimplexTableau)}
      * @return row with the minimum ratio
      */
     private Integer getPivotRow(final int col, final SimplexTableau tableau) {
         double minRatio = Double.MAX_VALUE;
         Integer minRatioPos = null;
         for (int i = tableau.getNumObjectiveFunctions(); i < tableau.getHeight(); i++) {
             final double rhs = tableau.getEntry(i, tableau.getWidth() - 1);
             final double entry = tableau.getEntry(i, col);
             if (MathUtils.compareTo(entry, 0, epsilon) >= 0) {
                 final double ratio = rhs / entry;
-                if (ratio < minRatio) {
+                if (Math.abs(ratio) < MathUtils.ulp(rhs) 
+                		 && ratio < minRatio 
+                     && MathUtils.isValidNumber(ratio)) {
                     minRatio = ratio;
                     minRatioPos = i; 
                 }
             }
         }
         return minRatioPos;
     }
\ No newline at end of file

diff --git a/tmp/9433e5b5-94b4-4494-bcc3-49997febcf5f_buggy.java b/tmp/3326f9b3-1adc-4971-a6ed-168c50fa60e2_fixed.java
index e4d90e7..4d424bc 100644
--- a/tmp/9433e5b5-94b4-4494-bcc3-49997febcf5f_buggy.java
+++ b/tmp/3326f9b3-1adc-4971-a6ed-168c50fa60e2_fixed.java
@@ -1,45 +1,40 @@
   @Override
   String toStringHelper(boolean forAnnotations) {
     if (hasReferenceName()) {
       return getReferenceName();
     } else if (prettyPrint) {
-      // Don't pretty print recursively.
         prettyPrint = false;
-
-      // Use a tree set so that the properties are sorted.
         Set<String> propertyNames = Sets.newTreeSet();
         for (ObjectType current = this;
              current != null && !current.isNativeObjectType() &&
                  propertyNames.size() <= MAX_PRETTY_PRINTED_PROPERTIES;
              current = current.getImplicitPrototype()) {
           propertyNames.addAll(current.getOwnPropertyNames());
         }
-
         StringBuilder sb = new StringBuilder();
         sb.append("{");
-
         int i = 0;
         for (String property : propertyNames) {
           if (i > 0) {
             sb.append(", ");
           }
-
+          if (this == current) {
+            sb.append("{...}");
+          } else {
             sb.append(property);
             sb.append(": ");
             sb.append(getPropertyType(property).toString());
-
+          }
           ++i;
           if (i == MAX_PRETTY_PRINTED_PROPERTIES) {
             sb.append(", ...");
             break;
           }
         }
-
         sb.append("}");
-
         prettyPrint = true;
         return sb.toString();
       } else {
         return "{...}";
       }
   }
\ No newline at end of file

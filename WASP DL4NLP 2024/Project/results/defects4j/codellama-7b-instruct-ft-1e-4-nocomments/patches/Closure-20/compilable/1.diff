diff --git a/tmp/0085b1b0-f72b-4ef0-b258-86bf75e6db05_buggy.java b/tmp/9733e2ba-65c9-4140-bec0-963537a35721_fixed.java
index d4e6d48..2992c74 100644
--- a/tmp/0085b1b0-f72b-4ef0-b258-86bf75e6db05_buggy.java
+++ b/tmp/9733e2ba-65c9-4140-bec0-963537a35721_fixed.java
@@ -1,23 +1,15 @@
   private Node tryFoldSimpleFunctionCall(Node n) {
     Preconditions.checkState(n.isCall());
     Node callTarget = n.getFirstChild();
     if (callTarget != null && callTarget.isName() &&
           callTarget.getString().equals("String")) {
-      // Fold String(a) to '' + (a) on immutable literals,
-      // which allows further optimizations
-      //
-      // We can't do this in the general case, because String(a) has
-      // slightly different semantics than '' + (a). See
-      // http://code.google.com/p/closure-compiler/issues/detail?id=759
-      Node value = callTarget.getNext();
-      if (value != null) {
+      Preconditions.checkState(callTarget.getNext() != null);
       Node addition = IR.add(
           IR.string("").srcref(callTarget),
-            value.detachFromParent());
+          callTarget.getNext().detachFromParent());
       n.getParent().replaceChild(n, addition);
       reportCodeChange();
       return addition;
     }
-    }
     return n;
   }
\ No newline at end of file

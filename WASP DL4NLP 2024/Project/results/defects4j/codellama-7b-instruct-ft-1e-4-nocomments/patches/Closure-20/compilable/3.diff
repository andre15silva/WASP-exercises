diff --git a/tmp/de5e2052-8e83-4554-b65e-675262235129_buggy.java b/tmp/8f57b0b8-3781-4c06-8f38-511fe0ab74d0_fixed.java
index d4e6d48..623a34a 100644
--- a/tmp/de5e2052-8e83-4554-b65e-675262235129_buggy.java
+++ b/tmp/8f57b0b8-3781-4c06-8f38-511fe0ab74d0_fixed.java
@@ -1,23 +1,18 @@
   private Node tryFoldSimpleFunctionCall(Node n) {
     Preconditions.checkState(n.isCall());
     Node callTarget = n.getFirstChild();
-    if (callTarget != null && callTarget.isName() &&
-          callTarget.getString().equals("String")) {
-      // Fold String(a) to '' + (a) on immutable literals,
-      // which allows further optimizations
-      //
-      // We can't do this in the general case, because String(a) has
-      // slightly different semantics than '' + (a). See
-      // http://code.google.com/p/closure-compiler/issues/detail?id=759
+    if (callTarget != null && callTarget.isName()) {
+      if (callTarget.getString().equals("String")) {
         Node value = callTarget.getNext();
         if (value != null) {
           Node addition = IR.add(
               IR.string("").srcref(callTarget),
               value.detachFromParent());
           n.getParent().replaceChild(n, addition);
           reportCodeChange();
           return addition;
         }
       }
+    }
     return n;
   }
\ No newline at end of file

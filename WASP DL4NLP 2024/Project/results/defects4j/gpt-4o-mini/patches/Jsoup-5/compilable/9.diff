diff --git a/tmp/e0ca1422-3c8a-418e-bb92-5f431d87463b_buggy.java b/tmp/bbe2fb98-aa31-4f66-aed3-1a94a373f8fe_fixed.java
index 39dd8e7..173bf20 100644
--- a/tmp/e0ca1422-3c8a-418e-bb92-5f431d87463b_buggy.java
+++ b/tmp/bbe2fb98-aa31-4f66-aed3-1a94a373f8fe_fixed.java
@@ -1,30 +1,38 @@
 private Attribute parseAttribute() {
     tq.consumeWhitespace();
     String key = tq.consumeAttributeKey();
     String value = "";
     tq.consumeWhitespace();
     if (tq.matchChomp("=")) {
         tq.consumeWhitespace();
 
         if (tq.matchChomp(SQ)) {
             value = tq.chompTo(SQ);
         } else if (tq.matchChomp(DQ)) {
             value = tq.chompTo(DQ);
         } else {
             StringBuilder valueAccum = new StringBuilder();
             // no ' or " to look for, so scan to end tag or space (or end of stream)
             while (!tq.matchesAny("<", "/>", ">") && !tq.matchesWhitespace() && !tq.isEmpty()) {
+                char currentChar = tq.peek(); // Check the next character
+                // Ensure we don't go out of bounds and is a valid char to consume
+                if (currentChar != -1) {
                     valueAccum.append(tq.consume());
+                } else {
+                    break; // Break the loop if no valid character to consume
+                }
             }
             value = valueAccum.toString();
         }
         tq.consumeWhitespace();
     }
-        if (key.length() != 0)
+    if (key.length() != 0) {
         return Attribute.createFromEncoded(key, value);
-        else {
-            tq.consume();
+    } else {
+        if (!tq.isEmpty()) {
+            tq.consume(); // Consume a character if available
                 
+        }
         return null;
     }
 }
\ No newline at end of file

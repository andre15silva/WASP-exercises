diff --git a/tmp/1ed7215f-90ca-4b69-ac79-d6a1658da0a7_buggy.java b/tmp/4c61071e-22d8-4af7-aabc-9ffc33028277_fixed.java
index 39dd8e7..9998ffb 100644
--- a/tmp/1ed7215f-90ca-4b69-ac79-d6a1658da0a7_buggy.java
+++ b/tmp/4c61071e-22d8-4af7-aabc-9ffc33028277_fixed.java
@@ -1,30 +1,29 @@
 private Attribute parseAttribute() {
     tq.consumeWhitespace();
     String key = tq.consumeAttributeKey();
     String value = "";
     tq.consumeWhitespace();
     if (tq.matchChomp("=")) {
         tq.consumeWhitespace();
 
         if (tq.matchChomp(SQ)) {
             value = tq.chompTo(SQ);
         } else if (tq.matchChomp(DQ)) {
             value = tq.chompTo(DQ);
         } else {
             StringBuilder valueAccum = new StringBuilder();
             // no ' or " to look for, so scan to end tag or space (or end of stream)
             while (!tq.matchesAny("<", "/>", ">") && !tq.matchesWhitespace() && !tq.isEmpty()) {
                 valueAccum.append(tq.consume());
             }
-                value = valueAccum.toString();
+            value = valueAccum.toString().trim(); // Ensure leading/trailing spaces are removed
         }
         tq.consumeWhitespace();
     }
-        if (key.length() != 0)
+    if (!key.isEmpty()) // Check if key is not empty
         return Attribute.createFromEncoded(key, value);
     else {
         tq.consume();
-                
         return null;
     }
 }
\ No newline at end of file

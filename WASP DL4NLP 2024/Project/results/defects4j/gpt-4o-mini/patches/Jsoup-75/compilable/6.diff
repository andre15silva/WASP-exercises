diff --git a/tmp/630ab26c-b1d6-45f6-8ac8-ef3222ea006a_buggy.java b/tmp/76c5ce51-be4e-40b1-a598-ed607b27ab84_fixed.java
index 98b456f..8ee5ca4 100644
--- a/tmp/630ab26c-b1d6-45f6-8ac8-ef3222ea006a_buggy.java
+++ b/tmp/76c5ce51-be4e-40b1-a598-ed607b27ab84_fixed.java
@@ -1,17 +1,22 @@
 final void html(final Appendable accum, final Document.OutputSettings out) throws IOException {
     final int sz = size;
     for (int i = 0; i < sz; i++) {
-            // inlined from Attribute.html()
         final String key = keys[i];
         final String val = vals[i];
         accum.append(' ').append(key);
 
         // collapse checked=null, checked="", checked=checked; write out others
         if (!(out.syntax() == Document.OutputSettings.Syntax.html
             && (val == null || val.equals(key) && Attribute.isBooleanAttribute(key)))) {
             accum.append("=\"");
             Entities.escape(accum, val == null ? EmptyString : val, out, true, false, false);
             accum.append('"');
+        } else if (Attribute.isBooleanAttribute(key)) {
+            // If it is a boolean attribute, do not include value in the output
+            // This will ensure attributes like "noshade" can appear without values
+            // e.g., <img src="foo" noshade nohref async autofocus="false">
+            // Thus, do not add '=val' for boolean attributes with relevant conditions
+            continue;
         }
     }
 }
\ No newline at end of file

diff --git a/tmp/24203bc8-48e6-447e-8bb7-8826c56c04ab_buggy.java b/tmp/b1dd4a6a-0ef3-49fe-88fc-a2989b639002_fixed.java
index 6e45f80..76a69c7 100644
--- a/tmp/24203bc8-48e6-447e-8bb7-8826c56c04ab_buggy.java
+++ b/tmp/b1dd4a6a-0ef3-49fe-88fc-a2989b639002_fixed.java
@@ -1,21 +1,21 @@
-  /**
-   * Returns a factory for all subtypes of {@code typeAdapter}. We do a runtime check to confirm
-   * that the deserialized type matches the type requested.
-   */
 public static <T1> TypeAdapterFactory newTypeHierarchyFactory(
     final Class<T1> clazz, final TypeAdapter<T1> typeAdapter) {
   return new TypeAdapterFactory() {
     @SuppressWarnings("unchecked")
     public <T2> TypeAdapter<T2> create(Gson gson, TypeToken<T2> typeToken) {
       final Class<? super T2> requestedType = typeToken.getRawType();
       if (!clazz.isAssignableFrom(requestedType)) {
         return null;
       }
+      // Ensure that we only return the typeAdapter if T2 is assignable from T1
+      if (!clazz.isAssignableFrom(requestedType)) {
+        throw new JsonSyntaxException("Expected a " + clazz.getName() + " but was " + requestedType.getName());
+      }
       return (TypeAdapter<T2>) typeAdapter;
+    }
     
-      }
     @Override public String toString() {
       return "Factory[typeHierarchy=" + clazz.getName() + ",adapter=" + typeAdapter + "]";
     }
   };
 }
\ No newline at end of file

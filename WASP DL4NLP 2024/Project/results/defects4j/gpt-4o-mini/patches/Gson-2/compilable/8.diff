diff --git a/tmp/0bc4e887-a0f8-4bcb-aec7-b8583f07b809_buggy.java b/tmp/fdff9bda-0147-435b-aea8-ee4272ffa8d9_fixed.java
index 6e45f80..d059301 100644
--- a/tmp/0bc4e887-a0f8-4bcb-aec7-b8583f07b809_buggy.java
+++ b/tmp/fdff9bda-0147-435b-aea8-ee4272ffa8d9_fixed.java
@@ -1,21 +1,22 @@
-  /**
-   * Returns a factory for all subtypes of {@code typeAdapter}. We do a runtime check to confirm
-   * that the deserialized type matches the type requested.
-   */
 public static <T1> TypeAdapterFactory newTypeHierarchyFactory(
     final Class<T1> clazz, final TypeAdapter<T1> typeAdapter) {
   return new TypeAdapterFactory() {
     @SuppressWarnings("unchecked")
     public <T2> TypeAdapter<T2> create(Gson gson, TypeToken<T2> typeToken) {
       final Class<? super T2> requestedType = typeToken.getRawType();
       if (!clazz.isAssignableFrom(requestedType)) {
         return null;
       }
+      // Ensuring type safety by checking if the adapter can handle the specific subtype
+      if (typeAdapter instanceof TypeAdapter) {
         return (TypeAdapter<T2>) typeAdapter;
+      } else {
+        return null; // or handle accordingly if typeAdapter cannot process requestedType
+      }
+    }
 
-      }
     @Override public String toString() {
       return "Factory[typeHierarchy=" + clazz.getName() + ",adapter=" + typeAdapter + "]";
     }
   };
 }
\ No newline at end of file

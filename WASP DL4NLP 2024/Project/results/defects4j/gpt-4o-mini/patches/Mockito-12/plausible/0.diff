diff --git a/tmp/2eb2cab0-de85-4df5-a99c-30b3d38d2ce1_buggy.java b/tmp/0b00c7dd-73fb-484c-988a-e1597c8223fc_fixed.java
index bada2b6..535b3dc 100644
--- a/tmp/2eb2cab0-de85-4df5-a99c-30b3d38d2ce1_buggy.java
+++ b/tmp/0b00c7dd-73fb-484c-988a-e1597c8223fc_fixed.java
@@ -1,16 +1,14 @@
-    /**
-     * Finds the generic type (parametrized type) of the field. If the field is not generic it returns Object.class. 
-     * 
-     * @param field
-     * @return
-     */
-    public Class getGenericType(Field field) {        
+public Class<?> getGenericType(Field field) {        
     Type generic = field.getGenericType();
     if (generic != null && generic instanceof ParameterizedType) {
         Type actual = ((ParameterizedType) generic).getActualTypeArguments()[0];
-                return (Class) actual;
-                //in case of nested generics we don't go deep
+        if (actual instanceof Class) {
+            return (Class<?>) actual;
+        } else if (actual instanceof ParameterizedType) {
+            // Handle nested generics by returning the raw class
+            return (Class<?>) ((ParameterizedType) actual).getRawType();
+        }
     }
     
     return Object.class;
 }
\ No newline at end of file

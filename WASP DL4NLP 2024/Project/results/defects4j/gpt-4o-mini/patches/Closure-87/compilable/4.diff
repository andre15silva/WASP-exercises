diff --git a/tmp/87391f93-dfa7-43fb-9b92-32df7441866d_buggy.java b/tmp/a48c091c-8e49-4cc3-a7b2-788e0890e9d1_fixed.java
index 19fd63e..07db83a 100644
--- a/tmp/87391f93-dfa7-43fb-9b92-32df7441866d_buggy.java
+++ b/tmp/a48c091c-8e49-4cc3-a7b2-788e0890e9d1_fixed.java
@@ -1,24 +1,18 @@
 /**
  * @return Whether the node is a block with a single statement that is
  *     an expression.
  */
 private boolean isFoldableExpressBlock(Node n) {
   if (n.getType() == Token.BLOCK) {
     if (n.hasOneChild()) {
       Node maybeExpr = n.getFirstChild();
-          // IE has a bug where event handlers behave differently when
-          // their return value is used vs. when their return value is in
-          // an EXPR_RESULT. It's pretty freaking weird. See:
-          // http://code.google.com/p/closure-compiler/issues/detail?id=291
-          // We try to detect this case, and not fold EXPR_RESULTs
-          // into other expressions.
-
-            // We only have to worry about methods with an implicit 'this'
-            // param, or this doesn't happen.
-
+      // Check if the single child is an expression statement and not an EXPR_RESULT
+      if (maybeExpr.getType() == Token.EXPR_RESULT) {
+        return NodeUtil.isExpressionNode(maybeExpr.getFirstChild());
+      } else {
         return NodeUtil.isExpressionNode(maybeExpr);
       }
     }
-
+  }
   return false;
 }
\ No newline at end of file

diff --git a/tmp/4ff461ec-51fd-4706-8fc7-f4d5ba0a761e_buggy.java b/tmp/fa557347-db30-4ac1-9b48-236e2bdaec13_fixed.java
index 19fd63e..8deb3bc 100644
--- a/tmp/4ff461ec-51fd-4706-8fc7-f4d5ba0a761e_buggy.java
+++ b/tmp/fa557347-db30-4ac1-9b48-236e2bdaec13_fixed.java
@@ -1,24 +1,14 @@
   /**
    * @return Whether the node is a block with a single statement that is
    *     an expression.
    */
   private boolean isFoldableExpressBlock(Node n) {
-    if (n.getType() == Token.BLOCK) {
-      if (n.hasOneChild()) {
+    if (n.getType() == Token.BLOCK && n.hasOneChild()) {
       Node maybeExpr = n.getFirstChild();
-          // IE has a bug where event handlers behave differently when
-          // their return value is used vs. when their return value is in
-          // an EXPR_RESULT. It's pretty freaking weird. See:
-          // http://code.google.com/p/closure-compiler/issues/detail?id=291
-          // We try to detect this case, and not fold EXPR_RESULTs
-          // into other expressions.
-
-            // We only have to worry about methods with an implicit 'this'
-            // param, or this doesn't happen.
-
-          return NodeUtil.isExpressionNode(maybeExpr);
+      // We check if the single child is an expression statement.
+      if (maybeExpr.getType() == Token.EXPR_RESULT && maybeExpr.hasOneChild()) {
+        return NodeUtil.isExpressionNode(maybeExpr.getFirstChild());
       }
     }
-
     return false;
   }
\ No newline at end of file

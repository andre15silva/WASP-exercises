diff --git a/tmp/487b784f-fa63-4053-bb05-12e5df108dcd_buggy.java b/tmp/70bc5e8a-4d7f-40aa-8c0b-17a9b82fbcaf_fixed.java
index 800e6e1..1ff2fcb 100644
--- a/tmp/487b784f-fa63-4053-bb05-12e5df108dcd_buggy.java
+++ b/tmp/70bc5e8a-4d7f-40aa-8c0b-17a9b82fbcaf_fixed.java
@@ -1,32 +1,25 @@
-    /**
-     * Visit a node in a local scope, and add any local variables or catch
-     * parameters into the local symbol table.
-     *
-     * @param t The node traversal.
-     * @param n The node being visited.
-     * @param parent The parent of n
-     */
 @Override public void visit(NodeTraversal t, Node n, Node parent) {
   if (n == scope.getRootNode()) return;
 
-      if (n.getType() == Token.LP && parent == scope.getRootNode()) {
-        handleFunctionInputs(parent);
+  // Handle function inputs when in the root node context
+  if (n.getType() == Token.FUNCTION && parent.getType() == Token.LP) {
+    handleFunctionInputs(n); // Pass the function node instead of parent
     return;
   }
 
   attachLiteralTypes(n);
   switch (n.getType()) {
     case Token.FUNCTION:
       if (parent.getType() == Token.NAME) {
         return;
       }
       defineDeclaredFunction(n, parent);
       break;
     case Token.CATCH:
       defineCatch(n, parent);
       break;
     case Token.VAR:
       defineVar(n, parent);
       break;
   }
 }
\ No newline at end of file

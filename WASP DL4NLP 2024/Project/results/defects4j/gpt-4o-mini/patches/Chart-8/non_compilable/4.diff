diff --git a/tmp/30fa50b8-dd00-423a-87cb-7e52e39f6fd8_buggy.java b/tmp/f620dfe4-55da-474f-99be-db0aeeacacbe_fixed.java
index 99f4092..1aaa56c 100644
--- a/tmp/30fa50b8-dd00-423a-87cb-7e52e39f6fd8_buggy.java
+++ b/tmp/f620dfe4-55da-474f-99be-db0aeeacacbe_fixed.java
@@ -1,13 +1,9 @@
-    /**
-     * Creates a time period for the week in which the specified date/time
-     * falls, calculated relative to the specified time zone.
-     *
-     * @param time  the date/time (<code>null</code> not permitted).
-     * @param zone  the time zone (<code>null</code> not permitted).
-     *
-     * @deprecated As of 1.0.7, use {@link #Week(Date, TimeZone, Locale)}.
-     */
     public Week(Date time, TimeZone zone) {
-        // defer argument checking...
-        this(time, RegularTimePeriod.DEFAULT_TIME_ZONE, Locale.getDefault());
+        Calendar calendar = Calendar.getInstance(zone, Locale.getDefault());
+        calendar.setTime(time);
+        // Assume weeks start on Monday in this context
+        calendar.setFirstDayOfWeek(Calendar.MONDAY);
+        calendar.setMinimalDaysInFirstWeek(4); // Ensure the week is ISO-compliant
+        int week = calendar.get(Calendar.WEEK_OF_YEAR);
+        this.week = week;
     }
\ No newline at end of file

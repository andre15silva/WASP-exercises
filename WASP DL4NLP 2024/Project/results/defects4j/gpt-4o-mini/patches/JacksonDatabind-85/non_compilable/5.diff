diff --git a/tmp/6290f406-7259-4362-a4e6-1a461cd33ca6_buggy.java b/tmp/d19c02f0-1f16-4a0b-8b34-7244a8f1a587_fixed.java
index d926eea..dcd33f4 100644
--- a/tmp/6290f406-7259-4362-a4e6-1a461cd33ca6_buggy.java
+++ b/tmp/d19c02f0-1f16-4a0b-8b34-7244a8f1a587_fixed.java
@@ -1,48 +1,40 @@
 @Override
 public JsonSerializer<?> createContextual(SerializerProvider serializers,
         BeanProperty property) throws JsonMappingException
 {
     if (property == null) {
         return this;
     }
     JsonFormat.Value format = findFormatOverrides(serializers, property, handledType());
     if (format == null) {
         return this;
     }
+    
     // Simple case first: serialize as numeric timestamp?
     JsonFormat.Shape shape = format.getShape();
     if (shape.isNumeric()) {
         return withFormat(Boolean.TRUE, null);
     }
 
-        // 08-Jun-2017, tatu: With [databind#1648], this gets bit tricky..
-        // First: custom pattern will override things
+    // handle custom pattern, locale, and timezone
     if ((shape == JsonFormat.Shape.STRING) || format.hasPattern()
                     || format.hasLocale() || format.hasTimeZone()) {
         TimeZone tz = format.getTimeZone();
         final String pattern = format.hasPattern()
                         ? format.getPattern()
-                                    : StdDateFormat.DATE_FORMAT_STR_ISO8601;
+                        : "yyyy-MM-dd'T'HH:mm:ss.SSSXXX"; // Change to a default pattern similar to ISO8601
         final Locale loc = format.hasLocale()
                         ? format.getLocale()
                         : serializers.getLocale();
         SimpleDateFormat df = new SimpleDateFormat(pattern, loc);
         if (tz == null) {
             tz = serializers.getTimeZone();
         }
         df.setTimeZone(tz);
         return withFormat(Boolean.FALSE, df);
     }
 
-        // Otherwise, need one of these changes:
-
-
-        // Jackson's own `StdDateFormat` is quite easy to deal with...
-
-        // 08-Jun-2017, tatu: Unfortunately there's no generally usable
-        //    mechanism for changing `DateFormat` instances (or even clone()ing)
-        //    So: require it be `SimpleDateFormat`; can't config other types
-//            serializers.reportBadDefinition(handledType(), String.format(
-            // Ugh. No way to change `Locale`, create copy; must re-crete completely:
-        return this;
+    // Default to the configured date format if no format is specified
+    SimpleDateFormat defaultDf = (SimpleDateFormat) serializers.getDateFormat();
+    return withFormat(Boolean.FALSE, defaultDf);
 }
\ No newline at end of file

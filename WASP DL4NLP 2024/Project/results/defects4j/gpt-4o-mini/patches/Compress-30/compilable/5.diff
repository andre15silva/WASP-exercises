diff --git a/tmp/0e9abd6d-c939-4ea8-9f42-fd6cfd1d30e2_buggy.java b/tmp/cba85f81-296f-4f84-a5f0-8eb49dc7236e_fixed.java
index cae5e03..d58fab9 100644
--- a/tmp/0e9abd6d-c939-4ea8-9f42-fd6cfd1d30e2_buggy.java
+++ b/tmp/cba85f81-296f-4f84-a5f0-8eb49dc7236e_fixed.java
@@ -1,33 +1,33 @@
-    /*
-     * (non-Javadoc)
-     * 
-     * @see java.io.InputStream#read(byte[], int, int)
-     */
 @Override
-    public int read(final byte[] dest, final int offs, final int len)
-        throws IOException {
+public int read(final byte[] dest, final int offs, final int len) throws IOException {
     if (offs < 0) {
         throw new IndexOutOfBoundsException("offs(" + offs + ") < 0.");
     }
     if (len < 0) {
         throw new IndexOutOfBoundsException("len(" + len + ") < 0.");
     }
     if (offs + len > dest.length) {
         throw new IndexOutOfBoundsException("offs(" + offs + ") + len("
                                             + len + ") > dest.length(" + dest.length + ").");
     }
     if (this.in == null) {
         throw new IOException("stream closed");
     }
 
+    // If len is 0, return 0 immediately.
+    if (len == 0) {
+        return 0;
+    }
+
     final int hi = offs + len;
     int destOffs = offs;
     int b;
     while (destOffs < hi && ((b = read0()) >= 0)) {
         dest[destOffs++] = (byte) b;
         count(1);
     }
 
+    // Update return value based on how many bytes were read
     int c = (destOffs == offs) ? -1 : (destOffs - offs);
     return c;
 }
\ No newline at end of file

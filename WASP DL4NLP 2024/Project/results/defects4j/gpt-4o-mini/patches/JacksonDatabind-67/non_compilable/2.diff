diff --git a/tmp/79991f76-74db-480a-9296-1435d14cb620_buggy.java b/tmp/22a6f725-0bd6-4c13-986a-081eb1f10d43_fixed.java
index bc80637..58925a3 100644
--- a/tmp/79991f76-74db-480a-9296-1435d14cb620_buggy.java
+++ b/tmp/22a6f725-0bd6-4c13-986a-081eb1f10d43_fixed.java
@@ -1,33 +1,46 @@
 @Override
 public KeyDeserializer createKeyDeserializer(DeserializationContext ctxt,
         JavaType type)
     throws JsonMappingException
 {
     final DeserializationConfig config = ctxt.getConfig();
     KeyDeserializer deser = null;
     if (_factoryConfig.hasKeyDeserializers()) {
         BeanDescription beanDesc = config.introspectClassAnnotations(type.getRawClass());
         for (KeyDeserializers d  : _factoryConfig.keyDeserializers()) {
             deser = d.findKeyDeserializer(type, config, beanDesc);
             if (deser != null) {
                 break;
             }
         }
     }
     // the only non-standard thing is this:
     if (deser == null) {
         if (type.isEnumType()) {
             return _createEnumKeyDeserializer(ctxt, type);
         }
         deser = StdKeyDeserializers.findStringBasedKeyDeserializer(config, type);
     }
     // and then post-processing
     if (deser != null) {
         if (_factoryConfig.hasDeserializerModifiers()) {
             for (BeanDeserializerModifier mod : _factoryConfig.deserializerModifiers()) {
                 deser = mod.modifyKeyDeserializer(config, type, deser);
             }
         }
     }
+    // Ensure the key serializer uses case insensitivity for enums
+    if (type.isEnumType() && deser instanceof KeyDeserializer) {
+        return new KeyDeserializer() {
+            @Override
+            public Object deserializeKey(String key, DeserializationContext ctxt)
+                    throws IOException
+            {
+                Class<? extends Enum> rawClass = (Class<? extends Enum>) type.getRawClass();
+                // Use the appropriate mapping logic to handle case insensitivity
+                return Enum.valueOf(rawClass, key.toUpperCase());
+            }
+        };
+    }
     return deser;
 }
\ No newline at end of file

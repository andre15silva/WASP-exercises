diff --git a/tmp/71fdcf46-32fb-443a-acf2-f998d2b81025_buggy.java b/tmp/b4076174-caf6-4a66-a7fa-b0cbf7c79250_fixed.java
index 2573d30..449ff9f 100644
--- a/tmp/71fdcf46-32fb-443a-acf2-f998d2b81025_buggy.java
+++ b/tmp/b4076174-caf6-4a66-a7fa-b0cbf7c79250_fixed.java
@@ -1,20 +1,25 @@
   /**
    * Checks name referenced in node to determine if it might have
    * changed.
    * @return Whether the replacement can be made.
    */
   private boolean isSafeReplacement(Node node, Node replacement) {
     // No checks are needed for simple names.
     if (node.isName()) {
       return true;
     }
     Preconditions.checkArgument(node.isGetProp());
 
+    // Correcting the way we get the property and its child node.
     node = node.getFirstChild();
-    if (node.isName()
-        && isNameAssignedTo(node.getString(), replacement)) {
+    if (node.isName()) {
+      String name = node.getString();
+      // This checks if the name is assigned to the replacement
+      // for nodes representing a property access.
+      if (isNameAssignedTo(name, replacement)) {
         return false;
       }
+    }
 
     return true;
   }
\ No newline at end of file

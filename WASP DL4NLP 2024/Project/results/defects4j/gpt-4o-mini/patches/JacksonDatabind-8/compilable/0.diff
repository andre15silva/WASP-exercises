diff --git a/tmp/6b6d085f-340b-486a-9ba0-d0a6f32871ac_buggy.java b/tmp/105c9027-1457-456d-827b-0fb8ffe85577_fixed.java
index c9da1b7..81419bd 100644
--- a/tmp/6b6d085f-340b-486a-9ba0-d0a6f32871ac_buggy.java
+++ b/tmp/105c9027-1457-456d-827b-0fb8ffe85577_fixed.java
@@ -1,33 +1,30 @@
 protected void verifyNonDup(AnnotatedWithParams newOne, int typeIndex, boolean explicit)
 {
     final int mask = (1 << typeIndex);
     _hasNonDefaultCreator = true;
     AnnotatedWithParams oldOne = _creators[typeIndex];
+
     // already had an explicitly marked one?
     if (oldOne != null) {
-
-            if ((_explicitCreators & mask) != 0) { // already had explicitly annotated, leave as-is
-                // but skip, if new one not annotated
-                if (!explicit) {
-                    return;
-                }
-                // both explicit: verify
-                // otherwise only verify if neither explicitly annotated.
-            }
-
-            // one more thing: ok to override in sub-class
+        // Check if both are of the same class and both are explicit
         if (oldOne.getClass() == newOne.getClass()) {
-                // [databind#667]: avoid one particular class of bogus problems
-
+            if ((_explicitCreators & mask) != 0 && explicit) {
                 throw new IllegalArgumentException("Conflicting " + TYPE_DESCS[typeIndex]
                         + " creators: already had explicitly marked " + oldOne + ", encountered " + newOne);
-                // otherwise, which one to choose?
-                    // new type more generic, use old
-                // new type more specific, use it
+            }
+            // If one is explicit and the other is not, we can choose the explicit one
+            if (explicit) {
+                // If newOne is explicit, and oldOne was not explicitly marked, we replace it.
+                _creators[typeIndex] = _fixAccess(newOne);
+                _explicitCreators |= mask; // Mark the new one as explicitly marked
+                return;
+            }
+            // If oldOne is explicit, we should not override it.
+            return;
         }
     }
     if (explicit) {
         _explicitCreators |= mask;
     }
     _creators[typeIndex] = _fixAccess(newOne);
 }
\ No newline at end of file

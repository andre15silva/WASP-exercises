diff --git a/tmp/f1f41c5d-95d1-47e8-9c84-70f2d739efaa_buggy.java b/tmp/8a6ab047-c66d-437e-ae46-43df7d1ad40b_fixed.java
index 875b31b..bbe4b79 100644
--- a/tmp/f1f41c5d-95d1-47e8-9c84-70f2d739efaa_buggy.java
+++ b/tmp/8a6ab047-c66d-437e-ae46-43df7d1ad40b_fixed.java
@@ -1,54 +1,44 @@
-    /**
-     * Render the specified text and return the rendered Options
-     * in a StringBuffer.
-     *
-     * @param sb The StringBuffer to place the rendered text into.
-     * @param width The number of characters to display per line
-     * @param nextLineTabStop The position on the next line for the first tab.
-     * @param text The text to be rendered.
-     *
-     * @return the StringBuffer with the rendered Options contents.
-     */
 protected StringBuffer renderWrappedText(StringBuffer sb, int width, 
                                          int nextLineTabStop, String text)
 {
     int pos = findWrapPos(text, width, 0);
 
     if (pos == -1)
     {
         sb.append(rtrim(text));
-
         return sb;
     }
     sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
 
     if (nextLineTabStop >= width)
     {
         // stops infinite loop happening
         nextLineTabStop = width - 1;
     }
 
     // all following lines must be padded with nextLineTabStop space 
     // characters
     final String padding = createPadding(nextLineTabStop);
 
-        while (true)
+    while (pos != -1)
     {
         text = padding + text.substring(pos).trim();
         pos = findWrapPos(text, width, 0);
         
         if (pos == -1)
         {
             sb.append(text);
-
             return sb;
         }
 
-            if ( (text.length() > width) && (pos == nextLineTabStop - 1) ) 
+        // Adjust for cases where the found position is too early
+        if ( (text.length() > width) && (pos < nextLineTabStop)) 
         {
-                pos = width;
+            pos = nextLineTabStop;
         }
 
         sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
     }
+    
+    return sb; // Ensure the method returns the sb at the end
 }
\ No newline at end of file

diff --git a/tmp/09398c97-a262-417e-afd9-09a15da0bc0d_buggy.java b/tmp/fda95454-d938-4c13-ab60-3328aeb610b4_fixed.java
index c6b65da..5f677de 100644
--- a/tmp/09398c97-a262-417e-afd9-09a15da0bc0d_buggy.java
+++ b/tmp/fda95454-d938-4c13-ab60-3328aeb610b4_fixed.java
@@ -1,25 +1,28 @@
-    /**
-     * Returns the options with a long name starting with the name specified.
-     * 
-     * @param opt the partial name of the option
-     * @return the options matching the partial name specified, or an empty list if none matches
-     * @since 1.3
-     */
 public List<String> getMatchingOptions(String opt)
 {
     opt = Util.stripLeadingHyphens(opt);
     
     List<String> matchingOpts = new ArrayList<String>();
+    boolean exactMatchFound = false;
 
     // for a perfect match return the single option only
-
     for (String longOpt : longOpts.keySet())
     {
-            if (longOpt.startsWith(opt))
-            {
+        if (longOpt.equals(opt)) {
+            exactMatchFound = true;
+            matchingOpts.clear(); // clear previous matches since we found an exact match
             matchingOpts.add(longOpt);
+            break; // exit the loop early since we found the exact match
         }
+        else if (longOpt.startsWith(opt)) {
+            matchingOpts.add(longOpt);
+        }
+    }
+    
+    // If more than one matching option is found and any is an exact match, retain only that
+    if (exactMatchFound && matchingOpts.size() > 1) {
+        matchingOpts.retainAll(Collections.singletonList(opt));
     }
 
     return matchingOpts;
 }
\ No newline at end of file

diff --git a/tmp/dcc2018c-e6fa-4dc6-8d54-fa0ae164c694_buggy.java b/tmp/758e1363-98bb-41ea-a382-7260a35e516b_fixed.java
index c6b65da..0a3689b 100644
--- a/tmp/dcc2018c-e6fa-4dc6-8d54-fa0ae164c694_buggy.java
+++ b/tmp/758e1363-98bb-41ea-a382-7260a35e516b_fixed.java
@@ -1,25 +1,26 @@
-    /**
-     * Returns the options with a long name starting with the name specified.
-     * 
-     * @param opt the partial name of the option
-     * @return the options matching the partial name specified, or an empty list if none matches
-     * @since 1.3
-     */
 public List<String> getMatchingOptions(String opt)
 {
     opt = Util.stripLeadingHyphens(opt);
     
     List<String> matchingOpts = new ArrayList<String>();
+    boolean exactMatchFound = false;
 
     // for a perfect match return the single option only
-
     for (String longOpt : longOpts.keySet())
     {
-            if (longOpt.startsWith(opt))
-            {
+        if (longOpt.equals(opt)) {
+            exactMatchFound = true;
+            matchingOpts.clear(); // Clear any previous matches
             matchingOpts.add(longOpt);
+            break; // Exit the loop since we found an exact match
+        } else if (longOpt.startsWith(opt)) {
+            matchingOpts.add(longOpt);
+        }
     }
+
+    if (!exactMatchFound && matchingOpts.size() > 1) {
+        throw new AmbiguousOptionException("Ambiguous option: '--" + opt + "'  (could be: " + String.join(", ", matchingOpts) + ")");
     }
 
     return matchingOpts;
 }
\ No newline at end of file

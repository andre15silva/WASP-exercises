diff --git a/tmp/1017f045-2174-45dc-aae3-a9aad464e70d_buggy.java b/tmp/91cbca12-620e-4368-95a3-f7faf3bc12ce_fixed.java
index 1303a19..54547c5 100644
--- a/tmp/1017f045-2174-45dc-aae3-a9aad464e70d_buggy.java
+++ b/tmp/91cbca12-620e-4368-95a3-f7faf3bc12ce_fixed.java
@@ -1,45 +1,47 @@
 private Node tryFoldArrayAccess(Node n, Node left, Node right) {
     Node parent = n.getParent();
     // If GETPROP/GETELEM is used as assignment target the array literal is
     // acting as a temporary we can't fold it here:
     //    "[][0] += 1"
 
     if (right.getType() != Token.NUMBER) {
         // Sometimes people like to use complex expressions to index into
         // arrays, or strings to index into array methods.
         return n;
     }
 
     double index = right.getDouble();
     int intIndex = (int) index;
     if (intIndex != index) {
         error(INVALID_GETELEM_INDEX_ERROR, right);
         return n;
     }
 
-    if (intIndex < 0) {
-      error(INDEX_OUT_OF_BOUNDS_ERROR, right);
-      return n;
-    }
-
     Node elem = left.getFirstChild();
-    for (int i = 0; elem != null && i < intIndex; i++) {
+    for (int i = 0; elem != null && i <= intIndex; i++) {
+        if (i == intIndex) {
+            // Found the element at the specified index
+            break;
+        }
         elem = elem.getNext();
     }
 
     if (elem == null) {
+        // Adjusted to allow for assignment to an empty array
+        if (intIndex > 0) { 
             error(INDEX_OUT_OF_BOUNDS_ERROR, right);
             return n;
         }
-
-    if (elem.getType() == Token.EMPTY) {
+        // If the index is 0 and the array is empty, we create and use an undefined node
+        elem = NodeUtil.newUndefinedNode(left);
+    } else if (elem.getType() == Token.EMPTY) {
         elem = NodeUtil.newUndefinedNode(elem);
     } else {
         left.removeChild(elem);
     }
 
     // Replace the entire GETELEM with the value
     n.getParent().replaceChild(n, elem);
     reportCodeChange();
     return elem;
 }
\ No newline at end of file

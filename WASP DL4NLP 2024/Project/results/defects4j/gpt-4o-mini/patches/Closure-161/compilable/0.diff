diff --git a/tmp/0d3ed34b-5118-4f17-be00-95cb558f741c_buggy.java b/tmp/ff2c4896-dd92-4188-af14-cfbbc85582fb_fixed.java
index 1303a19..6bec427 100644
--- a/tmp/0d3ed34b-5118-4f17-be00-95cb558f741c_buggy.java
+++ b/tmp/ff2c4896-dd92-4188-af14-cfbbc85582fb_fixed.java
@@ -1,45 +1,40 @@
 private Node tryFoldArrayAccess(Node n, Node left, Node right) {
     Node parent = n.getParent();
-    // If GETPROP/GETELEM is used as assignment target the array literal is
-    // acting as a temporary we can't fold it here:
-    //    "[][0] += 1"
     
     if (right.getType() != Token.NUMBER) {
-      // Sometimes people like to use complex expressions to index into
-      // arrays, or strings to index into array methods.
         return n;
     }
 
     double index = right.getDouble();
     int intIndex = (int) index;
     if (intIndex != index) {
         error(INVALID_GETELEM_INDEX_ERROR, right);
         return n;
     }
 
-    if (intIndex < 0) {
-      error(INDEX_OUT_OF_BOUNDS_ERROR, right);
-      return n;
-    }
-
     Node elem = left.getFirstChild();
-    for (int i = 0; elem != null && i < intIndex; i++) {
+    for (int i = 0; elem != null && i <= intIndex; i++) {
+        if (i == intIndex) {
+            // Found the element we want to access
+            break;
+        }
         elem = elem.getNext();
     }
 
     if (elem == null) {
         error(INDEX_OUT_OF_BOUNDS_ERROR, right);
         return n;
     }
 
+    // If the element is EMPTY, create a new undefined node
     if (elem.getType() == Token.EMPTY) {
         elem = NodeUtil.newUndefinedNode(elem);
     } else {
-      left.removeChild(elem);
+        left.removeChild(elem); // Remove the element if not empty
     }
 
     // Replace the entire GETELEM with the value
-    n.getParent().replaceChild(n, elem);
+    parent.replaceChild(n, elem);
     reportCodeChange();
     return elem;
 }
\ No newline at end of file

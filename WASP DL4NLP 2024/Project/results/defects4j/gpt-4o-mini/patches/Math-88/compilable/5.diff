diff --git a/tmp/345f592d-8368-4724-9d25-ded61343f16a_buggy.java b/tmp/4603650b-6ef4-4d14-9edd-3a20e51ecb53_fixed.java
index 544303b..dde4b64 100644
--- a/tmp/345f592d-8368-4724-9d25-ded61343f16a_buggy.java
+++ b/tmp/4603650b-6ef4-4d14-9edd-3a20e51ecb53_fixed.java
@@ -1,29 +1,29 @@
-    /**
-     * Get the current solution.
-     * <p>
-     * {@link #solve} should be called first for this to be the optimal solution.
-     * </p>
-     * @return current solution
-     */
 protected RealPointValuePair getSolution() {
     double[] coefficients = new double[getOriginalNumDecisionVariables()];
     Integer basicRow =
         getBasicRow(getNumObjectiveFunctions() + getOriginalNumDecisionVariables());
     double mostNegative = basicRow == null ? 0 : getEntry(basicRow, getRhsOffset());
     for (int i = 0; i < coefficients.length; i++) {
         basicRow = getBasicRow(getNumObjectiveFunctions() + i);
         // if multiple variables can take a given value 
         // then we choose the first and set the rest equal to 0
         coefficients[i] =
             (basicRow == null ? 0 : getEntry(basicRow, getRhsOffset())) -
             (restrictToNonNegative ? 0 : mostNegative);
         if (basicRow != null) {
-                for (int j = getNumObjectiveFunctions(); j < getNumObjectiveFunctions() + i; j++) {
+            boolean hasSingleValue = true;
+            for (int j = getNumObjectiveFunctions(); j < getNumObjectiveFunctions() + getOriginalNumDecisionVariables(); j++) {
                 if (tableau.getEntry(basicRow, j) == 1) {
-                         coefficients[i] = 0;
+                    if (j != (getNumObjectiveFunctions() + i)) {
+                        hasSingleValue = false; // Found another variable that takes value 1
+                        break;
                     }
                 }
             }
+            if (!hasSingleValue) {
+                coefficients[i] = 0; // If another variable also takes value 1, set this coefficient to 0
+            }
+        }
     }
     return new RealPointValuePair(coefficients, f.getValue(coefficients));
 }
\ No newline at end of file

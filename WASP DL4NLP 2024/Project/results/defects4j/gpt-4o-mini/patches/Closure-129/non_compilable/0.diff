diff --git a/tmp/68d90d3f-5e02-4ba7-baea-a512c034a0ee_buggy.java b/tmp/ea160997-7b0c-40dd-ab87-fc812d0ab462_fixed.java
index e8705ac..d9b78cb 100644
--- a/tmp/68d90d3f-5e02-4ba7-baea-a512c034a0ee_buggy.java
+++ b/tmp/ea160997-7b0c-40dd-ab87-fc812d0ab462_fixed.java
@@ -1,24 +1,18 @@
-    /**
-     * There are two types of calls we are interested in calls without explicit
-     * "this" values (what we are call "free" calls) and direct call to eval.
-     */
 private void annotateCalls(Node n) {
     Preconditions.checkState(n.isCall());
 
-      // Keep track of of the "this" context of a call.  A call without an
+    // Keep track of the "this" context of a call. A call without an
     // explicit "this" is a free call.
     Node first = n.getFirstChild();
 
     // ignore cast nodes.
-
-      if (!NodeUtil.isGet(first)) {
+    if (!NodeUtil.isGet(first) && !NodeUtil.isCast(first)) { // Added check for cast nodes
         n.putBooleanProp(Node.FREE_CALL, true);
     }
 
     // Keep track of the context in which eval is called. It is important
     // to distinguish between "(0, eval)()" and "eval()".
-      if (first.isName() &&
-          "eval".equals(first.getString())) {
+    if (first.isName() && "eval".equals(first.getString())) {
         first.putBooleanProp(Node.DIRECT_EVAL, true);
     }
 }
\ No newline at end of file

diff --git a/tmp/38dc3728-e643-4ae6-b4fc-a4024bd95768_buggy.java b/tmp/8006c301-bf67-4989-b8a6-c5440e250835_fixed.java
index 03b03d7..916cd5a 100644
--- a/tmp/38dc3728-e643-4ae6-b4fc-a4024bd95768_buggy.java
+++ b/tmp/8006c301-bf67-4989-b8a6-c5440e250835_fixed.java
@@ -1,25 +1,17 @@
-    /**
-     * Adjusts the offset to be the earlier or later one during an overlap.
-     * 
-     * @param instant  the instant to adjust
-     * @param earlierOrLater  false for earlier, true for later
-     * @return the adjusted instant millis
-     */
 public long adjustOffset(long instant, boolean earlierOrLater) {
-        // a bit messy, but will work in all non-pathological cases
-        
     // evaluate 3 hours before and after to work out if anything is happening
     long instantBefore = convertUTCToLocal(instant - 3 * DateTimeConstants.MILLIS_PER_HOUR);
     long instantAfter = convertUTCToLocal(instant + 3 * DateTimeConstants.MILLIS_PER_HOUR);
     if (instantBefore == instantAfter) {
         return instant;  // not an overlap (less than is a gap, equal is normal case)
     }
     
     // work out range of instants that have duplicate local times
     long local = convertUTCToLocal(instant);
-        return convertLocalToUTC(local, false, earlierOrLater ? instantAfter : instantBefore);
+    long duplicateLocal = earlierOrLater ? instantAfter : instantBefore;
     
-        // calculate result
-          // currently in later offset
-          // currently in earlier offset
+    // Adjust the local time to the correct offset, returning the UTC timestamp
+    long adjustedInstant = convertLocalToUTC(local, false, duplicateLocal);
+    
+    return adjustedInstant;
 }
\ No newline at end of file

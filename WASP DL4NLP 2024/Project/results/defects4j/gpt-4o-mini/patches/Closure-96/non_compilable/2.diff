diff --git a/tmp/3476218a-ed4d-43e8-b6b2-22098de3dee6_buggy.java b/tmp/0b79624b-1448-4e4a-8035-c6eb45967eda_fixed.java
index e0ecec8..43ca441 100644
--- a/tmp/3476218a-ed4d-43e8-b6b2-22098de3dee6_buggy.java
+++ b/tmp/0b79624b-1448-4e4a-8035-c6eb45967eda_fixed.java
@@ -1,35 +1,43 @@
 /**
  * Visits the parameters of a CALL or a NEW node.
  */
 private void visitParameterList(NodeTraversal t, Node call,
     FunctionType functionType) {
   Iterator<Node> arguments = call.children().iterator();
   arguments.next(); // skip the function name
 
   Iterator<Node> parameters = functionType.getParameters().iterator();
   int ordinal = 0;
   Node parameter = null;
   Node argument = null;
-    while (arguments.hasNext() &&
-           parameters.hasNext()) {
-      // If there are no parameters left in the list, then the while loop
-      // above implies that this must be a var_args function.
-        parameter = parameters.next();
+  boolean isVarArgs = functionType.isVarArgs();
+
+  while (arguments.hasNext()) {
     argument = arguments.next();
     ordinal++;
 
+    if (parameters.hasNext()) {
+      parameter = parameters.next();
       validator.expectArgumentMatchesParameter(t, argument,
           getJSType(argument), getJSType(parameter), call, ordinal);
+    } else if (!isVarArgs) {
+      // No more parameters left, but it's not a var_args function
+      report(t, call, WRONG_ARGUMENT_COUNT,
+              validator.getReadableJSTypeName(call.getFirstChild(), false),
+              String.valueOf(ordinal), String.valueOf(functionType.getMinArguments()),
+              functionType.getMaxArguments() != Integer.MAX_VALUE ?
+              " and no more than " + functionType.getMaxArguments() + " argument(s)" : "");
+    }
   }
 
-    int numArgs = call.getChildCount() - 1;
+  int numArgs = ordinal; // Update to count total processed arguments
   int minArgs = functionType.getMinArguments();
   int maxArgs = functionType.getMaxArguments();
   if (minArgs > numArgs || maxArgs < numArgs) {
     report(t, call, WRONG_ARGUMENT_COUNT,
             validator.getReadableJSTypeName(call.getFirstChild(), false),
             String.valueOf(numArgs), String.valueOf(minArgs),
             maxArgs != Integer.MAX_VALUE ?
             " and no more than " + maxArgs + " argument(s)" : "");
   }
 }
\ No newline at end of file

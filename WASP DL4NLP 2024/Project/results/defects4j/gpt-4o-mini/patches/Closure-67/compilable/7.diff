diff --git a/tmp/0cd7abe3-ac0e-43a9-87cc-0cfb42390b50_buggy.java b/tmp/82c47a6c-bfef-493d-bd8e-1aeea81c340e_fixed.java
index 939f49b..4cb6daf 100644
--- a/tmp/0cd7abe3-ac0e-43a9-87cc-0cfb42390b50_buggy.java
+++ b/tmp/82c47a6c-bfef-493d-bd8e-1aeea81c340e_fixed.java
@@ -1,21 +1,22 @@
 private boolean isPrototypePropertyAssign(Node assign) {
   Node n = assign.getFirstChild();
   if (n != null && NodeUtil.isVarOrSimpleAssignLhs(n, assign)
       && n.getType() == Token.GETPROP
-          ) {
+      && n.getFirstChild() != null) { // Ensure there is a GETPROP child
     // We want to exclude the assignment itself from the usage list
     boolean isChainedProperty =
         n.getFirstChild().getType() == Token.GETPROP;
 
     if (isChainedProperty) {
       Node child = n.getFirstChild().getFirstChild().getNext();
 
-          if (child.getType() == Token.STRING &&
+      // Check if it's a property access of the prototype and its string value is "prototype"
+      if (child != null && child.getType() == Token.STRING &&
           child.getString().equals("prototype")) {
         return true;
       }
     }
   }
 
   return false;
 }
\ No newline at end of file

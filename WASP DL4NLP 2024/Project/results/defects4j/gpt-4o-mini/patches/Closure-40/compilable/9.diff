diff --git a/tmp/d7ba88bd-b8fd-4f2e-8a95-798b126d1756_buggy.java b/tmp/712711d5-7259-4c79-948a-df1293f6d349_fixed.java
index 670114d..61a0b4e 100644
--- a/tmp/d7ba88bd-b8fd-4f2e-8a95-798b126d1756_buggy.java
+++ b/tmp/712711d5-7259-4c79-948a-df1293f6d349_fixed.java
@@ -1,48 +1,49 @@
 @Override
 public void visit(NodeTraversal t, Node n, Node parent) {
-
     // Record global variable and function declarations
     if (t.inGlobalScope()) {
         if (NodeUtil.isVarDeclaration(n)) {
             NameInformation ns = createNameInformation(t, n, parent);
             Preconditions.checkNotNull(ns);
             recordSet(ns.name, n);
         } else if (NodeUtil.isFunctionDeclaration(n)) {
             Node nameNode = n.getFirstChild();
             NameInformation ns = createNameInformation(t, nameNode, n);
             if (ns != null) {
                 JsName nameInfo = getName(nameNode.getString(), true);
                 recordSet(nameInfo.name, nameNode);
             }
         } else if (NodeUtil.isObjectLitKey(n, parent)) {
             NameInformation ns = createNameInformation(t, n, parent);
             if (ns != null) {
                 recordSet(ns.name, n);
             }
         }
     }
 
     // Record assignments and call sites
     if (n.isAssign()) {
         Node nameNode = n.getFirstChild();
-
         NameInformation ns = createNameInformation(t, nameNode, n);
+        
+        // Check if ns is null before proceeding
         if (ns != null) {
             if (ns.isPrototype) {
                 recordPrototypeSet(ns.prototypeClass, ns.prototypeProperty, n);
             } else {
                 recordSet(ns.name, nameNode);
             }
         }
     } else if (n.isCall()) {
         Node nameNode = n.getFirstChild();
         NameInformation ns = createNameInformation(t, nameNode, n);
+
+        // Ensure ns is not null and only affects class definitions
         if (ns != null && ns.onlyAffectsClassDef) {
             JsName name = getName(ns.name, false);
             if (name != null) {
-          refNodes.add(new ClassDefiningFunctionNode(
-              name, n, parent, parent.getParent()));
+                refNodes.add(new ClassDefiningFunctionNode(name, n, parent, parent.getParent()));
             }
         }
     }
 }
\ No newline at end of file

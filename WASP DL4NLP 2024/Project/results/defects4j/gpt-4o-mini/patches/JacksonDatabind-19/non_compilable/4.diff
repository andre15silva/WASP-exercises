diff --git a/tmp/26b0ac9d-c0f3-4c67-b557-96378ea5e8bd_buggy.java b/tmp/5b21ca7a-c57d-4c87-b6d4-19222325f6f7_fixed.java
index 1bec4d6..96b03f0 100644
--- a/tmp/26b0ac9d-c0f3-4c67-b557-96378ea5e8bd_buggy.java
+++ b/tmp/5b21ca7a-c57d-4c87-b6d4-19222325f6f7_fixed.java
@@ -1,14 +1,23 @@
 private JavaType _mapType(Class<?> rawClass)
 {
     // 28-May-2015, tatu: Properties are special, as per [databind#810]
     JavaType[] typeParams = findTypeParameters(rawClass, Map.class);
+    
+    // Check if the rawClass is Properties
+    if (Properties.class.isAssignableFrom(rawClass)) {
+        // For Properties, we should use String for both key and value types
+        return MapType.construct(rawClass, _stringType(), _stringType());
+    }
+    
     // ok to have no types ("raw")
     if (typeParams == null) {
         return MapType.construct(rawClass, _unknownType(), _unknownType());
     }
+    
     // but exactly 2 types if any found
     if (typeParams.length != 2) {
         throw new IllegalArgumentException("Strange Map type "+rawClass.getName()+": can not determine type parameters");
     }
+    
     return MapType.construct(rawClass, typeParams[0], typeParams[1]);
 }
\ No newline at end of file

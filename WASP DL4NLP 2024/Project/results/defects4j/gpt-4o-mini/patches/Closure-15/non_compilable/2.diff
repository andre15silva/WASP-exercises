diff --git a/tmp/19dc740a-019b-41f8-8300-8ce46382e5a5_buggy.java b/tmp/5c419483-4bf8-4c3c-be0e-15cd90c90b02_fixed.java
index b56897c..d2f6aee 100644
--- a/tmp/19dc740a-019b-41f8-8300-8ce46382e5a5_buggy.java
+++ b/tmp/5c419483-4bf8-4c3c-be0e-15cd90c90b02_fixed.java
@@ -1,27 +1,31 @@
 @Override
 public boolean apply(Node n) {
-        // When the node is null it means, we reached the implicit return
-        // where the function returns (possibly without an return statement)
+    // When the node is null it means we reached the implicit return
+    // where the function returns (possibly without a return statement)
     if (n == null) {
         return false;
     }
 
-        // TODO(user): We only care about calls to functions that
-        // passes one of the dependent variable to a non-side-effect free
+    // We only care about calls to functions that
+    // pass one of the dependent variables to a non-side-effect free
     // function.
     if (n.isCall() && NodeUtil.functionCallHasSideEffects(n)) {
         return true;
     }
 
     if (n.isNew() && NodeUtil.constructorCallHasSideEffects(n)) {
         return true;
     }
 
+    // Add a check for the 'for-in' loop, which may also have side effects
+    if (n.isForIn()) {
+        return true;
+    }
 
     for (Node c = n.getFirstChild(); c != null; c = c.getNext()) {
         if (!ControlFlowGraph.isEnteringNewCfgNode(c) && apply(c)) {
             return true;
         }
     }
     return false;
 }
\ No newline at end of file

diff --git a/tmp/00fb5e1c-6a17-4038-9ed9-93cad0741f6b_buggy.java b/tmp/16b44272-c349-427e-862f-a50a4e14ca36_fixed.java
index b56897c..7cda013 100644
--- a/tmp/00fb5e1c-6a17-4038-9ed9-93cad0741f6b_buggy.java
+++ b/tmp/16b44272-c349-427e-862f-a50a4e14ca36_fixed.java
@@ -1,27 +1,31 @@
 @Override
 public boolean apply(Node n) {
-        // When the node is null it means, we reached the implicit return
-        // where the function returns (possibly without an return statement)
+    // When the node is null it means we reached the implicit return
+    // where the function returns (possibly without a return statement)
     if (n == null) {
         return false;
     }
 
-        // TODO(user): We only care about calls to functions that
-        // passes one of the dependent variable to a non-side-effect free
+    // We only care about calls to functions that
+    // pass one of the dependent variables to a non-side-effect free
     // function.
     if (n.isCall() && NodeUtil.functionCallHasSideEffects(n)) {
         return true;
     }
 
     if (n.isNew() && NodeUtil.constructorCallHasSideEffects(n)) {
         return true;
     }
 
+    // Check for 'in' operator specifically
+    if (n.isIn()) {
+        return true;
+    }
 
     for (Node c = n.getFirstChild(); c != null; c = c.getNext()) {
         if (!ControlFlowGraph.isEnteringNewCfgNode(c) && apply(c)) {
             return true;
         }
     }
     return false;
 }
\ No newline at end of file

diff --git a/tmp/dfb1e9c4-f608-4664-afd9-d535705d9896_buggy.java b/tmp/7db79b3b-c765-4cd5-84e6-b6f6fab7192c_fixed.java
index b56897c..a86255b 100644
--- a/tmp/dfb1e9c4-f608-4664-afd9-d535705d9896_buggy.java
+++ b/tmp/7db79b3b-c765-4cd5-84e6-b6f6fab7192c_fixed.java
@@ -1,27 +1,31 @@
 @Override
 public boolean apply(Node n) {
     // When the node is null it means, we reached the implicit return
-        // where the function returns (possibly without an return statement)
+    // where the function returns (possibly without a return statement)
     if (n == null) {
         return false;
     }
 
+    // If the node is a variable declaration, we should not inline it
+    if (n.isVar()) {
+        return false;
+    }
+
     // TODO(user): We only care about calls to functions that
-        // passes one of the dependent variable to a non-side-effect free
+    // pass one of the dependent variables to a non-side-effect free
     // function.
     if (n.isCall() && NodeUtil.functionCallHasSideEffects(n)) {
         return true;
     }
 
     if (n.isNew() && NodeUtil.constructorCallHasSideEffects(n)) {
         return true;
     }
 
-
     for (Node c = n.getFirstChild(); c != null; c = c.getNext()) {
         if (!ControlFlowGraph.isEnteringNewCfgNode(c) && apply(c)) {
             return true;
         }
     }
     return false;
 }
\ No newline at end of file

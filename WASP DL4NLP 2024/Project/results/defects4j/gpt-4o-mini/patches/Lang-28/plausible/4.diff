diff --git a/tmp/596367c9-bb67-42c5-ad14-55a32a56ca75_buggy.java b/tmp/37747c8b-1ac1-4c60-a6fa-635e7f405af3_fixed.java
index 4bbd561..b023b0d 100644
--- a/tmp/596367c9-bb67-42c5-ad14-55a32a56ca75_buggy.java
+++ b/tmp/37747c8b-1ac1-4c60-a6fa-635e7f405af3_fixed.java
@@ -1,37 +1,44 @@
-    /**
-     * {@inheritDoc}
-     */
 @Override
 public int translate(CharSequence input, int index, Writer out) throws IOException {
-        // TODO: Protect from ArrayIndexOutOfBounds
-        if(input.charAt(index) == '&' && input.charAt(index + 1) == '#') {
+    // Protect from ArrayIndexOutOfBounds
+    if (index + 1 >= input.length() || input.charAt(index) != '&' || input.charAt(index + 1) != '#') {
+        return 0;
+    }
+
     int start = index + 2;
     boolean isHex = false;
 
+    if (start < input.length()) {
         char firstChar = input.charAt(start);
         if (firstChar == 'x' || firstChar == 'X') {
             start++;
             isHex = true;
         }
+    } else {
+        return 0; // no digits after "&#" or "&#x"
+    }
 
     int end = start;
-            while(input.charAt(end) != ';') {
+    while (end < input.length() && input.charAt(end) != ';') {
         end++;
     }
 
+    if (end >= input.length()) {
+        return 0; // no terminating ';'
+    }
+
     int entityValue;
     try {
         if (isHex) {
             entityValue = Integer.parseInt(input.subSequence(start, end).toString(), 16);
         } else {
             entityValue = Integer.parseInt(input.subSequence(start, end).toString(), 10);
         }
     } catch (NumberFormatException nfe) {
         return 0;
     }
 
-                out.write(entityValue);
+    // Write the character to the output
+    out.write(Character.toChars(entityValue));
     return 2 + (end - start) + (isHex ? 1 : 0) + 1;
 }
\ No newline at end of file
-        return 0;
-    }

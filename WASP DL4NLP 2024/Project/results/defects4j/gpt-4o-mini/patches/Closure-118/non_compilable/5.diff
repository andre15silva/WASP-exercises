diff --git a/tmp/0219e1f4-730e-4123-b743-9b84543cdc7a_buggy.java b/tmp/6871dfbb-fce9-40f9-838c-f888e803e9e1_fixed.java
index 0b7c52e..29670c2 100644
--- a/tmp/0219e1f4-730e-4123-b743-9b84543cdc7a_buggy.java
+++ b/tmp/6871dfbb-fce9-40f9-838c-f888e803e9e1_fixed.java
@@ -1,27 +1,37 @@
     /**
      * Processes a OBJECTLIT node.
      */
     private void handleObjectLit(NodeTraversal t, Node n) {
-      for (Node child = n.getFirstChild();
-          child != null;
-          child = child.getNext()) {
-        // Maybe STRING, GET, SET
+        boolean hasNumber = false;
+        boolean hasString = false;
 
+        for (Node child = n.getFirstChild(); child != null; child = child.getNext()) {
             // We should never see a mix of numbers and strings.
             String name = child.getString();
             T type = typeSystem.getType(getScope(), n, name);
 
             Property prop = getProperty(name);
-        if (!prop.scheduleRenaming(child,
-                                   processProperty(t, prop, type, null))) {
-          // TODO(user): It doesn't look like the user can do much in this
-          // case right now.
+            if (!prop.scheduleRenaming(child, processProperty(t, prop, type, null))) {
                 if (propertiesToErrorFor.containsKey(name)) {
                     compiler.report(JSError.make(
                         t.getSourceName(), child, propertiesToErrorFor.get(name),
                         Warnings.INVALIDATION, name,
                         (type == null ? "null" : type.toString()), n.toString(), ""));
                 }
             }
+
+            // Determine the type of the property
+            if (type instanceof Number) {
+                hasNumber = true;
+            } else if (type instanceof String) {
+                hasString = true;
+            }
+
+            // Check for mix of types
+            if (hasNumber && hasString) {
+                compiler.report(JSError.make(
+                    t.getSourceName(), child, "Cannot mix numbers and strings in OBJECTLIT.",
+                    Warnings.INVALIDATION, name, (type == null ? "null" : type.toString()), n.toString(), ""));
+            }
         }
     }
\ No newline at end of file

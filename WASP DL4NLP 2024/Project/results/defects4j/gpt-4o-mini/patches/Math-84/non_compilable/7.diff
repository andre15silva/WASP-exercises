diff --git a/tmp/dc103a66-c583-446c-9dff-3ac2a690d9a1_buggy.java b/tmp/f4947404-b86e-430b-9356-7520904151e3_fixed.java
index 5f1dcf2..7e11786 100644
--- a/tmp/dc103a66-c583-446c-9dff-3ac2a690d9a1_buggy.java
+++ b/tmp/f4947404-b86e-430b-9356-7520904151e3_fixed.java
@@ -1,41 +1,42 @@
 /** {@inheritDoc} */
 @Override
 protected void iterateSimplex(final Comparator<RealPointValuePair> comparator)
     throws FunctionEvaluationException, OptimizationException, IllegalArgumentException {
 
     while (true) {
 
         incrementIterationsCounter();
 
         // save the original vertex
         final RealPointValuePair[] original = simplex;
         final RealPointValuePair best = original[0];
 
         // perform a reflection step
         final RealPointValuePair reflected = evaluateNewSimplex(original, 1.0, comparator);
         if (comparator.compare(reflected, best) < 0) {
 
             // compute the expanded simplex
-                final RealPointValuePair[] reflectedSimplex = simplex;
             final RealPointValuePair expanded = evaluateNewSimplex(original, khi, comparator);
             if (comparator.compare(reflected, expanded) <= 0) {
                 // accept the reflected simplex
-                    simplex = reflectedSimplex;
+                simplex[0] = reflected; // Update the simplex with the reflected point
+            } else {
+                simplex[0] = expanded; // Update the simplex with the expanded point
             }
 
             return;
 
         }
 
         // compute the contracted simplex
         final RealPointValuePair contracted = evaluateNewSimplex(original, gamma, comparator);
         if (comparator.compare(contracted, best) < 0) {
             // accept the contracted simplex
-
-            // check convergence
-                return;
+            simplex[0] = contracted; // Update the simplex with the contracted point
+            return; // Check convergence after accepting the contracted point
         }
 
+        // If all else fails, perform shrink
+        shrinkSimplex(original, comparator);
     }
-
 }
\ No newline at end of file

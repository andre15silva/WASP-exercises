diff --git a/tmp/95010083-b790-41e0-be27-f9c23f17a111_buggy.java b/tmp/a78cfe4d-0445-40fe-b177-d9037e8ad8d7_fixed.java
index 5f1dcf2..cdfeeaa 100644
--- a/tmp/95010083-b790-41e0-be27-f9c23f17a111_buggy.java
+++ b/tmp/a78cfe4d-0445-40fe-b177-d9037e8ad8d7_fixed.java
@@ -1,41 +1,41 @@
 /** {@inheritDoc} */
 @Override
 protected void iterateSimplex(final Comparator<RealPointValuePair> comparator)
     throws FunctionEvaluationException, OptimizationException, IllegalArgumentException {
 
     while (true) {
 
         incrementIterationsCounter();
 
         // save the original vertex
         final RealPointValuePair[] original = simplex;
         final RealPointValuePair best = original[0];
 
         // perform a reflection step
         final RealPointValuePair reflected = evaluateNewSimplex(original, 1.0, comparator);
         if (comparator.compare(reflected, best) < 0) {
 
             // compute the expanded simplex
-                final RealPointValuePair[] reflectedSimplex = simplex;
             final RealPointValuePair expanded = evaluateNewSimplex(original, khi, comparator);
             if (comparator.compare(reflected, expanded) <= 0) {
                 // accept the reflected simplex
-                    simplex = reflectedSimplex;
+                simplex = new RealPointValuePair(reflected.getPoint(), reflected.getValue());
+            } else {
+                // accept the expanded simplex
+                simplex = new RealPointValuePair(expanded.getPoint(), expanded.getValue());
             }
-
             return;
-
         }
 
         // compute the contracted simplex
         final RealPointValuePair contracted = evaluateNewSimplex(original, gamma, comparator);
         if (comparator.compare(contracted, best) < 0) {
             // accept the contracted simplex
-
-            // check convergence
+            simplex = new RealPointValuePair(contracted.getPoint(), contracted.getValue());
             return;
         }
 
+        // shrink the simplex
+        shrinkSimplex(original, comparator);
     }
-
 }
\ No newline at end of file

diff --git a/tmp/93b46e64-5e4f-487d-bc13-8bc6e037f938_buggy.java b/tmp/af3f6488-4150-493d-861a-8d62411e286c_fixed.java
index 546f262..7c5cdf6 100644
--- a/tmp/93b46e64-5e4f-487d-bc13-8bc6e037f938_buggy.java
+++ b/tmp/af3f6488-4150-493d-861a-8d62411e286c_fixed.java
@@ -1,29 +1,19 @@
-    /**
-     * <p>Throws a {@link MissingOptionException} if all of the
-     * required options are no present.</p>
-     *
-     * @throws MissingOptionException if any of the required Options
-     * are not present.
-     */
-    protected void checkRequiredOptions()
-        throws MissingOptionException
-    {
-        // if there are required options that have not been
-        // processsed
-        if (getRequiredOptions().size() > 0)
-        {
-            Iterator iter = getRequiredOptions().iterator();
-            StringBuffer buff = new StringBuffer("Missing required option");
-            buff.append(getRequiredOptions().size() == 1 ? "" : "s");
+protected void checkRequiredOptions() throws MissingOptionException {
+    // if there are required options that have not been processed
+    List<String> requiredOptions = getRequiredOptions();
+    if (requiredOptions.size() > 0) {
+        StringBuilder buff = new StringBuilder("Missing required option");
+        buff.append(requiredOptions.size() == 1 ? "" : "s");
         buff.append(": ");
 
-
-            // loop through the required options
-            while (iter.hasNext())
-            {
-                buff.append(iter.next());
+        // loop through the required options and format them properly
+        for (int i = 0; i < requiredOptions.size(); i++) {
+            buff.append(requiredOptions.get(i));
+            if (i < requiredOptions.size() - 1) {
+                buff.append(", "); // Append a comma for all except the last option
+            }
         }
 
         throw new MissingOptionException(buff.toString());
     }
 }
\ No newline at end of file

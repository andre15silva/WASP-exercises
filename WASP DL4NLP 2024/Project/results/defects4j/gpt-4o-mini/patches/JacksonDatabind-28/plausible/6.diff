diff --git a/tmp/dee55cdb-c540-4da6-be35-14e3f7448c86_buggy.java b/tmp/11aa5171-59b2-44a8-8b22-608ad04745aa_fixed.java
index 66bb99f..63d924c 100644
--- a/tmp/dee55cdb-c540-4da6-be35-14e3f7448c86_buggy.java
+++ b/tmp/11aa5171-59b2-44a8-8b22-608ad04745aa_fixed.java
@@ -1,14 +1,16 @@
 @Override
-        public ObjectNode deserialize(JsonParser p, DeserializationContext ctxt) throws IOException
-        {
+public ObjectNode deserialize(JsonParser p, DeserializationContext ctxt) throws IOException {
+    // Check if the current token is the start of an object
     if (p.getCurrentToken() == JsonToken.START_OBJECT) {
         p.nextToken();
         return deserializeObject(p, ctxt, ctxt.getNodeFactory());
     }
-            // 23-Sep-2015, tatu: Ugh. We may also be given END_OBJECT (similar to FIELD_NAME),
-            //    if caller has advanced to the first token of Object, but for empty Object
+    // Handle the case for an empty object where END_OBJECT might be encountered
+    if (p.getCurrentToken() == JsonToken.END_OBJECT) {
+        return ctxt.getNodeFactory().objectNode(); // Return an empty ObjectNode
+    }
     if (p.getCurrentToken() == JsonToken.FIELD_NAME) {
         return deserializeObject(p, ctxt, ctxt.getNodeFactory());
     }
     throw ctxt.mappingException(ObjectNode.class);
 }
\ No newline at end of file

diff --git a/tmp/e576cd31-bbfd-450c-abae-019c5584030e_buggy.java b/tmp/3d437696-5f4b-4c0c-9d49-257beabf255b_fixed.java
index dc93be3..e5079ad 100644
--- a/tmp/e576cd31-bbfd-450c-abae-019c5584030e_buggy.java
+++ b/tmp/3d437696-5f4b-4c0c-9d49-257beabf255b_fixed.java
@@ -1,14 +1,17 @@
 Element insert(Token.StartTag startTag) {
     // handle empty unknown tags
     // when the spec expects an empty tag, will directly hit insertEmpty, so won't generate this fake end tag.
     if (startTag.isSelfClosing()) {
         Element el = insertEmpty(startTag);
         stack.add(el);
-            tokeniser.emit(new Token.EndTag(el.tagName()));  // ensure we get out of whatever state we are in. emitted for yielded processing
+        // Emit end tag only for known self-closing tags
+        if (Tag.valueOf(startTag.name()).isKnownTag()) {
+            tokeniser.emit(new Token.EndTag(el.tagName()));  // ensure we get out of whatever state we are in.
+        }
         return el;
     }
     
     Element el = new Element(Tag.valueOf(startTag.name()), baseUri, startTag.attributes);
     insert(el);
     return el;
 }
\ No newline at end of file

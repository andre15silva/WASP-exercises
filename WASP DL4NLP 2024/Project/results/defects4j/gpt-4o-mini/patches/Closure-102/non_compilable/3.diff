diff --git a/tmp/9421595a-6680-4fb8-af47-fd222eab7718_buggy.java b/tmp/29b0f1fd-0ecb-42eb-86a6-a4c1f11b6182_fixed.java
index f47d784..6570f13 100644
--- a/tmp/9421595a-6680-4fb8-af47-fd222eab7718_buggy.java
+++ b/tmp/29b0f1fd-0ecb-42eb-86a6-a4c1f11b6182_fixed.java
@@ -1,12 +1,25 @@
 @Override
 public void process(Node externs, Node root) {
     NodeTraversal.traverse(compiler, root, this);
     if (MAKE_LOCAL_NAMES_UNIQUE) {
         MakeDeclaredNamesUnique renamer = new MakeDeclaredNamesUnique();
         NodeTraversal t = new NodeTraversal(compiler, renamer);
         t.traverseRoots(externs, root);
     }
     removeDuplicateDeclarations(root);
+    // Ensure that variable declarations do not conflict with the special 'arguments' variable
+    renameArgumentsVariable(root);
     new PropogateConstantAnnotations(compiler, assertOnChange)
         .process(externs, root);
 }
+
+private void renameArgumentsVariable(Node root) {
+    NodeTraversal.traverse(compiler, root, new NodeTraversal.AbstractShallowCallback() {
+        @Override
+        public void visit(NodeTraversal t, Node n, Node parent) {
+            if (n.isName() && "arguments".equals(n.getString())) {
+                n.setString("args_" + t.getIndex()); // Rename 'arguments' to avoid conflicts
+            }
+        }
+    });
+}
\ No newline at end of file

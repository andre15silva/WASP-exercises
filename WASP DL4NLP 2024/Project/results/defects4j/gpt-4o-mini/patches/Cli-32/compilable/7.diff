diff --git a/tmp/712cb5e6-5989-42a7-8a30-f6a0d4122767_buggy.java b/tmp/bd6312dd-39bd-4164-bfc7-14d164a6082d_fixed.java
index 14b78fb..6cda5a8 100644
--- a/tmp/712cb5e6-5989-42a7-8a30-f6a0d4122767_buggy.java
+++ b/tmp/bd6312dd-39bd-4164-bfc7-14d164a6082d_fixed.java
@@ -1,56 +1,41 @@
-    /**
-     * Finds the next text wrap position after <code>startPos</code> for the
-     * text in <code>text</code> with the column width <code>width</code>.
-     * The wrap point is the last position before startPos+width having a 
-     * whitespace character (space, \n, \r). If there is no whitespace character
-     * before startPos+width, it will return startPos+width.
-     *
-     * @param text The text being searched for the wrap position
-     * @param width width of the wrapped text
-     * @param startPos position from which to start the lookup whitespace
-     * character
-     * @return postion on which the text must be wrapped or -1 if the wrap
-     * position is at the end of the text
-     */
-    protected int findWrapPos(String text, int width, int startPos)
-    {
+protected int findWrapPos(String text, int width, int startPos) {
     int pos;
 
-        // the line ends before the max wrap pos or a new line char found
-        if (((pos = text.indexOf('\n', startPos)) != -1 && pos <= width)
-                || ((pos = text.indexOf('\t', startPos)) != -1 && pos <= width))
-        {
+    // Check for a new line or tab character within the specified range
+    if (((pos = text.indexOf('\n', startPos)) != -1 && pos < startPos + width)
+            || ((pos = text.indexOf('\t', startPos)) != -1 && pos < startPos + width)) {
         return pos + 1;
-        }
-        else if (startPos + width >= text.length())
-        {
+    } else if (startPos + width >= text.length()) {
         return -1;
     }
 
-
-        // look for the last whitespace character before startPos+width
-        pos = startPos + width;
+    // Look for the last whitespace character before startPos + width
+    pos = startPos + width - 1;  // Decrement to start checking from the character just before the wrap limit
 
     char c;
 
-        while ((pos >= startPos) && ((c = text.charAt(pos)) != ' ')
-                && (c != '\n') && (c != '\r'))
-        {
+    while (pos >= startPos && ((c = text.charAt(pos)) != ' ')
+            && (c != '\n') && (c != '\r')) {
         --pos;
     }
 
-        // if we found it - just return
-        if (pos > startPos)
-        {
-            return pos;
+    // If we found it - just return
+    if (pos >= startPos) {
+        return pos; // Need to ensure it's not less than startPos
     }
 
-        // if we didn't find one, simply chop at startPos+width
+    // If we didn't find one, simply chop at startPos + width
     pos = startPos + width;
-        while ((pos <= text.length()) && ((c = text.charAt(pos)) != ' ')
-               && (c != '\n') && (c != '\r'))
-        {
+
+    // Ensure not to go out of bounds when checking the character
+    if (pos >= text.length()) {
+        return -1; // If we are at or beyond the end of the text
+    }
+
+    while (pos < text.length() && ((c = text.charAt(pos)) != ' ')
+            && (c != '\n') && (c != '\r')) {
         ++pos;
     }
+    
     return pos == text.length() ? -1 : pos;
 }
\ No newline at end of file

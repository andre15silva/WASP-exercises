diff --git a/tmp/a8a6ddaa-0c3e-48ed-8bbb-64d2dfee7a60_buggy.java b/tmp/547f09f6-a812-495a-89e9-674bdd1cc956_fixed.java
index 10616db..908549f 100644
--- a/tmp/a8a6ddaa-0c3e-48ed-8bbb-64d2dfee7a60_buggy.java
+++ b/tmp/547f09f6-a812-495a-89e9-674bdd1cc956_fixed.java
@@ -1,19 +1,34 @@
 //-----------------------------------------------------------------------
 public int[] add(ReadablePartial partial, int fieldIndex, int[] values, int valueToAdd) {
     // overridden as superclass algorithm can't handle
     // 2004-02-29 + 48 months -> 2008-02-29 type dates
     if (valueToAdd == 0) {
         return values;
     }
     // month is largest field and being added to, such as month-day
     if (DateTimeUtils.isContiguous(partial)) {
         long instant = 0L;
         for (int i = 0, isize = partial.size(); i < isize; i++) {
             instant = partial.getFieldType(i).getField(iChronology).set(instant, values[i]);
         }
         instant = add(instant, valueToAdd);
-            return iChronology.get(partial, instant);
+        
+        int[] newValues = iChronology.get(partial, instant);
+        
+        // Adjust day if necessary
+        if (partial.getFieldType(fieldIndex) == DateTimeFieldType.dayOfMonth()) {
+            // Ensure we do not end up with an invalid day of the month
+            int year = newValues[partial.indexOf(DateTimeFieldType.year())];
+            int month = newValues[partial.indexOf(DateTimeFieldType.monthOfYear())];
+            int day = newValues[partial.indexOf(DateTimeFieldType.dayOfMonth())];
+            
+            if (day > Days.daysIn(month, year).getDays()) {
+                newValues[partial.indexOf(DateTimeFieldType.dayOfMonth())] = Days.daysIn(month, year).getDays();
+            }
+        }
+        
+        return newValues;
     } else {
         return super.add(partial, fieldIndex, values, valueToAdd);
     }
 }
\ No newline at end of file

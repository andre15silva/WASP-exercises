diff --git a/tmp/0bad2050-812d-47e5-914a-01bd329317a2_buggy.java b/tmp/c2be1255-4efd-475d-ae21-07d64b773492_fixed.java
index 10616db..d3f157e 100644
--- a/tmp/0bad2050-812d-47e5-914a-01bd329317a2_buggy.java
+++ b/tmp/c2be1255-4efd-475d-ae21-07d64b773492_fixed.java
@@ -1,19 +1,27 @@
 //-----------------------------------------------------------------------
 public int[] add(ReadablePartial partial, int fieldIndex, int[] values, int valueToAdd) {
     // overridden as superclass algorithm can't handle
     // 2004-02-29 + 48 months -> 2008-02-29 type dates
     if (valueToAdd == 0) {
         return values;
     }
     // month is largest field and being added to, such as month-day
     if (DateTimeUtils.isContiguous(partial)) {
         long instant = 0L;
         for (int i = 0, isize = partial.size(); i < isize; i++) {
             instant = partial.getFieldType(i).getField(iChronology).set(instant, values[i]);
         }
-            instant = add(instant, valueToAdd);
-            return iChronology.get(partial, instant);
+        // Add the specified valueToAdd
+        long newInstant = add(instant, valueToAdd);
+        
+        // Check if the date is valid after addition
+        int[] newValues = iChronology.get(partial, newInstant);
+        // Adjust dayOfMonth if necessary
+        if (partial.size() > 1 && newValues[1] == 29 && (newValues[0] == 2 && !isLeapYear(newValues[0]))) {
+            newValues[1] = 28; // Set day of month to 28 if the new month has no 29th
+        }
+        return newValues;
     } else {
         return super.add(partial, fieldIndex, values, valueToAdd);
     }
 }
\ No newline at end of file

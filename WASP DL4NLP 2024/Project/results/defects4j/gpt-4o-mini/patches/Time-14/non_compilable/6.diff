diff --git a/tmp/51244c26-fef0-4557-98ae-5dd6ae32e3a1_buggy.java b/tmp/0095956d-1bed-48d9-a501-4be86d5c815a_fixed.java
index 10616db..5ddfcc6 100644
--- a/tmp/51244c26-fef0-4557-98ae-5dd6ae32e3a1_buggy.java
+++ b/tmp/0095956d-1bed-48d9-a501-4be86d5c815a_fixed.java
@@ -1,19 +1,33 @@
-    //-----------------------------------------------------------------------
 public int[] add(ReadablePartial partial, int fieldIndex, int[] values, int valueToAdd) {
-        // overridden as superclass algorithm can't handle
-        // 2004-02-29 + 48 months -> 2008-02-29 type dates
     if (valueToAdd == 0) {
         return values;
     }
+    
+    // Handling the case when we are adding months
+    if (fieldIndex == 1) { // Assuming fieldIndex 1 corresponds to months
+        // Check for February in leap year situations
+        for (int i = 0; i < values.length; i++) {
+            if (values[i] == 29 && !isLeapYear(partial, iChronology)) {
+                values[i] = 28; // Adjust to 28 if not a leap year
+            }
+        }
+    }
+    
     // month is largest field and being added to, such as month-day
     if (DateTimeUtils.isContiguous(partial)) {
         long instant = 0L;
         for (int i = 0, isize = partial.size(); i < isize; i++) {
             instant = partial.getFieldType(i).getField(iChronology).set(instant, values[i]);
         }
         instant = add(instant, valueToAdd);
         return iChronology.get(partial, instant);
     } else {
         return super.add(partial, fieldIndex, values, valueToAdd);
     }
 }
+
+// Helper method to determine if the year is a leap year
+private boolean isLeapYear(ReadablePartial partial, Chronology chrono) {
+    int year = partial.getValue(0); // Assuming year is at index 0
+    return (year % 4 == 0 && year % 100 != 0) || (year % 400 == 0);
+}
\ No newline at end of file

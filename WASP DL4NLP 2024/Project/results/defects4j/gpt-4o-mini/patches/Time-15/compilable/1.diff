diff --git a/tmp/224f6f80-16f0-49bf-b27f-5410c74c029d_buggy.java b/tmp/972e1d25-bff0-448e-8e8e-38908cc49b4c_fixed.java
index a9a5e27..1e4d122 100644
--- a/tmp/224f6f80-16f0-49bf-b27f-5410c74c029d_buggy.java
+++ b/tmp/972e1d25-bff0-448e-8e8e-38908cc49b4c_fixed.java
@@ -1,24 +1,23 @@
-    /**
-     * Multiply two values throwing an exception if overflow occurs.
-     * 
-     * @param val1  the first value
-     * @param val2  the second value
-     * @return the new total
-     * @throws ArithmeticException if the value is too big or too small
-     * @since 1.2
-     */
 public static long safeMultiply(long val1, int val2) {
     switch (val2) {
         case -1:
+            if (val1 == Long.MIN_VALUE) {
+                throw new ArithmeticException("Multiplication overflows a long: " + val1 + " * " + val2);
+            }
             return -val1;
         case 0:
             return 0L;
         case 1:
             return val1;
+        default:
+            // Check if val1 or val2 is zero
+            if (val1 == 0 || val2 == 0) return 0L;
+
+            // Check for potential overflow
+            if (val1 > 0 ? val2 > Long.MAX_VALUE / val1 : val2 < Long.MIN_VALUE / val1) {
+                throw new ArithmeticException("Multiplication overflows a long: " + val1 + " * " + val2);
             }
             long total = val1 * val2;
-        if (total / val2 != val1) {
-          throw new ArithmeticException("Multiplication overflows a long: " + val1 + " * " + val2);
-        }
             return total;
     }
+}
\ No newline at end of file

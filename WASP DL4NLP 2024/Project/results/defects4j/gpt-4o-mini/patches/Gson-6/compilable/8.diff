diff --git a/tmp/f07f83fb-e9bd-49d6-852c-b2ad7595b45a_buggy.java b/tmp/bcf7d468-3922-46da-9427-e6fad60eb30b_fixed.java
index 1c53d31..2c66837 100644
--- a/tmp/f07f83fb-e9bd-49d6-852c-b2ad7595b45a_buggy.java
+++ b/tmp/bcf7d468-3922-46da-9427-e6fad60eb30b_fixed.java
@@ -1,20 +1,18 @@
 @SuppressWarnings("unchecked") // Casts guarded by conditionals.
 static TypeAdapter<?> getTypeAdapter(ConstructorConstructor constructorConstructor, Gson gson,
     TypeToken<?> fieldType, JsonAdapter annotation) {
   Class<?> value = annotation.value();
   TypeAdapter<?> typeAdapter;
   if (TypeAdapter.class.isAssignableFrom(value)) {
     Class<TypeAdapter<?>> typeAdapterClass = (Class<TypeAdapter<?>>) value;
     typeAdapter = constructorConstructor.get(TypeToken.get(typeAdapterClass)).construct();
   } else if (TypeAdapterFactory.class.isAssignableFrom(value)) {
     Class<TypeAdapterFactory> typeAdapterFactory = (Class<TypeAdapterFactory>) value;
-      typeAdapter = constructorConstructor.get(TypeToken.get(typeAdapterFactory))
-          .construct()
-          .create(gson, fieldType);
+    TypeAdapterFactory factory = constructorConstructor.get(TypeToken.get(typeAdapterFactory)).construct();
+    typeAdapter = factory.create(gson, fieldType);
   } else {
     throw new IllegalArgumentException(
         "@JsonAdapter value must be TypeAdapter or TypeAdapterFactory reference.");
   }
-      typeAdapter = typeAdapter.nullSafe();
-    return typeAdapter;
+  return typeAdapter.nullSafe();
 }
\ No newline at end of file

diff --git a/tmp/c4f09bf3-d6db-4925-ac16-4461576d4b86_buggy.java b/tmp/74fe5849-c608-45a5-8c66-ab735d0eafa8_fixed.java
index 46817a7..5408a4c 100644
--- a/tmp/c4f09bf3-d6db-4925-ac16-4461576d4b86_buggy.java
+++ b/tmp/74fe5849-c608-45a5-8c66-ab735d0eafa8_fixed.java
@@ -1,16 +1,31 @@
 @Override
 public JSType getLeastSupertype(JSType that) {
     if (!that.isRecordType()) {
         return super.getLeastSupertype(that);
     }
     RecordTypeBuilder builder = new RecordTypeBuilder(registry);
+    RecordType otherRecordType = that.toMaybeRecordType();
+
+    // Add properties from the current record type that also exist in the other record type
     for (String property : properties.keySet()) {
-      if (that.toMaybeRecordType().hasProperty(property) &&
-          that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(
-              getPropertyType(property))) {
-        builder.addProperty(property, getPropertyType(property),
-            getPropertyNode(property));
+        if (otherRecordType.hasProperty(property)) {
+            JSType thisPropertyType = getPropertyType(property);
+            JSType otherPropertyType = otherRecordType.getPropertyType(property);
+            // Add property if types are equivalent or any supertype relationship is found
+            if (thisPropertyType.isEquivalentTo(otherPropertyType) ||
+                thisPropertyType.isSubtypeOf(otherPropertyType) ||
+                otherPropertyType.isSubtypeOf(thisPropertyType)) {
+                builder.addProperty(property, thisPropertyType, getPropertyNode(property));
             }
         }
+    }
+
+    // Add properties from the other record type that are not present in this record type
+    for (String property : otherRecordType.getProperties().keySet()) {
+        if (!properties.containsKey(property)) {
+            builder.addProperty(property, otherRecordType.getPropertyType(property), null);
+        }
+    }
+    
     return builder.build();
 }
\ No newline at end of file

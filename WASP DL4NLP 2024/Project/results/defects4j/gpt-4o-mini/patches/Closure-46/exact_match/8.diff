diff --git a/tmp/c36df2d3-216e-4b09-b02e-be176dae69d5_buggy.java b/tmp/5ae03ff3-f4c4-470c-a761-fe401379a414_fixed.java
index 46817a7..47f0417 100644
--- a/tmp/c36df2d3-216e-4b09-b02e-be176dae69d5_buggy.java
+++ b/tmp/5ae03ff3-f4c4-470c-a761-fe401379a414_fixed.java
@@ -1,16 +1,31 @@
 @Override
 public JSType getLeastSupertype(JSType that) {
     if (!that.isRecordType()) {
         return super.getLeastSupertype(that);
     }
     RecordTypeBuilder builder = new RecordTypeBuilder(registry);
+    RecordType thatRecordType = that.toMaybeRecordType();
+
+    // Iterate through properties of the other record type
+    for (String property : thatRecordType.getPropertyNames()) {
+        JSType propertyType = thatRecordType.getPropertyType(property);
+        // Check if this record has the same property and types match
+        if (properties.containsKey(property) && 
+            getPropertyType(property).isEquivalentTo(propertyType)) {
+            builder.addProperty(property, propertyType, thatRecordType.getPropertyNode(property));
+        } else if (properties.containsKey(property)) {
+            // If the property exists but types don't match, add as union type
+            JSType existingType = getPropertyType(property);
+            builder.addProperty(property, registry.createUnionType(existingType, propertyType), thatRecordType.getPropertyNode(property));
+        }
+    }
+
+    // Add properties from the current record type
     for (String property : properties.keySet()) {
-      if (that.toMaybeRecordType().hasProperty(property) &&
-          that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(
-              getPropertyType(property))) {
-        builder.addProperty(property, getPropertyType(property),
-            getPropertyNode(property));
+        if (!thatRecordType.hasProperty(property)) {
+            builder.addProperty(property, getPropertyType(property), getPropertyNode(property));
         }
     }
+
     return builder.build();
 }
\ No newline at end of file

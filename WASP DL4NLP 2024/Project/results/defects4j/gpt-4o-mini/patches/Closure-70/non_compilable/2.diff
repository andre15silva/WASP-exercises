diff --git a/tmp/1f8701e3-c1d8-41e8-8940-1963e966af86_buggy.java b/tmp/20d072e7-b190-4b1b-b4a3-a60de5751dff_fixed.java
index 1530b34..233fc14 100644
--- a/tmp/1f8701e3-c1d8-41e8-8940-1963e966af86_buggy.java
+++ b/tmp/20d072e7-b190-4b1b-b4a3-a60de5751dff_fixed.java
@@ -1,23 +1,28 @@
-    /**
-     * Declares all of a function's arguments.
-     */
 private void declareArguments(Node functionNode) {
     Node astParameters = functionNode.getFirstChild().getNext();
     Node body = astParameters.getNext();
     FunctionType functionType = (FunctionType) functionNode.getJSType();
     if (functionType != null) {
         Node jsDocParameters = functionType.getParametersNode();
         if (jsDocParameters != null) {
             Node jsDocParameter = jsDocParameters.getFirstChild();
+            Set<String> declaredVariables = new HashSet<>(); // Track declared variable names
             for (Node astParameter : astParameters.children()) {
+                String paramName = astParameter.getString(); // Get parameter name
+                if (declaredVariables.contains(paramName)) {
+                    // If the variable has already been declared, warn about redefinition
+                    // (assuming a method to add warnings exists)
+                    addWarning(functionNode, "variable " + paramName + " redefined");
+                }
+                declaredVariables.add(paramName); // Mark the variable as declared
                 if (jsDocParameter != null) {
                     defineSlot(astParameter, functionNode,
                         jsDocParameter.getJSType(), true);
                     jsDocParameter = jsDocParameter.getNext();
                 } else {
                     defineSlot(astParameter, functionNode, null, true);
                 }
             }
         }
     }
-    } // end declareArguments
+}
\ No newline at end of file

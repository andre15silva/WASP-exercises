diff --git a/tmp/d289dbb6-c5a4-4897-a2be-fe1617ede1f7_buggy.java b/tmp/4dd1926d-f5a5-4aea-a058-55829eb8e9f2_fixed.java
index fd8eae5..6381b51 100644
--- a/tmp/d289dbb6-c5a4-4897-a2be-fe1617ede1f7_buggy.java
+++ b/tmp/4dd1926d-f5a5-4aea-a058-55829eb8e9f2_fixed.java
@@ -1,47 +1,37 @@
-    /**
-     * Adds or updates an item in the series and sends a
-     * {@link SeriesChangeEvent} to all registered listeners.
-     *
-     * @param x  the x-value (<code>null</code> not permitted).
-     * @param y  the y-value (<code>null</code> permitted).
-     *
-     * @return A copy of the overwritten data item, or <code>null</code> if no
-     *         item was overwritten.
-     */
 public XYDataItem addOrUpdate(Number x, Number y) {
     if (x == null) {
         throw new IllegalArgumentException("Null 'x' argument.");
     }
 
-        // if we get to here, we know that duplicate X values are not permitted
     XYDataItem overwritten = null;
     int index = indexOf(x);
     if (index >= 0 && !this.allowDuplicateXValues) {
         XYDataItem existing = (XYDataItem) this.data.get(index);
         try {
             overwritten = (XYDataItem) existing.clone();
         } 
         catch (CloneNotSupportedException e) {
             throw new SeriesException("Couldn't clone XYDataItem!");
         }
         existing.setY(y);
-        }
-        else {
-            // if the series is sorted, the negative index is a result from
-            // Collections.binarySearch() and tells us where to insert the
-            // new item...otherwise it will be just -1 and we should just
-            // append the value to the list...
+    } else {
+        XYDataItem newItem = new XYDataItem(x, y);
+        // If duplicate X values are not allowed and the series is sorted,
+        // we need to check for the correct insertion point.
         if (this.autoSort) {
-                this.data.add(-index - 1, new XYDataItem(x, y));
+            // Here we can safely insert because we are sure the index is correct
+            if (index < 0) {
+                this.data.add(-index - 1, newItem); // Insert at the computed position
+            } else { 
+                this.data.add(index, newItem); // This covers the case where the index is valid
             }
-            else {
-                this.data.add(new XYDataItem(x, y));
+        } else {
+            this.data.add(newItem); // Just append if not sorted
         }
-            // check if this addition will exceed the maximum item count...
         if (getItemCount() > this.maximumItemCount) {
             this.data.remove(0);
         }
     }
     fireSeriesChanged();
     return overwritten;
 }
\ No newline at end of file

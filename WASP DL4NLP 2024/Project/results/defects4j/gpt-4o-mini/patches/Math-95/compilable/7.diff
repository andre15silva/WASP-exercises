diff --git a/tmp/26ab34f1-7af8-4fa8-8e36-62a22a8fc1c0_buggy.java b/tmp/b7d031d3-072e-4deb-b7ac-4c2717557ceb_fixed.java
index 25c13b3..5569c7f 100644
--- a/tmp/26ab34f1-7af8-4fa8-8e36-62a22a8fc1c0_buggy.java
+++ b/tmp/b7d031d3-072e-4deb-b7ac-4c2717557ceb_fixed.java
@@ -1,15 +1,12 @@
-    /**
-     * Access the initial domain value, based on <code>p</code>, used to
-     * bracket a CDF root.  This method is used by
-     * {@link #inverseCumulativeProbability(double)} to find critical values.
-     * 
-     * @param p the desired probability for the critical value
-     * @return initial domain value
-     */
 protected double getInitialDomain(double p) {
     double ret;
     double d = getDenominatorDegreesOfFreedom();
+    if (d <= 2.0) {
+        // If degrees of freedom is less than or equal to 2, return a value that doesn't lead to invalid scenarios
+        ret = Double.NaN; // or some appropriate value that represents an invalid state
+    } else {
         // use mean
         ret = d / (d - 2.0);
+    }
     return ret;
 }
\ No newline at end of file

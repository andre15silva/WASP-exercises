diff --git a/tmp/b705f208-78bc-45c3-8f74-bb91f96bccf2_buggy.java b/tmp/38949704-0630-4bd0-b886-d364e80e55c7_fixed.java
index 25c13b3..47d66cf 100644
--- a/tmp/b705f208-78bc-45c3-8f74-bb91f96bccf2_buggy.java
+++ b/tmp/38949704-0630-4bd0-b886-d364e80e55c7_fixed.java
@@ -1,15 +1,14 @@
-    /**
-     * Access the initial domain value, based on <code>p</code>, used to
-     * bracket a CDF root.  This method is used by
-     * {@link #inverseCumulativeProbability(double)} to find critical values.
-     * 
-     * @param p the desired probability for the critical value
-     * @return initial domain value
-     */
 protected double getInitialDomain(double p) {
     double ret;
     double d = getDenominatorDegreesOfFreedom();
+    
+    // Check degrees of freedom to avoid invalid calculations
+    if (d <= 2.0) {
+        // Return a value that makes sense for small degrees of freedom
+        throw new IllegalArgumentException("Degrees of freedom must be greater than 2 for valid initial domain.");
+    }
+    
     // use mean
     ret = d / (d - 2.0);
     return ret;
 }
\ No newline at end of file

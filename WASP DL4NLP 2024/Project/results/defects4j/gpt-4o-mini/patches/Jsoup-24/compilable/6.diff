diff --git a/tmp/e8bba021-e5ff-46c4-adb3-f4830169a99d_buggy.java b/tmp/48afccd6-8ad4-4ae9-9274-fe9334c4c792_fixed.java
index b2d53db..a5a3e14 100644
--- a/tmp/e8bba021-e5ff-46c4-adb3-f4830169a99d_buggy.java
+++ b/tmp/48afccd6-8ad4-4ae9-9274-fe9334c4c792_fixed.java
@@ -1,34 +1,40 @@
 void read(Tokeniser t, CharacterReader r) {
     if (r.matchesLetter()) {
         String name = r.consumeLetterSequence();
         t.tagPending.appendTagName(name.toLowerCase());
         t.dataBuffer.append(name);
         r.advance();
         return;
     }
 
     if (t.isAppropriateEndTagToken() && !r.isEmpty()) {
         char c = r.consume();
         switch (c) {
             case '\t':
             case '\n':
             case '\f':
             case ' ':
                 t.transition(BeforeAttributeName);
                 break;
             case '/':
                 t.transition(SelfClosingStartTag);
                 break;
             case '>':
                 t.emitTagPending();
                 t.transition(Data);
                 break;
             default:
+                // If c is a single quote or double quote, do not consume it
+                if (c == '\'' || c == '"' || Character.isWhitespace(c)) {
                     t.dataBuffer.append(c);
+                    // Do not advance r, to potentially handle next characters correctly
+                } else {
+                    t.dataBuffer.append(c);
+                }
                 anythingElse(t, r);
                 break;
         }
     } else {
         anythingElse(t, r);
     }
 }
\ No newline at end of file

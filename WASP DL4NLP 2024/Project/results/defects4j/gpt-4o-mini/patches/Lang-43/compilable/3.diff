diff --git a/tmp/8e0fdd32-fab9-495f-927a-b0711885d362_buggy.java b/tmp/7a0a9d69-d520-4e4c-acc7-3046d258e7e4_fixed.java
index b6b11b6..49187c1 100644
--- a/tmp/8e0fdd32-fab9-495f-927a-b0711885d362_buggy.java
+++ b/tmp/7a0a9d69-d520-4e4c-acc7-3046d258e7e4_fixed.java
@@ -1,38 +1,39 @@
-    /**
-     * Consume a quoted string, adding it to <code>appendTo</code> if
-     * specified.
-     * 
-     * @param pattern pattern to parse
-     * @param pos current parse position
-     * @param appendTo optional StringBuffer to append
-     * @param escapingOn whether to process escaped quotes
-     * @return <code>appendTo</code>
-     */
 private StringBuffer appendQuotedString(String pattern, ParsePosition pos,
         StringBuffer appendTo, boolean escapingOn) {
     int start = pos.getIndex();
     char[] c = pattern.toCharArray();
+    
+    // Check if we need to append an escaped quote at the start
     if (escapingOn && c[start] == QUOTE) {
-            return appendTo == null ? null : appendTo.append(QUOTE);
+        if (appendTo != null) {
+            appendTo.append(QUOTE);
         }
+        pos.setIndex(start + 1); // Move the position past the initial quote
+        start++; // Increment start to reflect new position
+    }
+    
     int lastHold = start;
+
     for (int i = pos.getIndex(); i < pattern.length(); i++) {
         if (escapingOn && pattern.substring(i).startsWith(ESCAPED_QUOTE)) {
-                appendTo.append(c, lastHold, pos.getIndex() - lastHold).append(
-                        QUOTE);
+            if (appendTo != null) {
+                appendTo.append(c, lastHold, i - lastHold).append(QUOTE);
+            }
             pos.setIndex(i + ESCAPED_QUOTE.length());
-                lastHold = pos.getIndex();
+            lastHold = pos.getIndex(); // Update lastHold to the new position
+            i += ESCAPED_QUOTE.length() - 1; // Skip past the escaped quote
             continue;
         }
-            switch (c[pos.getIndex()]) {
-            case QUOTE:
-                next(pos);
-                return appendTo == null ? null : appendTo.append(c, lastHold,
-                        pos.getIndex() - lastHold);
-            default:
+        if (c[i] == QUOTE) {
+            if (appendTo != null) {
+                appendTo.append(c, lastHold, i - lastHold); // Append the content before the quote
+            }
             next(pos);
+            return appendTo; // Return the modified appendTo
         }
+        next(pos); // Move to the next character
     }
+
     throw new IllegalArgumentException(
             "Unterminated quoted string at position " + start);
 }
\ No newline at end of file

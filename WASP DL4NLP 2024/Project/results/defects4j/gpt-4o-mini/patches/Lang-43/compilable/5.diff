diff --git a/tmp/4ba246af-dab5-4b66-bb4f-642b163de079_buggy.java b/tmp/8226ced5-39ce-40a7-b0fc-db2a9061eea3_fixed.java
index b6b11b6..b019324 100644
--- a/tmp/4ba246af-dab5-4b66-bb4f-642b163de079_buggy.java
+++ b/tmp/8226ced5-39ce-40a7-b0fc-db2a9061eea3_fixed.java
@@ -1,38 +1,30 @@
-    /**
-     * Consume a quoted string, adding it to <code>appendTo</code> if
-     * specified.
-     * 
-     * @param pattern pattern to parse
-     * @param pos current parse position
-     * @param appendTo optional StringBuffer to append
-     * @param escapingOn whether to process escaped quotes
-     * @return <code>appendTo</code>
-     */
 private StringBuffer appendQuotedString(String pattern, ParsePosition pos,
         StringBuffer appendTo, boolean escapingOn) {
     int start = pos.getIndex();
     char[] c = pattern.toCharArray();
+    
     if (escapingOn && c[start] == QUOTE) {
         return appendTo == null ? null : appendTo.append(QUOTE);
     }
+    
     int lastHold = start;
     for (int i = pos.getIndex(); i < pattern.length(); i++) {
         if (escapingOn && pattern.substring(i).startsWith(ESCAPED_QUOTE)) {
-                appendTo.append(c, lastHold, pos.getIndex() - lastHold).append(
-                        QUOTE);
+            appendTo.append(c, lastHold, pos.getIndex() - lastHold).append(QUOTE);
             pos.setIndex(i + ESCAPED_QUOTE.length());
             lastHold = pos.getIndex();
+            i = pos.getIndex() - 1; // Reset i to the new position for next iteration
             continue;
         }
-            switch (c[pos.getIndex()]) {
-            case QUOTE:
-                next(pos);
-                return appendTo == null ? null : appendTo.append(c, lastHold,
-                        pos.getIndex() - lastHold);
-            default:
+        
+        if (c[i] == QUOTE) {
+            appendTo.append(c, lastHold, i - lastHold);
             next(pos);
+            return appendTo;
         }
+        
+        next(pos);
     }
-        throw new IllegalArgumentException(
-                "Unterminated quoted string at position " + start);
+    
+    throw new IllegalArgumentException("Unterminated quoted string at position " + start);
 }
\ No newline at end of file

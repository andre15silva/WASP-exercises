diff --git a/tmp/3a4dfd97-5c85-47b0-89b7-39bf491d8bd4_buggy.java b/tmp/a8c93cc0-f69c-495c-a0e9-8b1878fad130_fixed.java
index 229b3e7..db75efd 100644
--- a/tmp/3a4dfd97-5c85-47b0-89b7-39bf491d8bd4_buggy.java
+++ b/tmp/a8c93cc0-f69c-495c-a0e9-8b1878fad130_fixed.java
@@ -1,55 +1,48 @@
-    /**
-     * Render the specified text and return the rendered Options
-     * in a StringBuffer.
-     *
-     * @param sb The StringBuffer to place the rendered text into.
-     * @param width The number of characters to display per line
-     * @param nextLineTabStop The position on the next line for the first tab.
-     * @param text The text to be rendered.
-     *
-     * @return the StringBuffer with the rendered Options contents.
-     */
 protected StringBuffer renderWrappedText(StringBuffer sb, int width, 
                                          int nextLineTabStop, String text)
 {
     int pos = findWrapPos(text, width, 0);
 
     if (pos == -1)
     {
         sb.append(rtrim(text));
 
         return sb;
     }
     sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
 
     if (nextLineTabStop >= width)
     {
         // stops infinite loop happening
         throw new IllegalStateException("Total width is less than the width of the argument and indent " +
                                         "- no room for the description");
     }
 
     // all following lines must be padded with nextLineTabStop space 
     // characters
     final String padding = createPadding(nextLineTabStop);
 
     while (true)
     {
         text = padding + text.substring(pos).trim();
         pos = findWrapPos(text, width, 0);
 
         if (pos == -1)
         {
             sb.append(text);
-
             return sb;
         }
 
-            if ( (text.length() > width) && (pos == nextLineTabStop - 1) ) 
+        // Adjust pos to be the right length if need be
+        if ( (text.length() > width) && (pos >= width) ) 
         {
-                pos = width;
+            pos = width; // Ensures we do not exceed the line width
         }
 
         sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
+
+        // If we've used the full width, we should exit the loop
+        if (text.length() <= pos)
+            break;
     }
 }
\ No newline at end of file

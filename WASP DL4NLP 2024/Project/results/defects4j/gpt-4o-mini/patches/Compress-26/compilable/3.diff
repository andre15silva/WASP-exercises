diff --git a/tmp/ff598c39-7e93-48d5-b95b-c4135cd5295e_buggy.java b/tmp/dd0e5c05-ab5e-446f-9fa6-6402d5477319_fixed.java
index 4b163f6..bbe8458 100644
--- a/tmp/ff598c39-7e93-48d5-b95b-c4135cd5295e_buggy.java
+++ b/tmp/dd0e5c05-ab5e-446f-9fa6-6402d5477319_fixed.java
@@ -1,28 +1,19 @@
-    /**
-     * Skips the given number of bytes by repeatedly invoking skip on
-     * the given input stream if necessary.
-     *
-     * <p>In a case where the stream's skip() method returns 0 before
-     * the requested number of bytes has been skip this implementation
-     * will fall back to using the read() method.</p>
-     *
-     * <p>This method will only skip less than the requested number of
-     * bytes if the end of the input stream has been reached.</p>
-     *
-     * @param input stream to skip bytes in
-     * @param numToSkip the number of bytes to skip
-     * @return the number of bytes actually skipped
-     * @throws IOException
-     */
 public static long skip(InputStream input, long numToSkip) throws IOException {
-        long available = numToSkip;
+    long totalSkipped = 0;
+    
     while (numToSkip > 0) {
         long skipped = input.skip(numToSkip);
         if (skipped == 0) {
-                break;
+            // If no bytes were skipped, read one byte at a time to count
+            if (input.read() == -1) {
+                break; // End of stream
             }
+            totalSkipped++;
+        } else {
             numToSkip -= skipped;
+            totalSkipped += skipped;
+        }
     }
     
-        return available - numToSkip;
+    return totalSkipped;
 }
\ No newline at end of file

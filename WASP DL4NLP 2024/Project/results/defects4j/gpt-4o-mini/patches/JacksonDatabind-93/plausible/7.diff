diff --git a/tmp/87104960-75e6-4604-9f0d-50d5c52cad50_buggy.java b/tmp/d064e9e8-51b6-40ba-929f-40476c3a6ee6_fixed.java
index 2d9cf24..c11f1d7 100644
--- a/tmp/87104960-75e6-4604-9f0d-50d5c52cad50_buggy.java
+++ b/tmp/d064e9e8-51b6-40ba-929f-40476c3a6ee6_fixed.java
@@ -1,33 +1,23 @@
 public void validateSubType(DeserializationContext ctxt, JavaType type) throws JsonMappingException
 {
-        // There are certain nasty classes that could cause problems, mostly
-        // via default typing -- catch them here.
     final Class<?> raw = type.getRawClass();
     String full = raw.getName();
 
-        main_check:
-        do {
-            if (_cfgIllegalClassNames.contains(full)) {
-                break;
+    // Ensure that _cfgIllegalClassNames is initialized and contains the proper values
+    if (_cfgIllegalClassNames != null && _cfgIllegalClassNames.contains(full)) {
+        throw JsonMappingException.from(ctxt,
+                String.format("Illegal type (%s) to deserialize: prevented for security reasons", full));
     }
 
-            // 18-Dec-2017, tatu: As per [databind#1855], need bit more sophisticated handling
-            //    for some Spring framework types
-            // 05-Jan-2017, tatu: ... also, only applies to classes, not interfaces
+    // Check for Spring framework types
     if (full.startsWith(PREFIX_STRING)) {
-                for (Class<?> cls = raw; cls != Object.class; cls = cls.getSuperclass()) {
+        for (Class<?> cls = raw; cls != null; cls = cls.getSuperclass()) {
             String name = cls.getSimpleName();
-                    // looking for "AbstractBeanFactoryPointcutAdvisor" but no point to allow any is there?
             if ("AbstractPointcutAdvisor".equals(name) 
-                            // ditto  for "FileSystemXmlApplicationContext": block all ApplicationContexts
                     || "AbstractApplicationContext".equals(name)) {
-                        break main_check;
-                    }
-                }
-            }
-            return;
-        } while (false);
-
                 throw JsonMappingException.from(ctxt,
                         String.format("Illegal type (%s) to deserialize: prevented for security reasons", full));
             }
+        }
+    }
+}
\ No newline at end of file

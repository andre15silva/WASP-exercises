diff --git a/tmp/2c2cb8d0-8eac-469e-9ef1-ca458832e239_buggy.java b/tmp/ef346eb7-7666-42e1-aa5c-54355aaf3cc4_fixed.java
index 877a1a1..1adbfbc 100644
--- a/tmp/2c2cb8d0-8eac-469e-9ef1-ca458832e239_buggy.java
+++ b/tmp/ef346eb7-7666-42e1-aa5c-54355aaf3cc4_fixed.java
@@ -1,14 +1,13 @@
-    /**
-      * Returns the percentage of values that are equal to v
-     * (as a proportion between 0 and 1).
-     * <p>
-     * Returns <code>Double.NaN</code> if no values have been added.</p>
-     *
-     * @param v the value to lookup
-     * @return the proportion of values equal to v
-     * @deprecated replaced by {@link #getPct(Comparable)} as of 2.0
-     */
 @Deprecated
 public double getPct(Object v) {
-        return getCumPct((Comparable<?>) v);
+    if (v == null || count == 0) { // Assuming 'count' is the total number of values added
+        return Double.NaN; // Return NaN if no values have been added
+    }
+    int equalCount = 0; // Initialize a counter for equal values
+    for (Object value : values) { // Assuming 'values' is an array or collection of added values
+        if (value != null && value.equals(v)) {
+            equalCount++;
+        }
+    }
+    return (double) equalCount / count; // Return proportion of equal values
 }
\ No newline at end of file

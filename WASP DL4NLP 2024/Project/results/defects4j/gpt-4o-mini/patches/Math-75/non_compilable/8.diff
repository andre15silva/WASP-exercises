diff --git a/tmp/9f4a6fa2-651b-4b3d-afc4-af049f05737d_buggy.java b/tmp/45ab2c95-dc66-495c-8e35-82f0a599a3a8_fixed.java
index 877a1a1..3c6d72d 100644
--- a/tmp/9f4a6fa2-651b-4b3d-afc4-af049f05737d_buggy.java
+++ b/tmp/45ab2c95-dc66-495c-8e35-82f0a599a3a8_fixed.java
@@ -1,14 +1,24 @@
     /**
      * Returns the percentage of values that are equal to v
      * (as a proportion between 0 and 1).
      * <p>
      * Returns <code>Double.NaN</code> if no values have been added.</p>
      *
      * @param v the value to lookup
      * @return the proportion of values equal to v
      * @deprecated replaced by {@link #getPct(Comparable)} as of 2.0
      */
     @Deprecated
     public double getPct(Object v) {
-        return getCumPct((Comparable<?>) v);
+        if (v == null) {
+            return 0.0; // Consider null as no occurrences
+        }
+        int count = 0;
+        int total = getTotalCount(); // Assuming this method returns the total number of values added
+        for (Object value : values) { // Assuming 'values' is a collection storing added values
+            if (v.equals(value)) {
+                count++;
+            }
+        }
+        return total > 0 ? (double) count / total : Double.NaN;
     }
\ No newline at end of file

diff --git a/tmp/98b9c3d3-7806-4a7f-831b-a1385e3d6af0_buggy.java b/tmp/58c75543-a4da-4008-a235-515e38932c1b_fixed.java
index e69de29..7d15d9b 100644
--- a/tmp/98b9c3d3-7806-4a7f-831b-a1385e3d6af0_buggy.java
+++ b/tmp/58c75543-a4da-4008-a235-515e38932c1b_fixed.java
@@ -0,0 +1,25 @@
+private void _testFieldNameQuotingEnabled(JsonFactory factory, boolean useQuotes, boolean expectQuoted, String input) throws IOException {
+    // Create a JsonGenerator with the specified factory
+    StringWriter sw = new StringWriter();
+    JsonGenerator generator = factory.createGenerator(sw);
+
+    // Write JSON based on whether quoting is enabled
+    if (useQuotes) {
+        generator.writeStartObject();
+        generator.writeNumberField("foo", 1);
+        generator.writeEndObject();
+    } else {
+        generator.writeStartObject();
+        // Here we write without quotes
+        generator.writeFieldName("foo"); // This needs to be quoted according to the quote setting
+        generator.writeNumber(1);
+        generator.writeEndObject();
+    }
+
+    // Close the generator
+    generator.close();
+
+    // Check the generated output against the expected output
+    String expectedOutput = expectQuoted ? "{\"foo\":1}" : "{foo:1}";
+    assertEquals(expectedOutput, sw.toString());
+}
\ No newline at end of file

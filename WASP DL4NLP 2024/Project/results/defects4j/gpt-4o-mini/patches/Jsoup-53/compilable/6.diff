diff --git a/tmp/cc3f28e0-8dfc-4d06-b503-1724028e8d60_buggy.java b/tmp/4fa88dae-e838-4d82-995f-082b2600f7e8_fixed.java
index fecb896..7a9be12 100644
--- a/tmp/cc3f28e0-8dfc-4d06-b503-1724028e8d60_buggy.java
+++ b/tmp/4fa88dae-e838-4d82-995f-082b2600f7e8_fixed.java
@@ -1,34 +1,26 @@
-    /**
-     * Pulls a balanced string off the queue. E.g. if queue is "(one (two) three) four", (,) will return "one (two) three",
-     * and leave " four" on the queue. Unbalanced openers and closers can quoted (with ' or ") or escaped (with \). Those escapes will be left
-     * in the returned string, which is suitable for regexes (where we need to preserve the escape), but unsuitable for
-     * contains text strings; use unescape for that.
-     * @param open opener
-     * @param close closer
-     * @return data matched from the queue
-     */
 public String chompBalanced(char open, char close) {
     int start = -1;
     int end = -1;
     int depth = 0;
     char last = 0;
 
     do {
         if (isEmpty()) break;
         Character c = consume();
         if (last == 0 || last != ESC) {
-                if (c.equals(open)) {
+            if (c == open) { // Changed from c.equals(open) to c == open
                 depth++;
                 if (start == -1)
                     start = pos;
-                }
-                else if (c.equals(close))
+            } else if (c == close) { // Changed from c.equals(close) to c == close
                 depth--;
             }
+        }
 
         if (depth > 0 && last != 0)
             end = pos; // don't include the outer match pair in the return
         last = c;
-        } while (depth > 0);
+    } while (depth > 0 || (depth == 0 && start != -1)); // Added condition to process when depth reaches 0 but we have a start
+
     return (end >= 0) ? queue.substring(start, end) : "";
 }
\ No newline at end of file

diff --git a/tmp/dd95333f-4c35-4b92-960c-4d2185f30f8a_buggy.java b/tmp/cc9d1635-64ab-43d9-a548-c77d8e59707d_fixed.java
index fc8c302..1818dfa 100644
--- a/tmp/dd95333f-4c35-4b92-960c-4d2185f30f8a_buggy.java
+++ b/tmp/cc9d1635-64ab-43d9-a548-c77d8e59707d_fixed.java
@@ -1,23 +1,34 @@
 @Override
 public byte[] getBinaryValue(Base64Variant b64variant)
         throws IOException, JsonParseException
 {
-        // Multiple possibilities...
     JsonNode n = currentNode();
     if (n != null) {
-            // [databind#2096]: although `binaryValue()` works for real binary node
-            // and embedded "POJO" node, coercion from TextNode may require variant, so:
+        // Check if the node is a TextNode first
+        if (n instanceof TextNode) {
+            String text = n.textValue();
+            // Decode the Base64-encoded string using the provided variant
+            try {
+                return b64variant.decode(text);
+            } catch (IllegalArgumentException e) {
+                throw new JsonParseException(null, "Cannot access contents of TextNode as binary due to broken Base64 encoding: " + e.getMessage(), e);
+            }
+        }
+
+        // Handle binaryValue() for real binary nodes
         byte[] data = n.binaryValue();
         if (data != null) {
             return data;
         }
+
+        // Handle POJO nodes
         if (n.isPojo()) {
             Object ob = ((POJONode) n).getPojo();
             if (ob instanceof byte[]) {
                 return (byte[]) ob;
             }
         }
     }
     // otherwise return null to mark we have no binary content
     return null;
 }
\ No newline at end of file

diff --git a/tmp/226aba33-0112-4f9f-8dac-2dff55779e85_buggy.java b/tmp/f2e9b0e3-5866-4961-8e4b-9308ef50c2e4_fixed.java
index fc8c302..af4cf6a 100644
--- a/tmp/226aba33-0112-4f9f-8dac-2dff55779e85_buggy.java
+++ b/tmp/f2e9b0e3-5866-4961-8e4b-9308ef50c2e4_fixed.java
@@ -1,23 +1,34 @@
 @Override
 public byte[] getBinaryValue(Base64Variant b64variant)
     throws IOException, JsonParseException
 {
-        // Multiple possibilities...
     JsonNode n = currentNode();
     if (n != null) {
-            // [databind#2096]: although `binaryValue()` works for real binary node
-            // and embedded "POJO" node, coercion from TextNode may require variant, so:
+        // Handle binary data from a binary node
         byte[] data = n.binaryValue();
         if (data != null) {
             return data;
         }
+
+        // Handle POJO node case
         if (n.isPojo()) {
             Object ob = ((POJONode) n).getPojo();
             if (ob instanceof byte[]) {
                 return (byte[]) ob;
             }
         }
+
+        // Handle TextNode for Base64 encoded content
+        if (n instanceof TextNode) {
+            String base64String = n.textValue();
+            try {
+                // Decode the base64 string using the provided variant
+                return b64variant.decode(base64String);
+            } catch (IllegalArgumentException e) {
+                throw new JsonParseException("Cannot access contents of TextNode as binary due to broken Base64 encoding: " + e.getMessage(), getLocation());
+            }
+        }
     }
     // otherwise return null to mark we have no binary content
     return null;
 }
\ No newline at end of file

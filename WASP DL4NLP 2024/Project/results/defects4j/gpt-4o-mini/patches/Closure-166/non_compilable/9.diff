diff --git a/tmp/037e7f0a-dd39-4a9d-9b3e-c7be124faf06_buggy.java b/tmp/ac865586-ed3a-4759-8858-d38012bb678a_fixed.java
index 5f96616..720699c 100644
--- a/tmp/037e7f0a-dd39-4a9d-9b3e-c7be124faf06_buggy.java
+++ b/tmp/ac865586-ed3a-4759-8858-d38012bb678a_fixed.java
@@ -1,20 +1,17 @@
 @Override
 public void matchConstraint(JSType constraint) {
     // We only want to match constraints on anonymous types.
     if (hasReferenceName()) {
         return;
     }
 
     // Handle the case where the constraint object is a record type.
-    //
-    // param constraint {{prop: (number|undefined)}}
-    // function f(constraint) {}
-    // f({});
-    //
-    // We want to modify the object literal to match the constraint, by
-    // taking any each property on the record and trying to match
-    // properties on this object.
     if (constraint.isRecordType()) {
-      matchRecordTypeConstraint(constraint.toObjectType());
+        // Modify the object literal to match the constraint
+        JSType recordType = constraint.toObjectType();
+        if (recordType != null) {
+            // Ensure we call matchRecordTypeConstraint on the correct type
+            matchRecordTypeConstraint(recordType);
+        }
     }
 }
\ No newline at end of file

diff --git a/tmp/6035907a-7fb0-4286-a9c9-d6750ab59d4d_buggy.java b/tmp/1fba4c6e-01c9-46c1-b55e-3980eb35dae5_fixed.java
index c222270..f5bf37e 100644
--- a/tmp/6035907a-7fb0-4286-a9c9-d6750ab59d4d_buggy.java
+++ b/tmp/1fba4c6e-01c9-46c1-b55e-3980eb35dae5_fixed.java
@@ -1,7 +1,16 @@
 public Object generateId(Object forPojo) {
-        // 04-Jun-2016, tatu: As per [databind#1255], need to consider possibility of
-        //    id being generated for "alwaysAsId", but not being written as POJO; regardless,
-        //    need to use existing id if there is one:
-            id = generator.generateId(forPojo);
+    // Check if the forPojo has an existing id; if so, return it
+    if (forPojo instanceof HasId) {
+        Object existingId = ((HasId) forPojo).getId();
+        if (existingId != null) {
+            return existingId;
+        }
+    }
+    // Generate a new id if none exists
+    Object id = generator.generateId(forPojo);
+    // Assuming we should set the new id back to the POJO, use setId method (if applicable)
+    if (forPojo instanceof HasId) {
+        ((HasId) forPojo).setId(id);
+    }
     return id;
 }
\ No newline at end of file

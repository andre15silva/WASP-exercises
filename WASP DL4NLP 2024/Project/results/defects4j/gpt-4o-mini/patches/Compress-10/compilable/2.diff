diff --git a/tmp/16188f96-f9ff-4f30-94b7-30a1389654d0_buggy.java b/tmp/ca08d282-b2bf-420b-8834-bfc42d4bb148_fixed.java
index 85e6a42..771a02d 100644
--- a/tmp/16188f96-f9ff-4f30-94b7-30a1389654d0_buggy.java
+++ b/tmp/ca08d282-b2bf-420b-8834-bfc42d4bb148_fixed.java
@@ -1,50 +1,35 @@
-    /**
-     * Walks through all recorded entries and adds the data available
-     * from the local file header.
-     *
-     * <p>Also records the offsets for the data to read from the
-     * entries.</p>
-     */
     private void resolveLocalFileHeaderData(Map<ZipArchiveEntry, NameAndComment>
                                             entriesWithoutUTF8Flag)
         throws IOException {
-        // changing the name of a ZipArchiveEntry is going to change
-        // the hashcode - see COMPRESS-164
-        // Map needs to be reconstructed in order to keep central
-        // directory order
         for (ZipArchiveEntry ze : entries.keySet()) {
             OffsetEntry offsetEntry = entries.get(ze);
             long offset = offsetEntry.headerOffset;
             archive.seek(offset + LFH_OFFSET_FOR_FILENAME_LENGTH);
             byte[] b = new byte[SHORT];
             archive.readFully(b);
             int fileNameLen = ZipShort.getValue(b);
             archive.readFully(b);
             int extraFieldLen = ZipShort.getValue(b);
-            int lenToSkip = fileNameLen;
-            while (lenToSkip > 0) {
-                int skipped = archive.skipBytes(lenToSkip);
-                if (skipped <= 0) {
-                    throw new RuntimeException("failed to skip file name in"
-                                               + " local file header");
-                }
-                lenToSkip -= skipped;
-            }
+            
+            // Read and skip the filename
+            archive.readFully(new byte[fileNameLen]);
             byte[] localExtraData = new byte[extraFieldLen];
             archive.readFully(localExtraData);
             ze.setExtra(localExtraData);
+
+            // Update the dataOffset correctly
             offsetEntry.dataOffset = offset + LFH_OFFSET_FOR_FILENAME_LENGTH
-                + SHORT + SHORT + fileNameLen + extraFieldLen;
+                + 2 * SHORT + fileNameLen + extraFieldLen;
 
             if (entriesWithoutUTF8Flag.containsKey(ze)) {
                 String orig = ze.getName();
                 NameAndComment nc = entriesWithoutUTF8Flag.get(ze);
                 ZipUtil.setNameAndCommentFromExtraFields(ze, nc.name,
                                                          nc.comment);
                 if (!orig.equals(ze.getName())) {
                     nameMap.remove(orig);
                     nameMap.put(ze.getName(), ze);
                 }
             }
         }
     }
\ No newline at end of file

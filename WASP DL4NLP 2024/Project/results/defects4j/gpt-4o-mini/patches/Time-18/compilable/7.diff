diff --git a/tmp/225af79f-5ada-40d6-8fbb-60e6896a256c_buggy.java b/tmp/81d97824-91a8-490f-a7ff-d6b40c6dd876_fixed.java
index be2af16..6d6c928 100644
--- a/tmp/225af79f-5ada-40d6-8fbb-60e6896a256c_buggy.java
+++ b/tmp/81d97824-91a8-490f-a7ff-d6b40c6dd876_fixed.java
@@ -1,29 +1,33 @@
 public long getDateTimeMillis(int year, int monthOfYear, int dayOfMonth,
                               int hourOfDay, int minuteOfHour,
                               int secondOfMinute, int millisOfSecond)
     throws IllegalArgumentException
 {
     Chronology base;
     if ((base = getBase()) != null) {
         return base.getDateTimeMillis
             (year, monthOfYear, dayOfMonth,
              hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
     }
 
     // Assume date is Gregorian.
     long instant;
     instant = iGregorianChronology.getDateTimeMillis
         (year, monthOfYear, dayOfMonth,
          hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
+
     if (instant < iCutoverMillis) {
-            // Maybe it's Julian.
+        // Maybe it's Julian. Check Julian chronology first.
         instant = iJulianChronology.getDateTimeMillis
             (year, monthOfYear, dayOfMonth,
              hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
-            if (instant >= iCutoverMillis) {
-                // Okay, it's in the illegal cutover gap.
+        
+        // If the instant is still before the cutover, it means this date is valid in Julian.
+        if (instant < iCutoverMillis) {
+            return instant;  // Return the valid Julian timestamp
+        }
+        // If we reach this point, then it's in the illegal cutover gap or invalid in both calendars.
         throw new IllegalArgumentException("Specified date does not exist");
     }
-        }
     return instant;
 }
\ No newline at end of file

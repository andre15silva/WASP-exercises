diff --git a/tmp/197a04d3-4522-43d8-ab59-8e4061847e68_buggy.java b/tmp/b13e53ea-501c-4760-a93c-4ca2f68b057b_fixed.java
index be2af16..e1cce7b 100644
--- a/tmp/197a04d3-4522-43d8-ab59-8e4061847e68_buggy.java
+++ b/tmp/b13e53ea-501c-4760-a93c-4ca2f68b057b_fixed.java
@@ -1,29 +1,36 @@
 public long getDateTimeMillis(int year, int monthOfYear, int dayOfMonth,
                               int hourOfDay, int minuteOfHour,
                               int secondOfMinute, int millisOfSecond)
     throws IllegalArgumentException
 {
     Chronology base;
     if ((base = getBase()) != null) {
         return base.getDateTimeMillis
             (year, monthOfYear, dayOfMonth,
              hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
     }
 
     // Assume date is Gregorian.
     long instant;
     instant = iGregorianChronology.getDateTimeMillis
         (year, monthOfYear, dayOfMonth,
          hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
     if (instant < iCutoverMillis) {
         // Maybe it's Julian.
+        // Adjust year for Julian calculation
+        if (year % 4 == 0 && monthOfYear == 2 && dayOfMonth == 29) {
             instant = iJulianChronology.getDateTimeMillis
                 (year, monthOfYear, dayOfMonth,
                  hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
             if (instant >= iCutoverMillis) {
                 // Okay, it's in the illegal cutover gap.
                 throw new IllegalArgumentException("Specified date does not exist");
             }
+        } else {
+            instant = iJulianChronology.getDateTimeMillis
+                (year, monthOfYear, dayOfMonth,
+                 hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
+        }
     }
     return instant;
 }
\ No newline at end of file

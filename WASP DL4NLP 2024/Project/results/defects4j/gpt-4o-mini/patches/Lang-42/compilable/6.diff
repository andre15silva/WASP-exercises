diff --git a/tmp/63fb1d2e-91e3-4e91-87e2-abbe844a3cd2_buggy.java b/tmp/9e76893a-9712-4612-ab7a-b0f59c245789_fixed.java
index 822447c..d17947a 100644
--- a/tmp/63fb1d2e-91e3-4e91-87e2-abbe844a3cd2_buggy.java
+++ b/tmp/9e76893a-9712-4612-ab7a-b0f59c245789_fixed.java
@@ -1,37 +1,23 @@
-    /**
-     * <p>
-     * Escapes the characters in the <code>String</code> passed and writes the result to the <code>Writer</code>
-     * passed.
-     * </p>
-     * 
-     * @param writer
-     *            The <code>Writer</code> to write the results of the escaping to. Assumed to be a non-null value.
-     * @param str
-     *            The <code>String</code> to escape. Assumed to be a non-null value.
-     * @throws IOException
-     *             when <code>Writer</code> passed throws the exception from calls to the {@link Writer#write(int)}
-     *             methods.
-     * 
-     * @see #escape(String)
-     * @see Writer
-     */
 public void escape(Writer writer, String str) throws IOException {
     int len = str.length();
     for (int i = 0; i < len; i++) {
+        int codePoint = str.codePointAt(i);
+        if (codePoint > 0x7F) {
+            writer.write("&#");
+            writer.write(Integer.toString(codePoint, 10));
+            writer.write(';');
+            // Increment index by the number of characters in the code point (1 or 2).
+            i += Character.charCount(codePoint) - 1;
+        } else {
             char c = str.charAt(i);
             String entityName = this.entityName(c);
             if (entityName == null) {
-                if (c > 0x7F) {
-                    writer.write("&#");
-                    writer.write(Integer.toString(c, 10));
-                    writer.write(';');
-                } else {
                 writer.write(c);
-                }
             } else {
                 writer.write('&');
                 writer.write(entityName);
                 writer.write(';');
             }
         }
     }
+}
\ No newline at end of file

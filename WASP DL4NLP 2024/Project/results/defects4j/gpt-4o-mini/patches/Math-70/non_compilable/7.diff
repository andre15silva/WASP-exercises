diff --git a/tmp/cc17b425-2432-4aee-86cc-57afd750e5c5_buggy.java b/tmp/434affbf-7740-4c07-ad62-c6b90683e39f_fixed.java
index d931bce..a020447 100644
--- a/tmp/cc17b425-2432-4aee-86cc-57afd750e5c5_buggy.java
+++ b/tmp/434affbf-7740-4c07-ad62-c6b90683e39f_fixed.java
@@ -1,5 +1,38 @@
     /** {@inheritDoc} */
     public double solve(final UnivariateRealFunction f, double min, double max, double initial)
         throws MaxIterationsExceededException, FunctionEvaluationException {
-        return solve(min, max);
+        // Ensure the function is not null
+        if (f == null) {
+            throw new IllegalArgumentException("Function must not be null");
+        }
+
+        // Implement the bisection logic here
+        double left = min;
+        double right = max;
+        double mid;
+        double fLeft = f.value(left);
+        double fRight = f.value(right);
+        
+        if (fLeft * fRight > 0) {
+            throw new IllegalArgumentException("f(min) and f(max) must have different signs");
+        }
+
+        for (int i = 0; i < MAX_ITERATIONS; i++) {
+            mid = (left + right) / 2;
+            double fMid = f.value(mid);
+
+            if (Math.abs(fMid) < getAbsoluteAccuracy()) {
+                return mid; // Found the root
+            }
+
+            if (fLeft * fMid < 0) {
+                right = mid;
+                fRight = fMid;
+            } else {
+                left = mid;
+                fLeft = fMid;
+            }
+        }
+
+        throw new MaxIterationsExceededException(MAX_ITERATIONS);
     }
\ No newline at end of file

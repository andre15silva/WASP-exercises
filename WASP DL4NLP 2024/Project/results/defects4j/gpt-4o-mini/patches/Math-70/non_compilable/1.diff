diff --git a/tmp/e3ad4b1f-1456-4ed1-9a41-f31f1dbbc741_buggy.java b/tmp/52ccd044-e22c-46dd-b64d-f9b80d883b80_fixed.java
index d931bce..931a75d 100644
--- a/tmp/e3ad4b1f-1456-4ed1-9a41-f31f1dbbc741_buggy.java
+++ b/tmp/52ccd044-e22c-46dd-b64d-f9b80d883b80_fixed.java
@@ -1,5 +1,29 @@
 /** {@inheritDoc} */
 public double solve(final UnivariateRealFunction f, double min, double max, double initial)
     throws MaxIterationsExceededException, FunctionEvaluationException {
-        return solve(min, max);
+    // Implement the root-finding logic here using the bisection method or similar algorithm
+    double mid;
+    double fMin = f.value(min);
+    double fMax = f.value(max);
+    
+    if (fMin * fMax >= 0) {
+        throw new FunctionEvaluationException("Function values at the interval endpoints must have different signs.");
+    }
+
+    while ((max - min) > getAbsoluteAccuracy()) {
+        mid = (min + max) / 2.0;
+        double fMid = f.value(mid);
+
+        if (fMid == 0) {
+            return mid; // Found exact root
+        } else if (fMin * fMid < 0) {
+            max = mid; // The root is in the left half
+            fMax = fMid; // Update fMax for the new interval
+        } else {
+            min = mid; // The root is in the right half
+            fMin = fMid; // Update fMin for the new interval
+        }
+    }
+    
+    return (min + max) / 2.0; // Return the midpoint as the best estimate of the root
 }
\ No newline at end of file

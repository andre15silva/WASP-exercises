diff --git a/tmp/623da363-553a-4498-808c-479b28fbf866_buggy.java b/tmp/688283d4-56df-4a92-a9c6-ecb8f57d4673_fixed.java
index d931bce..0393d13 100644
--- a/tmp/623da363-553a-4498-808c-479b28fbf866_buggy.java
+++ b/tmp/688283d4-56df-4a92-a9c6-ecb8f57d4673_fixed.java
@@ -1,5 +1,31 @@
 /** {@inheritDoc} */
 public double solve(final UnivariateRealFunction f, double min, double max, double initial)
     throws MaxIterationsExceededException, FunctionEvaluationException {
-        return solve(min, max);
+    // Implementation of bisection method
+    double mid;
+    double fMin = f.value(min);
+    double fMax = f.value(max);
+    
+    if (fMin * fMax > 0) {
+        throw new IllegalArgumentException("Function values at the bounds must have opposite signs.");
+    }
+    
+    while ((max - min) > getAbsoluteAccuracy()) {
+        mid = (min + max) / 2.0;
+        double fMid = f.value(mid);
+        
+        if (fMid == 0) {
+            return mid; // Found exact root
+        }
+        
+        if (fMin * fMid < 0) {
+            max = mid; // Root is in the left half
+            fMax = fMid;
+        } else {
+            min = mid; // Root is in the right half
+            fMin = fMid;
+        }
+    }
+    
+    return (min + max) / 2.0; // Return the midpoint as the root
 }
\ No newline at end of file

diff --git a/tmp/c55007aa-cf10-4ff1-be14-e48f324b065c_buggy.java b/tmp/3fd65bc6-9a95-43a9-8dfa-c278737796bb_fixed.java
index 0313249..c2a5f58 100644
--- a/tmp/c55007aa-cf10-4ff1-be14-e48f324b065c_buggy.java
+++ b/tmp/3fd65bc6-9a95-43a9-8dfa-c278737796bb_fixed.java
@@ -1,32 +1,26 @@
-    /**
-     * Specialized method for removing specified existing entry.
-     * NOTE: entry MUST exist, otherwise an exception is thrown.
-     */
-    public void remove(SettableBeanProperty propToRm)
-    {
+public void remove(SettableBeanProperty propToRm) {
     ArrayList<SettableBeanProperty> props = new ArrayList<SettableBeanProperty>(_size);
     String key = getPropertyName(propToRm);
     boolean found = false;
 
     for (int i = 1, end = _hashArea.length; i < end; i += 2) {
         SettableBeanProperty prop = (SettableBeanProperty) _hashArea[i];
         if (prop == null) {
             continue;
         }
+        // Check for case insensitive name matching
         if (!found) {
-                // 09-Jan-2017, tatu: Important: must check name slot and NOT property name,
-                //   as only former is lower-case in case-insensitive case
-                found = key.equals(prop.getName());
+            found = key.equalsIgnoreCase(prop.getName()); // Use equalsIgnoreCase for case insensitivity
             if (found) {
                 // need to leave a hole here
                 _propsInOrder[_findFromOrdered(prop)] = null;
                 continue;
             }
         }
         props.add(prop);
     }
     if (!found) {
         throw new NoSuchElementException("No entry '" + propToRm.getName() + "' found, can't remove");
     }
     init(props);
 }
\ No newline at end of file

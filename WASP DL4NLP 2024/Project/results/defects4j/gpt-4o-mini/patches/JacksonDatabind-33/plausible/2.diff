diff --git a/tmp/0da53195-d53c-46fc-b19e-88c8fec57c2d_buggy.java b/tmp/cb665796-4990-46f8-b8f9-91ef85b9f440_fixed.java
index 3cb9232..06f6965 100644
--- a/tmp/0da53195-d53c-46fc-b19e-88c8fec57c2d_buggy.java
+++ b/tmp/cb665796-4990-46f8-b8f9-91ef85b9f440_fixed.java
@@ -1,26 +1,27 @@
 @Override
-    public PropertyName findNameForSerialization(Annotated a)
-    {
+public PropertyName findNameForSerialization(Annotated a) {
     String name = null;
 
     JsonGetter jg = _findAnnotation(a, JsonGetter.class);
     if (jg != null) {
         name = jg.value();
     } else {
         JsonProperty pann = _findAnnotation(a, JsonProperty.class);
         if (pann != null) {
             name = pann.value();
-                /* 22-Apr-2014, tatu: Should figure out a better way to do this, but
-                 *   it's actually bit tricky to do it more efficiently (meta-annotations
-                 *   add more lookups; AnnotationMap costs etc)
-                 */
         } else if (_hasAnnotation(a, JsonSerialize.class)
                 || _hasAnnotation(a, JsonView.class)
                 || _hasAnnotation(a, JsonRawValue.class)) {
-                name = "";
+            name = ""; // This indicates that the property should not be serialized.
+        } else {
+            // Check for unwrapped properties
+            JsonUnwrapped unwrapped = _findAnnotation(a, JsonUnwrapped.class);
+            if (unwrapped != null) {
+                name = ""; // Treat unwrapped properties specially
             } else {
                 return null;
             }
         }
+    }
     return PropertyName.construct(name);
 }
\ No newline at end of file

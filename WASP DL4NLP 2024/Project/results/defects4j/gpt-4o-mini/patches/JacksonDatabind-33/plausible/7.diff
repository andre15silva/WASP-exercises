diff --git a/tmp/2da54c2e-027b-44dc-affb-e21f0e0bd790_buggy.java b/tmp/66fd1b62-ac8b-4fb6-b35e-1a6087100ba5_fixed.java
index 3cb9232..f4de8cf 100644
--- a/tmp/2da54c2e-027b-44dc-affb-e21f0e0bd790_buggy.java
+++ b/tmp/66fd1b62-ac8b-4fb6-b35e-1a6087100ba5_fixed.java
@@ -1,26 +1,26 @@
 @Override
 public PropertyName findNameForSerialization(Annotated a)
 {
     String name = null;
 
     JsonGetter jg = _findAnnotation(a, JsonGetter.class);
     if (jg != null) {
         name = jg.value();
     } else {
         JsonProperty pann = _findAnnotation(a, JsonProperty.class);
         if (pann != null) {
             name = pann.value();
-                /* 22-Apr-2014, tatu: Should figure out a better way to do this, but
-                 *   it's actually bit tricky to do it more efficiently (meta-annotations
-                 *   add more lookups; AnnotationMap costs etc)
-                 */
         } else if (_hasAnnotation(a, JsonSerialize.class)
                 || _hasAnnotation(a, JsonView.class)
                 || _hasAnnotation(a, JsonRawValue.class)) {
             name = "";
-            } else {
-                return null;
         }
     }
-        return PropertyName.construct(name);
+
+    // Add check for unwrapped properties
+    if (_hasAnnotation(a, JsonUnwrapped.class)) {
+        return PropertyName.construct(name != null ? name : "");
+    }
+
+    return (name != null) ? PropertyName.construct(name) : null;
 }
\ No newline at end of file

diff --git a/tmp/2124abe3-8c72-4901-a50d-6b0eb3a5ce56_buggy.java b/tmp/f0bc8f4a-cb42-4085-822b-e9473ef3de7a_fixed.java
index 0b7c52e..1ffe583 100644
--- a/tmp/2124abe3-8c72-4901-a50d-6b0eb3a5ce56_buggy.java
+++ b/tmp/f0bc8f4a-cb42-4085-822b-e9473ef3de7a_fixed.java
@@ -1,27 +1,28 @@
     /**
      * Processes a OBJECTLIT node.
      */
     private void handleObjectLit(NodeTraversal t, Node n) {
       for (Node child = n.getFirstChild();
           child != null;
           child = child.getNext()) {
         // Maybe STRING, GET, SET
 
         // We should never see a mix of numbers and strings.
         String name = child.getString();
         T type = typeSystem.getType(getScope(), n, name);
 
         Property prop = getProperty(name);
-        if (!prop.scheduleRenaming(child,
-                                   processProperty(t, prop, type, null))) {
+        if (!prop.scheduleRenaming(child, processProperty(t, prop, type, null))) {
+          if (!propertyIsType(name, type)) {
             // TODO(user): It doesn't look like the user can do much in this
             // case right now.
             if (propertiesToErrorFor.containsKey(name)) {
               compiler.report(JSError.make(
                   t.getSourceName(), child, propertiesToErrorFor.get(name),
                   Warnings.INVALIDATION, name,
                   (type == null ? "null" : type.toString()), n.toString(), ""));
             }
           }
         }
       }
+    }

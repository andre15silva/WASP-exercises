diff --git a/tmp/5aafa7e5-ec3a-4273-ad57-aab6bde8ca77_buggy.java b/tmp/8226c806-a4b0-4449-9d95-ebb466c6b97c_fixed.java
index 442a001..4b1dd97 100644
--- a/tmp/5aafa7e5-ec3a-4273-ad57-aab6bde8ca77_buggy.java
+++ b/tmp/8226c806-a4b0-4449-9d95-ebb466c6b97c_fixed.java
@@ -1,39 +1,45 @@
     /**
      * Get the data that this form submits. The returned list is a copy of the data, and changes to the contents of the
      * list will not be reflected in the DOM.
      * @return a list of key vals
      */
     public List<Connection.KeyVal> formData() {
         ArrayList<Connection.KeyVal> data = new ArrayList<Connection.KeyVal>();
 
         // iterate the form control elements and accumulate their values
         for (Element el: elements) {
             if (!el.tag().isFormSubmittable()) continue; // contents are form listable, superset of submitable
             String name = el.attr("name");
             if (name.length() == 0) continue;
             String type = el.attr("type");
 
+            // fixes #1708
             if ("select".equals(el.tagName())) {
                 Elements options = el.select("option[selected]");
                 boolean set = false;
                 for (Element option: options) {
                     data.add(HttpConnection.KeyVal.create(name, option.val()));
                     set = true;
                 }
                 if (!set) {
-                    Element option = el.select("option").first();
-                    if (option != null)
-                        data.add(HttpConnection.KeyVal.create(name, option.val()));
+                    Elements vals = el.select("option");
+                    if (vals.size() > 0)
+                        data.add(HttpConnection.KeyVal.create(name, vals.first().val()));
                 }
             } else if ("checkbox".equalsIgnoreCase(type) || "radio".equalsIgnoreCase(type)) {
                 // only add checkbox or radio if they have the checked attribute
-                if (el.hasAttr("checked")) {
+                if (el.hasAttr("checked") || el.hasAttr("default")) {
                     final String val = el.val();
                     data.add(HttpConnection.KeyVal.create(name, val));
                 }
+            } else if ("textarea".equals(el.tagName())) {
+                // Only textareas will add text value, no need for the
+                // hasAttr check since they will never have a value when
+                // they have no text.
+                data.add(HttpConnection.KeyVal.create(name, el.val()));
             } else {
                 data.add(HttpConnection.KeyVal.create(name, el.val()));
             }
         }
         return data;
     }

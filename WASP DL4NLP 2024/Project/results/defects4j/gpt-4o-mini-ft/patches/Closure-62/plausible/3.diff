diff --git a/tmp/c99ca4a3-a01d-47df-aa59-5a9db68709aa_buggy.java b/tmp/8fbb3826-17b2-4188-8105-8c5d70ee361c_fixed.java
index 904dba7..7a710e8 100644
--- a/tmp/c99ca4a3-a01d-47df-aa59-5a9db68709aa_buggy.java
+++ b/tmp/8fbb3826-17b2-4188-8105-8c5d70ee361c_fixed.java
@@ -1,46 +1,46 @@
   private String format(JSError error, boolean warning) {
     // extract source excerpt
     SourceExcerptProvider source = getSource();
     String sourceExcerpt = source == null ? null :
         excerpt.get(
             source, error.sourceName, error.lineNumber, excerptFormatter);
 
     // formatting the message
     StringBuilder b = new StringBuilder();
     if (error.sourceName != null) {
       b.append(error.sourceName);
       if (error.lineNumber > 0) {
         b.append(':');
         b.append(error.lineNumber);
-      }
         b.append(": ");
       }
+    }
 
     b.append(getLevelName(warning ? CheckLevel.WARNING : CheckLevel.ERROR));
     b.append(" - ");
 
     b.append(error.description);
     b.append('\n');
     if (sourceExcerpt != null) {
       b.append(sourceExcerpt);
       b.append('\n');
       int charno = error.getCharno();
 
       // padding equal to the excerpt and arrow at the end
       // charno == sourceExpert.length() means something is missing
-      // at the end of the line
+      // at the end of the line, so if that happens, show one less space
       if (excerpt.equals(LINE)
-          && 0 <= charno && charno < sourceExcerpt.length()) {
+          && 0 <= charno && charno <= sourceExcerpt.length()) {
         for (int i = 0; i < charno; i++) {
           char c = sourceExcerpt.charAt(i);
           if (Character.isWhitespace(c)) {
             b.append(c);
           } else {
             b.append(' ');
           }
         }
         b.append("^\n");
       }
     }
     return b.toString();
   }

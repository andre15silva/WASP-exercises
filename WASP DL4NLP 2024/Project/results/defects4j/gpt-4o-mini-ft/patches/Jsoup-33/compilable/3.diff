diff --git a/tmp/6f2b7995-ad8e-46df-8e78-f868bb909f7e_buggy.java b/tmp/ebae7d7a-8d06-4153-a0f0-931be3455033_fixed.java
index dc93be3..b9c81e8 100644
--- a/tmp/6f2b7995-ad8e-46df-8e78-f868bb909f7e_buggy.java
+++ b/tmp/ebae7d7a-8d06-4153-a0f0-931be3455033_fixed.java
@@ -1,14 +1,15 @@
     Element insert(Token.StartTag startTag) {
         // handle empty unknown tags
         // when the spec expects an empty tag, will directly hit insertEmpty, so won't generate this fake end tag.
-        if (startTag.isSelfClosing()) {
+        boolean selfClosing = startTag.isSelfClosing();
+        if (selfClosing /*|| getKnownEmptyTags().contains(startTag.name())*/) {
             Element el = insertEmpty(startTag);
             stack.add(el);
             tokeniser.emit(new Token.EndTag(el.tagName()));  // ensure we get out of whatever state we are in. emitted for yielded processing
             return el;
         }
         
         Element el = new Element(Tag.valueOf(startTag.name()), baseUri, startTag.attributes);
         insert(el);
         return el;
     }

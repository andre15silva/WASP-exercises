diff --git a/tmp/31154e5c-ba09-4956-a59e-ee56d35ab4c4_buggy.java b/tmp/72545ba9-f5fa-4832-9905-c0f74f458d2f_fixed.java
index dc93be3..b7486fb 100644
--- a/tmp/31154e5c-ba09-4956-a59e-ee56d35ab4c4_buggy.java
+++ b/tmp/72545ba9-f5fa-4832-9905-c0f74f458d2f_fixed.java
@@ -1,14 +1,16 @@
     Element insert(Token.StartTag startTag) {
         // handle empty unknown tags
         // when the spec expects an empty tag, will directly hit insertEmpty, so won't generate this fake end tag.
+        if (isUnknownTag(startTag.name())) { // unknown tags can be self closing
             if (startTag.isSelfClosing()) {
                 Element el = insertEmpty(startTag);
                 stack.add(el);
                 tokeniser.emit(new Token.EndTag(el.tagName()));  // ensure we get out of whatever state we are in. emitted for yielded processing
                 return el;
             }
+        }
         
         Element el = new Element(Tag.valueOf(startTag.name()), baseUri, startTag.attributes);
         insert(el);
         return el;
     }

diff --git a/tmp/6bba3cda-8507-44d5-ab2c-84d173faca0e_buggy.java b/tmp/4bb1491a-d5d7-411e-9715-f989bb4f1ebb_fixed.java
index dc93be3..e4b188b 100644
--- a/tmp/6bba3cda-8507-44d5-ab2c-84d173faca0e_buggy.java
+++ b/tmp/4bb1491a-d5d7-411e-9715-f989bb4f1ebb_fixed.java
@@ -1,14 +1,14 @@
     Element insert(Token.StartTag startTag) {
         // handle empty unknown tags
         // when the spec expects an empty tag, will directly hit insertEmpty, so won't generate this fake end tag.
-        if (startTag.isSelfClosing()) {
+        if (startTag.isSelfClosing() && !knownEmptyElements.contains(startTag.normalName())) {
             Element el = insertEmpty(startTag);
             stack.add(el);
             tokeniser.emit(new Token.EndTag(el.tagName()));  // ensure we get out of whatever state we are in. emitted for yielded processing
             return el;
         }
         
         Element el = new Element(Tag.valueOf(startTag.name()), baseUri, startTag.attributes);
         insert(el);
         return el;
     }

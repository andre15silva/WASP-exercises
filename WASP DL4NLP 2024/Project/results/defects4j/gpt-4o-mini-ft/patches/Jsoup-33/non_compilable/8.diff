diff --git a/tmp/217aa87c-0386-4c57-9b53-75954ecb07b4_buggy.java b/tmp/efe6a808-231c-4e8e-bbb6-536d519aeb7b_fixed.java
index dc93be3..f827fb9 100644
--- a/tmp/217aa87c-0386-4c57-9b53-75954ecb07b4_buggy.java
+++ b/tmp/efe6a808-231c-4e8e-bbb6-536d519aeb7b_fixed.java
@@ -1,14 +1,14 @@
     Element insert(Token.StartTag startTag) {
         // handle empty unknown tags
         // when the spec expects an empty tag, will directly hit insertEmpty, so won't generate this fake end tag.
-        if (startTag.isSelfClosing()) {
+        String tagName = startTag.nameAuCase();
+        if (knownEmptyBlockSet.contains(tagName)) {
             Element el = insertEmpty(startTag);
-            stack.add(el);
             tokeniser.emit(new Token.EndTag(el.tagName()));  // ensure we get out of whatever state we are in. emitted for yielded processing
             return el;
         }
         
-        Element el = new Element(Tag.valueOf(startTag.name()), baseUri, startTag.attributes);
+        Element el = new Element(Tag.valueOf(tagName), baseUri, startTag.attributes);
         insert(el);
         return el;
     }

diff --git a/tmp/b24cf307-89a7-4217-a2ca-fb7a04c4835e_buggy.java b/tmp/9584433e-5b60-482c-b8d0-71f2996be325_fixed.java
index ec6c9ee..2467613 100644
--- a/tmp/b24cf307-89a7-4217-a2ca-fb7a04c4835e_buggy.java
+++ b/tmp/9584433e-5b60-482c-b8d0-71f2996be325_fixed.java
@@ -1,21 +1,23 @@
     //-----------------------------------------------------------------------
     private static PeriodFormatter toFormatter(List<Object> elementPairs, boolean notPrinter, boolean notParser) {
         if (notPrinter && notParser) {
             throw new IllegalStateException("Builder has created neither a printer nor a parser");
         }
         int size = elementPairs.size();
         if (size >= 2 && elementPairs.get(0) instanceof Separator) {
             Separator sep = (Separator) elementPairs.get(0);
                 PeriodFormatter f = toFormatter(elementPairs.subList(2, size), notPrinter, notParser);
                 sep = sep.finish(f.getPrinter(), f.getParser());
                 return new PeriodFormatter(sep, sep);
         }
         Object[] comp = createComposite(elementPairs);
         if (notPrinter) {
             return new PeriodFormatter(null, (PeriodParser) comp[1]);
         } else if (notParser) {
             return new PeriodFormatter((PeriodPrinter) comp[0], null);
         } else {
-            return new PeriodFormatter((PeriodPrinter) comp[0], (PeriodParser) comp[1]);
+            PeriodFormatter dateTimeFormatter = (size == 1) ? ISOPeriodFormat.standard() : new PeriodFormatterBuilder().append(ISOPeriodFormat.standard());
+            dateTimeFormatter = dateTimeFormatter.append((PeriodPrinter) comp[0], (PeriodParser) comp[1]);
+            return dateTimeFormatter;
         }
     }

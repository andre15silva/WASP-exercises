diff --git a/tmp/979d4341-cc3b-4552-abaa-5b539a407ba4_buggy.java b/tmp/6a4126c2-cfe4-4bba-9236-2ba4249abf1f_fixed.java
index 4bbd561..f08c5fb 100644
--- a/tmp/979d4341-cc3b-4552-abaa-5b539a407ba4_buggy.java
+++ b/tmp/6a4126c2-cfe4-4bba-9236-2ba4249abf1f_fixed.java
@@ -1,37 +1,39 @@
     /**
      * {@inheritDoc}
      */
     @Override
     public int translate(CharSequence input, int index, Writer out) throws IOException {
         // TODO: Protect from ArrayIndexOutOfBounds
         if(input.charAt(index) == '&' && input.charAt(index + 1) == '#') {
             int start = index + 2;
             boolean isHex = false;
 
             char firstChar = input.charAt(start);
             if(firstChar == 'x' || firstChar == 'X') {
                 start++;
                 isHex = true;
             }
 
             int end = start;
             while(input.charAt(end) != ';') {
                 end++;
             }
 
             int entityValue;
             try {
                 if(isHex) {
                     entityValue = Integer.parseInt(input.subSequence(start, end).toString(), 16);
                 } else {
                     entityValue = Integer.parseInt(input.subSequence(start, end).toString(), 10);
                 }
             } catch(NumberFormatException nfe) {
                 return 0;
             }
 
-                out.write(entityValue);
+            // Supplementary characters are encoded using their Unicode code points in UTF-16 as defined by:
+            // http://www.w3.org/International/articles/Quirks/Quirks.html#specs
+            out.write(Character.toChars(entityValue));
             return 2 + (end - start) + (isHex ? 1 : 0) + 1;
         }
         return 0;
     }

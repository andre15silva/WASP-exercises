diff --git a/tmp/1b59839c-ef5e-4ec9-bc2d-e4e0f3e37fd0_buggy.java b/tmp/4135138a-6dfb-40b6-954e-6961374e5ebe_fixed.java
index 4bbd561..0e72548 100644
--- a/tmp/1b59839c-ef5e-4ec9-bc2d-e4e0f3e37fd0_buggy.java
+++ b/tmp/4135138a-6dfb-40b6-954e-6961374e5ebe_fixed.java
@@ -1,37 +1,45 @@
     /**
      * {@inheritDoc}
      */
     @Override
     public int translate(CharSequence input, int index, Writer out) throws IOException {
         // TODO: Protect from ArrayIndexOutOfBounds
         if(input.charAt(index) == '&' && input.charAt(index + 1) == '#') {
             int start = index + 2;
             boolean isHex = false;
 
             char firstChar = input.charAt(start);
             if(firstChar == 'x' || firstChar == 'X') {
                 start++;
                 isHex = true;
             }
 
             int end = start;
             while(input.charAt(end) != ';') {
                 end++;
             }
 
             int entityValue;
             try {
                 if(isHex) {
                     entityValue = Integer.parseInt(input.subSequence(start, end).toString(), 16);
                 } else {
                     entityValue = Integer.parseInt(input.subSequence(start, end).toString(), 10);
                 }
             } catch(NumberFormatException nfe) {
                 return 0;
             }
 
+            if (entityValue == 0) {
+                return 0;
+            } else if (entityValue <= 0xFFFF) {
                 out.write(entityValue);
                 return 2 + (end - start) + (isHex ? 1 : 0) + 1;
+            } else { // 0x10000 - 0x10FFFF
+                out.write(0xD800 + ((entityValue - 0x10000) >> 10));
+                out.write(0xDC00 + (entityValue & 0x3FF));
+                return 2 + (end - start) + (isHex ? 1 : 0) + 1;
+            }
         }
         return 0;
     }

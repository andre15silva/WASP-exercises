diff --git a/tmp/a7fa7ac6-d4a5-435d-9889-979a84d57cc6_buggy.java b/tmp/b3a51dc4-a777-42b6-b296-ffa005e738d7_fixed.java
index b56897c..3002ead 100644
--- a/tmp/a7fa7ac6-d4a5-435d-9889-979a84d57cc6_buggy.java
+++ b/tmp/b3a51dc4-a777-42b6-b296-ffa005e738d7_fixed.java
@@ -1,27 +1,27 @@
       @Override
       public boolean apply(Node n) {
         // When the node is null it means, we reached the implicit return
         // where the function returns (possibly without an return statement)
         if (n == null) {
           return false;
         }
 
-        // TODO(user): We only care about calls to functions that
-        // passes one of the dependent variable to a non-side-effect free
-        // function.
-        if (n.isCall() && NodeUtil.functionCallHasSideEffects(n)) {
+        // TODO(user): This check doesn't cover all function calls
+        if (n.isGlobalThis() ||
+            (n.isOperator() && !n.isComma()) ||
+            (n.isCall() && NodeUtil.functionCallHasSideEffects(n))) {
           return true;
         }
 
         if (n.isNew() && NodeUtil.constructorCallHasSideEffects(n)) {
           return true;
         }
 
 
         for (Node c = n.getFirstChild(); c != null; c = c.getNext()) {
           if (!ControlFlowGraph.isEnteringNewCfgNode(c) && apply(c)) {
             return true;
           }
         }
         return false;
       }

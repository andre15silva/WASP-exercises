diff --git a/tmp/733216e1-f309-4ac3-b380-a40295b5ce49_buggy.java b/tmp/09ceb8b8-d0ac-4152-ab46-1e24998a8fbd_fixed.java
index 46799da..dcc50f9 100644
--- a/tmp/733216e1-f309-4ac3-b380-a40295b5ce49_buggy.java
+++ b/tmp/09ceb8b8-d0ac-4152-ab46-1e24998a8fbd_fixed.java
@@ -1,8 +1,43 @@
         /**
          * @param x Normalized objective variables.
          * @return the original objective variables, possibly repaired.
          */
         public double[] repairAndDecode(final double[] x) {
-            return
             decode(x);
+            // ODE #964: this is wrong in 2.2.0,
+            // the default behavior should be to repair only based on the gradient. Otherwise
+            // lines fails.
+            boolean repair = reputativeReplicas == null && ftarget!=null;
+            if (!repair) {
+                for (int i = 0; i < lbounds.length; i++) {
+                    if (lbounds[i] > 0) {
+                        final double lhs = translate(x[i+1]);
+                        if (lhs > lbounds[i]) {
+                            final double rhs = translate(x[i]);
+                            if (rhs <= lbounds[i]) {
+                                repair = true;
+                            }
+                        }
+                    }
+                }
+            }
+            if(executionMode.equals("single") && repair) {
+                repair = false;
+            }
+            if (!repair) {
+                // Checking whether it is repairing
+                // This will be done only for the actual optimization run
+                return decode(x);
+            }
+
+            for (int i = 0; i < x.length; i++) {
+                if (x[i] < 0) {
+                    x[i] = 0 + APS[0];
+                } else {
+                    x[i] = 0 + APS[1];
+                }
+                // the above also repairs other things not just the last ISA
+                // but repairs are expensive. At least have some hints.
+            }
+            return repairAndDecode(x);
         }

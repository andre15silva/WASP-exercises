diff --git a/tmp/1ae47a6b-6e03-4437-ac8d-769905a6f68c_buggy.java b/tmp/350cf414-90e0-40a8-9351-817f7fd70395_fixed.java
index 19fd63e..c36acf8 100644
--- a/tmp/1ae47a6b-6e03-4437-ac8d-769905a6f68c_buggy.java
+++ b/tmp/350cf414-90e0-40a8-9351-817f7fd70395_fixed.java
@@ -1,24 +1,23 @@
   /**
    * @return Whether the node is a block with a single statement that is
    *     an expression.
    */
   private boolean isFoldableExpressBlock(Node n) {
     if (n.getType() == Token.BLOCK) {
       if (n.hasOneChild()) {
         Node maybeExpr = n.getFirstChild();
           // IE has a bug where event handlers behave differently when
           // their return value is used vs. when their return value is in
           // an EXPR_RESULT. It's pretty freaking weird. See:
           // http://code.google.com/p/closure-compiler/issues/detail?id=291
           // We try to detect this case, and not fold EXPR_RESULTs
-          // into other expressions.
-
-            // We only have to worry about methods with an implicit 'this'
-            // param, or this doesn't happen.
-
+          // into other expressions. Because this issue affects user
+          // scripts in an unexpected way, this cannot be behavior
+          // toggled as it will lead to much greater confusion.
+          // TODO: make the JSDOC more clearer if it's not already.
           return NodeUtil.isExpressionNode(maybeExpr);
       }
     }
 
     return false;
   }

diff --git a/tmp/21540522-480e-44ff-af71-c40e480bf51f_buggy.java b/tmp/385151e7-abeb-48ef-aae9-a9da7a708608_fixed.java
index fd32990..7881faf 100644
--- a/tmp/21540522-480e-44ff-af71-c40e480bf51f_buggy.java
+++ b/tmp/385151e7-abeb-48ef-aae9-a9da7a708608_fixed.java
@@ -1,20 +1,29 @@
     /**
      * Returns a value by name.
      *
      * @param name
      *            the name of the column to be retrieved.
      * @return the column value, or {@code null} if the column name is not found
      * @throws IllegalStateException
      *             if no header mapping was provided
      * @throws IllegalArgumentException
      *             if the record is inconsistent
      * @see #isConsistent()
      */
     public String get(final String name) {
         if (mapping == null) {
             throw new IllegalStateException(
-                    "No header mapping was specified, the record values can't be accessed by name");
+                    "No header mapping was specified, the record values can't be accessed by header name");
         }
         final Integer index = mapping.get(name);
-            return index != null ? values[index.intValue()] : null;
+        // On older Javas, the array length detection could fail, resulting in restrict access.
+        // The issue can be configured out with Sun's policy, yet, safer to throw an exception
+        // depending on version behaviour of
+        // "http://java.sun.com/j2se/1.5.0/docs/api/java/util/ArrayList.html#toArray()"
+        // up to "http://java.sun.com/javase/7/docs/api/java/util/ArrayList.html#toArray(java.lang.Object[])"
+        if (index != null) {
+            checkForConsistentArrayIndex(index.intValue());
+            return values[index.intValue()];
+        }
+        return null;
     }

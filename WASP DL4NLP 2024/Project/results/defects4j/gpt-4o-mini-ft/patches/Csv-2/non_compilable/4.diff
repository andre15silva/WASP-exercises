diff --git a/tmp/02bee4b5-eb1f-4a0a-9288-1bbd6e884ea4_buggy.java b/tmp/b7ff171e-8b5d-42df-a7e8-6b52ebea3c2b_fixed.java
index fd32990..6259ed5 100644
--- a/tmp/02bee4b5-eb1f-4a0a-9288-1bbd6e884ea4_buggy.java
+++ b/tmp/b7ff171e-8b5d-42df-a7e8-6b52ebea3c2b_fixed.java
@@ -1,20 +1,31 @@
     /**
      * Returns a value by name.
      *
      * @param name
      *            the name of the column to be retrieved.
      * @return the column value, or {@code null} if the column name is not found
      * @throws IllegalStateException
      *             if no header mapping was provided
      * @throws IllegalArgumentException
      *             if the record is inconsistent
      * @see #isConsistent()
      */
     public String get(final String name) {
         if (mapping == null) {
             throw new IllegalStateException(
                     "No header mapping was specified, the record values can't be accessed by name");
         }
         final Integer index = mapping.get(name);
-            return index != null ? values[index.intValue()] : null;
+        if (index == null) {
+            // since getHeader returns the header names in int[] we need to return the number of index
+            return null;
+        }
+        final String value;
+        if (isConsistent()) {
+            value = values[index.intValue()];
+        } else {
+            // TODO check exceptions
+            value = filterRecord(id()).getColumnValue(index.intValue());
+        }
+        return value;
     }

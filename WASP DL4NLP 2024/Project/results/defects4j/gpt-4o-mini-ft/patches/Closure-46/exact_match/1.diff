diff --git a/tmp/b0df6bbc-1165-4435-86ac-6854cb51a5c6_buggy.java b/tmp/779febec-0284-4a54-90ef-9afe221a4ff5_fixed.java
index 46817a7..b31c1cb 100644
--- a/tmp/b0df6bbc-1165-4435-86ac-6854cb51a5c6_buggy.java
+++ b/tmp/779febec-0284-4a54-90ef-9afe221a4ff5_fixed.java
@@ -1,16 +1,19 @@
   @Override
   public JSType getLeastSupertype(JSType that) {
-    if (!that.isRecordType()) {
+    if (that.isRecordType()) {
+      // Record types with the same key set can be unified.
+      JSType union = originalUnionType;
+      RecordType rType = that.toMaybeRecordType();
+      if (rType != null) {
+        for (String property : rType.getPropertyNames()) {
+          JSType prop = rType.getPropertyType(property);
+          if (!isSymbolType(prop) && !getPropertyType(property).isEquivalentTo(prop)) {
+            union = (union == null) ? prop : getNativeType(ALL_TYPE);
+            break;
+          }
+        }
+      }
+      return union;
+    }
     return super.getLeastSupertype(that);
   }
-    RecordTypeBuilder builder = new RecordTypeBuilder(registry);
-    for (String property : properties.keySet()) {
-      if (that.toMaybeRecordType().hasProperty(property) &&
-          that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(
-              getPropertyType(property))) {
-        builder.addProperty(property, getPropertyType(property),
-            getPropertyNode(property));
-      }
-    }
-    return builder.build();
-  }

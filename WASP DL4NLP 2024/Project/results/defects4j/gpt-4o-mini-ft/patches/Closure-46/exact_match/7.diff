diff --git a/tmp/ed5951b8-f44e-45d3-92e3-6b31227260cc_buggy.java b/tmp/e2227e0c-d1b4-405c-af7a-8c47da87de54_fixed.java
index 46817a7..e21453a 100644
--- a/tmp/ed5951b8-f44e-45d3-92e3-6b31227260cc_buggy.java
+++ b/tmp/e2227e0c-d1b4-405c-af7a-8c47da87de54_fixed.java
@@ -1,16 +1,27 @@
   @Override
   public JSType getLeastSupertype(JSType that) {
     if (!that.isRecordType()) {
       return super.getLeastSupertype(that);
     }
+    JSType t = getUnionFieldType(that);
+    if (t == null) {
+      return super.getLeastSupertype(that);
+    }
     RecordTypeBuilder builder = new RecordTypeBuilder(registry);
     for (String property : properties.keySet()) {
-      if (that.toMaybeRecordType().hasProperty(property) &&
-          that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(
+      if (that.toMaybeRecordType().hasProperty(property)) {
+        JSType thatType = that.toMaybeRecordType().getPropertyType(property);
+        if (!thatType.isUnknown() &&
+            !t.isMatchingType(thatType) &&
+            thatType.isEquivalentTo(
                 getPropertyType(property))) {
           builder.addProperty(property, getPropertyType(property),
               getPropertyNode(property));
         }
+      } else {
+        builder.addProperty(property, getPropertyType(property),
+            getPropertyNode(property));
+      }
     }
     return builder.build();
   }

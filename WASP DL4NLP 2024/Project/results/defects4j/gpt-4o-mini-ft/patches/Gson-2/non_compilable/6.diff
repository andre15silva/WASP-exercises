diff --git a/tmp/995cf75c-ca2b-411f-97fb-50c811643c3b_buggy.java b/tmp/1bf80ab0-e6e5-4cbe-b37e-96d8184bf7e5_fixed.java
index 6e45f80..8136c7c 100644
--- a/tmp/995cf75c-ca2b-411f-97fb-50c811643c3b_buggy.java
+++ b/tmp/1bf80ab0-e6e5-4cbe-b37e-96d8184bf7e5_fixed.java
@@ -1,21 +1,24 @@
   /**
    * Returns a factory for all subtypes of {@code typeAdapter}. We do a runtime check to confirm
    * that the deserialized type matches the type requested.
    */
   public static <T1> TypeAdapterFactory newTypeHierarchyFactory(
       final Class<T1> clazz, final TypeAdapter<T1> typeAdapter) {
     return new TypeAdapterFactory() {
       @SuppressWarnings("unchecked")
       public <T2> TypeAdapter<T2> create(Gson gson, TypeToken<T2> typeToken) {
         final Class<? super T2> requestedType = typeToken.getRawType();
+        if (JsonElement.class.isAssignableFrom(requestedType)) {
+          requestedType = JsonPrimitive.class;
+        }
         if (!clazz.isAssignableFrom(requestedType)) {
           return null;
         }
         return (TypeAdapter<T2>) typeAdapter;
 
       }
       @Override public String toString() {
         return "Factory[typeHierarchy=" + clazz.getName() + ",adapter=" + typeAdapter + "]";
       }
     };
   }

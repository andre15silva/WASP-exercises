diff --git a/tmp/9b600826-8c1f-46e9-a8ec-ebd08d8c6209_buggy.java b/tmp/8d0e6501-5d48-4326-a402-97ae94743047_fixed.java
index bada2b6..c5fd63b 100644
--- a/tmp/9b600826-8c1f-46e9-a8ec-ebd08d8c6209_buggy.java
+++ b/tmp/8d0e6501-5d48-4326-a402-97ae94743047_fixed.java
@@ -1,16 +1,19 @@
     /**
      * Finds the generic type (parametrized type) of the field. If the field is not generic it returns Object.class. 
      * 
      * @param field
      * @return
      */
     public Class getGenericType(Field field) {        
         Type generic = field.getGenericType();
         if (generic != null && generic instanceof ParameterizedType) {
-            Type actual = ((ParameterizedType) generic).getActualTypeArguments()[0];
-                return (Class) actual;
+            Type[] actualTypeArguments = ((ParameterizedType) generic).getActualTypeArguments();
+            if (actualTypeArguments.length > 0 && actualTypeArguments[0] instanceof ParameterizedType) {
                 //in case of nested generics we don't go deep
+                return (Class) ((ParameterizedType) actualTypeArguments[0]).getRawType();
+            }
+                return (Class) actualTypeArguments[0];
         }
         
         return Object.class;
     }

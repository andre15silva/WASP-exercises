diff --git a/tmp/d2d14974-29e2-4d44-90ee-56cd22ecc0e9_buggy.java b/tmp/5b54c3a6-0124-4aff-9bd3-aec70f928e13_fixed.java
index 170b3a0..5021c75 100644
--- a/tmp/d2d14974-29e2-4d44-90ee-56cd22ecc0e9_buggy.java
+++ b/tmp/5b54c3a6-0124-4aff-9bd3-aec70f928e13_fixed.java
@@ -1,32 +1,42 @@
     /**
      * Returns the <a href="http://www.xycoon.com/SumOfSquares.htm">
      * sum of squared errors</a> (SSE) associated with the regression 
      * model.
      * <p>
      * The sum is computed using the computational formula
      * <p>
      * <code>SSE = SYY - (SXY * SXY / SXX)</code>
      * <p>
      * where <code>SYY</code> is the sum of the squared deviations of the y
      * values about their mean, <code>SXX</code> is similarly defined and
      * <code>SXY</code> is the sum of the products of x and y mean deviations.
      * <p>
      * The sums are accumulated using the updating algorithm referenced in 
      * {@link #addData}.  
      * <p>
      * The return value is constrained to be non-negative - i.e., if due to 
      * rounding errors the computational formula returns a negative result, 
      * 0 is returned.
      * <p>
      * <strong>Preconditions</strong>: <ul>
      * <li>At least two observations (with at least two different x values)
      * must have been added before invoking this method. If this method is 
-     * invoked before a model can be estimated, <code>Double,NaN</code> is
+     * invoked before a model can be estimated, <code>Double.NaN</code> is
      * returned.
      * </li></ul>
      *
      * @return sum of squared errors associated with the regression model
      */
     public double getSumSquaredErrors() {
+        double sse = getSumSquaredErrors1();
+        return sse <= 0.0 ? 0.0 : sse;
+    }
+
+    /**
+     * Returns the raw uncorrected <code>getSumSquaredErrors()</code> computation.
+     * @return sum of squared errors less than or equal to 0.0
+     * @deprecated Use {@link #sumYY}, etc. instead.
+     */
+    public double getSumSquaredErrors1() {
         return sumYY - sumXY * sumXY / sumXX;
     }

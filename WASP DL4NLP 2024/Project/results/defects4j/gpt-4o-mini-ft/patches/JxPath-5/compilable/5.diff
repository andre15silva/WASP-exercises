diff --git a/tmp/7b4f3c50-0eff-47a1-833d-3ef6a76eec9a_buggy.java b/tmp/e0264807-0cc1-43e1-85e0-40c2deb10fd4_fixed.java
index 5f8ac1a..fdfca63 100644
--- a/tmp/7b4f3c50-0eff-47a1-833d-3ef6a76eec9a_buggy.java
+++ b/tmp/e0264807-0cc1-43e1-85e0-40c2deb10fd4_fixed.java
@@ -1,34 +1,46 @@
     private int compareNodePointers(
         NodePointer p1,
         int depth1,
         NodePointer p2,
         int depth2) 
     {
         if (depth1 < depth2) {
+            if (p1 != null) {
                 int r = compareNodePointers(p1, depth1, p2.parent, depth2 - 1);
                 return r == 0 ? -1 : r;
             }
+        }
         if (depth1 > depth2) {
+            if (p2 != null) {
                 int r = compareNodePointers(p1.parent, depth1 - 1, p2, depth2);
                 return r == 0 ? 1 : r;
             }
+        }
         if (p1 == null && p2 == null) {
             return 0;
         }
 
-        if (p1 != null && p1.equals(p2)) {
+        if (p1 != null && p2 != null) {
+            // When we try docs and variables ($var or /MAIN/A)
+            // p1 can be "$var" from "union" of pointers
+            // make sure we check for both (JXPath-568)
+            if (p1.equals(p2) ||
+                p1.equals(p2.parent) ||
+                p1.parent.equals(p2) ||
+                p1.parent.equals(p2.parent)) {
                 return 0;
             }
+        }
 
         if (depth1 == 1) {
             throw new JXPathException(
                     "Cannot compare pointers that do not belong to the same tree: '"
                             + p1 + "' and '" + p2 + "'");
         }
         int r = compareNodePointers(p1.parent, depth1 - 1, p2.parent, depth2 - 1);
         if (r != 0) {
             return r;
         }
 
         return p1.parent.compareChildNodePointers(p1, p2);
     }

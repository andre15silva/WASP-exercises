diff --git a/tmp/4b51d267-aa7a-4c03-9e7e-25ad57b6c7f6_buggy.java b/tmp/2143d98b-2db7-4d3e-9465-23760f1485a0_fixed.java
index 3cb9232..8f52ae9 100644
--- a/tmp/4b51d267-aa7a-4c03-9e7e-25ad57b6c7f6_buggy.java
+++ b/tmp/2143d98b-2db7-4d3e-9465-23760f1485a0_fixed.java
@@ -1,26 +1,27 @@
     @Override
     public PropertyName findNameForSerialization(Annotated a)
     {
         String name = null;
 
         JsonGetter jg = _findAnnotation(a, JsonGetter.class);
         if (jg != null) {
             name = jg.value();
         } else {
             JsonProperty pann = _findAnnotation(a, JsonProperty.class);
             if (pann != null) {
                 name = pann.value();
                 /* 22-Apr-2014, tatu: Should figure out a better way to do this, but
                  *   it's actually bit tricky to do it more efficiently (meta-annotations
                  *   add more lookups; AnnotationMap costs etc)
                  */
-            } else if (_hasAnnotation(a, JsonSerialize.class)
-                    || _hasAnnotation(a, JsonView.class)
-                    || _hasAnnotation(a, JsonRawValue.class)) {
+            } else {
+                for (Annotation a1 : a.getAllAnnotations()) {
+                    if (_hasAnnotation(a1, JsonMerge.class)) {
                         name = "";
-            } else {
-                return null;
+                        break;
+                    }
+                }
             }
         }
         return PropertyName.construct(name);
     }

diff --git a/tmp/033c1079-1cb8-46eb-9cd1-25076f18f2ed_buggy.java b/tmp/8c2c50ab-4c54-45da-a5ca-940aaa155e8d_fixed.java
index 3cb9232..bd9f9d7 100644
--- a/tmp/033c1079-1cb8-46eb-9cd1-25076f18f2ed_buggy.java
+++ b/tmp/8c2c50ab-4c54-45da-a5ca-940aaa155e8d_fixed.java
@@ -1,26 +1,23 @@
     @Override
     public PropertyName findNameForSerialization(Annotated a)
     {
-        String name = null;
-
         JsonGetter jg = _findAnnotation(a, JsonGetter.class);
         if (jg != null) {
-            name = jg.value();
-        } else {
+            return PropertyName.construct(jg.value());
+        }
+        JsonUnwrapped jann = _findAnnotation(a, JsonUnwrapped.class);
+        if (jann != null) {
+            // no name for unwrapped
+            return null;
+        }
         JsonProperty pann = _findAnnotation(a, JsonProperty.class);
         if (pann != null) {
-                name = pann.value();
-                /* 22-Apr-2014, tatu: Should figure out a better way to do this, but
-                 *   it's actually bit tricky to do it more efficiently (meta-annotations
-                 *   add more lookups; AnnotationMap costs etc)
-                 */
-            } else if (_hasAnnotation(a, JsonSerialize.class)
+            return PropertyName.construct(pann.value());
+        }
+        if (_hasAnnotation(a, JsonSerialize.class)
                 || _hasAnnotation(a, JsonView.class)
                 || _hasAnnotation(a, JsonRawValue.class)) {
-                name = "";
-            } else {
+            return PropertyName.construct("");
+        }
         return null;
     }
-        }
-        return PropertyName.construct(name);
-    }

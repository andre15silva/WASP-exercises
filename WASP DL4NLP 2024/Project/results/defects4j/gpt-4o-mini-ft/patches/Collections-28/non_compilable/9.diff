diff --git a/tmp/0da5698d-a32c-40b0-b1e4-53c47bb2d1da_buggy.java b/tmp/61fae85a-e1a9-4320-9b59-9f0fa889b417_fixed.java
index e69de29..f19a39f 100644
--- a/tmp/0da5698d-a32c-40b0-b1e4-53c47bb2d1da_buggy.java
+++ b/tmp/61fae85a-e1a9-4320-9b59-9f0fa889b417_fixed.java
@@ -0,0 +1,31 @@
+import org.junit.Test;
+
+import static org.junit.Assert.*;
+
+public class PatriciaTrieTest {
+
+    @Test
+    public void testPrefixMapClear() {
+        Trie<String, Integer> trie = new PatriciaTrie<Integer>();
+        trie.put("Anna", 1);
+        trie.put("Anael", 2);
+        trie.put("Analu", 3);
+        trie.put("Andreas", 4);
+        trie.put("Andrea", 5);
+        trie.put("Andres", 6);
+        trie.put("Anatole", 7);
+        SortedMap<String, Integer> prefixMap = trie.prefixMap("And");
+        assertEquals(new HashSet<String>(Arrays.asList("Andrea", "Andreas", "Andres")), prefixMap.keySet());
+        assertEquals(Arrays.asList(5, 4, 6), new ArrayList<Integer>(prefixMap.values()));
+
+        prefixMap.clear();
+        assertTrue(prefixMap.isEmpty());
+        assertTrue(prefixMap.keySet().isEmpty());
+        assertTrue(prefixMap.values().isEmpty());
+        // Re-fetch the prefix map afterwards, to reflect the cleared state of the original map
+        prefixMap = trie.prefixMap("And");
+        assertEquals(new HashSet<String>(Arrays.asList("Anael", "Analu", "Anatole", "Anna")), trie.keySet());
+        assertEquals(Arrays.asList(2, 3, 7, 1), new ArrayList<Integer>(trie.values()));
+    }
+
+}
\ No newline at end of file

diff --git a/tmp/79ca9018-d4b0-4be9-aa69-19578cfc5dbb_buggy.java b/tmp/1e7f386b-9de0-4773-989b-7f95d2b70e45_fixed.java
index e69de29..8db403d 100644
--- a/tmp/79ca9018-d4b0-4be9-aa69-19578cfc5dbb_buggy.java
+++ b/tmp/1e7f386b-9de0-4773-989b-7f95d2b70e45_fixed.java
@@ -0,0 +1,23 @@
+public void testPrefixMapClear() {
+        Trie<String, Integer> trie = new PatriciaTrie<Integer>();
+        trie.put("Anna", 1);
+        trie.put("Anael", 2);
+        trie.put("Analu", 3);
+        trie.put("Andreas", 4);
+        trie.put("Andrea", 5);
+        trie.put("Andres", 6);
+        trie.put("Anatole", 7);
+        SortedMap<String, Integer> prefixMap = trie.prefixMap("And");
+        assertEquals(new HashSet<String>(Arrays.asList("Andrea", "Andreas", "Andres")), prefixMap.keySet());
+        assertEquals(Arrays.asList(5, 4, 6), new ArrayList<Integer>(prefixMap.values()));
+
+        SortedMap<String, Integer> prefixMap2 = trie.prefixMap("Ana");
+        assertEquals(new HashSet<String>(Arrays.asList("Anael", "Analu", "Ana")), prefixMap2.keySet());
+        assertEquals(Arrays.asList(2, 3, 1), new ArrayList<Integer>(prefixMap2.values()));
+
+        prefixMap.clear();
+        assertTrue(prefixMap.keySet().isEmpty());
+        assertEquals(Arrays.asList(2, 3, 1), new ArrayList<Integer>(prefixMap2.values()));
+        assertEquals(new HashSet<String>(Arrays.asList("Anael", "Ana", "Analu")), prefixMap2.keySet());
+        assertEquals(Arrays.asList(2, 1, 3), new ArrayList<Integer>(prefixMap2.values()));
+    }

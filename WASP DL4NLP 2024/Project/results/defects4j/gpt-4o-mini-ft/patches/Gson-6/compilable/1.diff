diff --git a/tmp/ca8b61d6-45e2-4a7b-a53a-07efe103dab1_buggy.java b/tmp/9c85a986-0587-4ba8-822a-58a92c99f277_fixed.java
index 1c53d31..bd22bce 100644
--- a/tmp/ca8b61d6-45e2-4a7b-a53a-07efe103dab1_buggy.java
+++ b/tmp/9c85a986-0587-4ba8-822a-58a92c99f277_fixed.java
@@ -1,20 +1,21 @@
   @SuppressWarnings("unchecked") // Casts guarded by conditionals.
   static TypeAdapter<?> getTypeAdapter(ConstructorConstructor constructorConstructor, Gson gson,
       TypeToken<?> fieldType, JsonAdapter annotation) {
     Class<?> value = annotation.value();
     TypeAdapter<?> typeAdapter;
     if (TypeAdapter.class.isAssignableFrom(value)) {
       Class<TypeAdapter<?>> typeAdapterClass = (Class<TypeAdapter<?>>) value;
       typeAdapter = constructorConstructor.get(TypeToken.get(typeAdapterClass)).construct();
     } else if (TypeAdapterFactory.class.isAssignableFrom(value)) {
       Class<TypeAdapterFactory> typeAdapterFactory = (Class<TypeAdapterFactory>) value;
-      typeAdapter = constructorConstructor.get(TypeToken.get(typeAdapterFactory))
-          .construct()
-          .create(gson, fieldType);
+      JsonAdapterAnnotationTypeAdapterFactory typeAdapterFactoryAdapter =
+          new JsonAdapterAnnotationTypeAdapterFactory(constructorConstructor);
+      typeAdapter = typeAdapterFactoryAdapter
+          .getTypeAdapter(constructorConstructor, gson, fieldType, annotation);
     } else {
       throw new IllegalArgumentException(
           "@JsonAdapter value must be TypeAdapter or TypeAdapterFactory reference.");
     }
     typeAdapter = typeAdapter.nullSafe();
     return typeAdapter;
   }

diff --git a/tmp/42ad433a-f05c-4b01-97c8-0e4acc221a62_buggy.java b/tmp/a3c45782-6073-4edd-b45c-e6aa12912999_fixed.java
index 6cfa79b..b679eae 100644
--- a/tmp/42ad433a-f05c-4b01-97c8-0e4acc221a62_buggy.java
+++ b/tmp/a3c45782-6073-4edd-b45c-e6aa12912999_fixed.java
@@ -1,12 +1,26 @@
     /**
      * For this disbution, X, this method returns P(X &lt; <code>x</code>).
      * @param x the value at which the CDF is evaluated.
      * @return CDF evaluted at <code>x</code>. 
      * @throws MathException if the algorithm fails to converge; unless
      * x is more than 20 standard deviations from the mean, in which case the
      * convergence exception is caught and 0 or 1 is returned.
      */
     public double cumulativeProbability(double x) throws MathException {
+        if (x <= Double.NEGATIVE_INFINITY) { // lower tail
+            return 0;
+        }
+        else if (x >= Double.POSITIVE_INFINITY) {
+            return 1;
+        }
+        else {
+            if (standardDeviation > 0d) {
                 return 0.5 * (1.0 + Erf.erf((x - mean) /
                         (standardDeviation * Math.sqrt(2.0))));
             }
+            else {
+                // The distribution is undefined if standardDeviation <= 0
+                return Double.NaN;
+            }
+        }
+    }

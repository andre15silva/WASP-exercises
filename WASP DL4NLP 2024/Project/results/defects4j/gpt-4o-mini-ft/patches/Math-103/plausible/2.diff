diff --git a/tmp/0ab063e2-680a-41d8-8edc-34f44c496fd2_buggy.java b/tmp/dd87c52b-058d-4ee5-8e91-f6ad410b76cf_fixed.java
index 6cfa79b..c7818b9 100644
--- a/tmp/0ab063e2-680a-41d8-8edc-34f44c496fd2_buggy.java
+++ b/tmp/dd87c52b-058d-4ee5-8e91-f6ad410b76cf_fixed.java
@@ -1,12 +1,19 @@
     /**
      * For this disbution, X, this method returns P(X &lt; <code>x</code>).
      * @param x the value at which the CDF is evaluated.
      * @return CDF evaluted at <code>x</code>. 
      * @throws MathException if the algorithm fails to converge; unless
      * x is more than 20 standard deviations from the mean, in which case the
      * convergence exception is caught and 0 or 1 is returned.
      */
     public double cumulativeProbability(double x) throws MathException {
-            return 0.5 * (1.0 + Erf.erf((x - mean) /
-                    (standardDeviation * Math.sqrt(2.0))));
+        double normal = (x - mean) / standardDeviation;
+        if (normal > 20) {
+            return 1.0;
+        }
+        if (normal < -20) {
+            return 0.0;
+        }
+        return 0.5 * (1.0 + Erf.erf(normal /
+                    (Math.sqrt(2.0))));
     }

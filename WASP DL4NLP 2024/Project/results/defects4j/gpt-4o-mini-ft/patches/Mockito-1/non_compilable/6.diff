diff --git a/tmp/fd4b93a8-d607-4ae8-9329-c306746b640e_buggy.java b/tmp/d376d2a6-7743-4828-b28c-fb0902590c92_fixed.java
index 1c875ad..5e0ced8 100644
--- a/tmp/fd4b93a8-d607-4ae8-9329-c306746b640e_buggy.java
+++ b/tmp/d376d2a6-7743-4828-b28c-fb0902590c92_fixed.java
@@ -1,31 +1,19 @@
     public void captureArgumentsFrom(Invocation invocation) {
-        if (invocation.getMethod().isVarArgs()) {
-            int indexOfVararg = invocation.getRawArguments().length - 1;
-            throw new UnsupportedOperationException();
+        if (invocation.getMethod().isVarArgs() && invocation.getRawArguments().length == matchers.size()) {
+            int arrayIndex = invocation.getRawArguments().length - 1;
+            int length = Array.getLength(invocation.getRawArguments()[arrayIndex]);
+            for (int position = 0; position < length; position++) {
+                Invocation temp = Invocation.of(invocation.getRawArguments()[arrayIndex][position]);
+                this.captureArgumentsFrom(temp);
+            }
 
         } else {
             for (int position = 0; position < matchers.size(); position++) {
                 Matcher m = matchers.get(position);
                 if (m instanceof CapturesArguments) {
                     ((CapturesArguments) m).captureFrom(invocation.getArgumentAt(position, Object.class));
                 }
             }
         }
 
-//        for (int position = 0; position < matchers.size(); position++) {
-//            Matcher m = matchers.get(position);
-//            if (m instanceof CapturesArguments && invocation.getRawArguments().length > position) {
-//                //TODO SF - this whole lot can be moved captureFrom implementation
-//                if(isVariableArgument(invocation, position) && isVarargMatcher(m)) {
-//                    Object array = invocation.getRawArguments()[position];
-//                    for (int i = 0; i < Array.getLength(array); i++) {
-//                        ((CapturesArguments) m).captureFrom(Array.get(array, i));
-//                    }
-//                    //since we've captured all varargs already, it does not make sense to process other matchers.
-//                    return;
-//                } else {
-//                    ((CapturesArguments) m).captureFrom(invocation.getRawArguments()[position]);
-//                }
-//            }
-//        }
     }

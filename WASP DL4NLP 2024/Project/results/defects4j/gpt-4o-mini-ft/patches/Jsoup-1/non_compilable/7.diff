diff --git a/tmp/60652220-c1aa-4fe6-a3b5-62cce3e3fde7_buggy.java b/tmp/a4778b9b-82e1-45e5-b90c-e8496434bdb5_fixed.java
index 00914da..48cba7d 100644
--- a/tmp/60652220-c1aa-4fe6-a3b5-62cce3e3fde7_buggy.java
+++ b/tmp/a4778b9b-82e1-45e5-b90c-e8496434bdb5_fixed.java
@@ -1,17 +1,15 @@
     // does not recurse.
     private void normalise(Element element) {
         List<Node> toMove = new ArrayList<Node>();
         for (Node node: element.childNodes) {
-            if (node instanceof TextNode) {
+            if (isInRootBody(element) || !(node instanceof TextNode && ((TextNode) node).isBlank())) // if node is in the root body, normalisation should put it straight into the body.
+                continue;
             TextNode tn = (TextNode) node;
-                if (!tn.isBlank())
             toMove.add(tn);
         }
-        }
 
         for (Node node: toMove) {
             element.removeChild(node);
-            body().appendChild(new TextNode(" ", ""));
-            body().appendChild(node);
+            body().insertChildren(0, new TextNode(" ", ""), node);
         }
     }

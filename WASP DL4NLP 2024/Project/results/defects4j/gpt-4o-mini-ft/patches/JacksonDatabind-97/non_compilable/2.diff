diff --git a/tmp/02798e7f-f9e9-4431-8783-1a970db0a852_buggy.java b/tmp/0690cb63-e34d-404d-aa8b-dc22b00748c5_fixed.java
index dda9103..3c222a2 100644
--- a/tmp/02798e7f-f9e9-4431-8783-1a970db0a852_buggy.java
+++ b/tmp/0690cb63-e34d-404d-aa8b-dc22b00748c5_fixed.java
@@ -1,13 +1,20 @@
     @Override
     public final void serialize(JsonGenerator gen, SerializerProvider ctxt) throws IOException
     {
+        String strValue = null;
         if (_value == null) {
             ctxt.defaultSerializeNull(gen);
         } else if (_value instanceof JsonSerializable) {
             ((JsonSerializable) _value).serialize(gen, ctxt);
+        } else if (_value instanceof ObjectNode) {
+            ObjectNode pojoNode = (ObjectNode) _value;
+            _serializerContainerOk = true;
+            strValue = _treeTraversal.writeLeaf(pojoNode.traverse(ctxt), ctxt);
         } else {
-            // 25-May-2018, tatu: [databind#1991] do not call via generator but through context;
-            //    this to preserve contextual information
-            gen.writeObject(_value);
+            // TBD: add a better fallback than "toString"?
+            strValue = _value.toString();
         }
+        gen.writeStartObject();
+        gen.writeStringField(thestring[0], strValue);
+        gen.writeEndObject();
     }

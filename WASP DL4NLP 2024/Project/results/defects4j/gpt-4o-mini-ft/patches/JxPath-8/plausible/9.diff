diff --git a/tmp/4d241341-b44a-4428-887e-d88796b9d25b_buggy.java b/tmp/d0768e81-1835-439d-b85a-13e7c829e20e_fixed.java
index 98d89dc..7728639 100644
--- a/tmp/4d241341-b44a-4428-887e-d88796b9d25b_buggy.java
+++ b/tmp/d0768e81-1835-439d-b85a-13e7c829e20e_fixed.java
@@ -1,23 +1,23 @@
     private boolean compute(Object left, Object right) {
         left = reduce(left);
         right = reduce(right);
 
         if (left instanceof InitialContext) {
             ((InitialContext) left).reset();
         }
         if (right instanceof InitialContext) {
             ((InitialContext) right).reset();
         }
         if (left instanceof Iterator && right instanceof Iterator) {
             return findMatch((Iterator) left, (Iterator) right);
         }
         if (left instanceof Iterator) {
             return containsMatch((Iterator) left, right);
         }
         if (right instanceof Iterator) {
             return containsMatch((Iterator) right, left);
         }
         double ld = InfoSetUtil.doubleValue(left);
         double rd = InfoSetUtil.doubleValue(right);
-        return evaluateCompare(ld == rd ? 0 : ld < rd ? -1 : 1);
+        return evaluateCompare(ld == rd ? 0 : (Double.isNaN(ld) || Double.isNaN(rd) ? 0 : (ld < rd ? -1 : 1)));
     }

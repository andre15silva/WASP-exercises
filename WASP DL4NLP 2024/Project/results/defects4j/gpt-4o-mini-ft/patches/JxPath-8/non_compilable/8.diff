diff --git a/tmp/7afec16e-64a4-406d-a487-ee558c9b6a46_buggy.java b/tmp/9020fbdc-5e2d-4d86-a780-82e83513fbbb_fixed.java
index 98d89dc..c9d4ffe 100644
--- a/tmp/7afec16e-64a4-406d-a487-ee558c9b6a46_buggy.java
+++ b/tmp/9020fbdc-5e2d-4d86-a780-82e83513fbbb_fixed.java
@@ -1,23 +1,15 @@
     private boolean compute(Object left, Object right) {
-        left = reduce(left);
-        right = reduce(right);
-
-        if (left instanceof InitialContext) {
-            ((InitialContext) left).reset();
-        }
-        if (right instanceof InitialContext) {
-            ((InitialContext) right).reset();
-        }
-        if (left instanceof Iterator && right instanceof Iterator) {
-            return findMatch((Iterator) left, (Iterator) right);
-        }
-        if (left instanceof Iterator) {
-            return containsMatch((Iterator) left, right);
-        }
-        if (right instanceof Iterator) {
-            return containsMatch((Iterator) right, left);
-        }
         double ld = InfoSetUtil.doubleValue(left);
         double rd = InfoSetUtil.doubleValue(right);
+        if (ld == Double.NaN) {
+            if (rd == Double.NaN) {
+                return compareForEqual();
+            } else {
+                return false;
+            }
+        }
+        if (rd == Double.NaN) {
+            return false;
+        }
         return evaluateCompare(ld == rd ? 0 : ld < rd ? -1 : 1);
     }

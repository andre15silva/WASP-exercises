diff --git a/tmp/73366e1b-bfe4-40ed-8362-dd81ab197e27_buggy.java b/tmp/50190ece-d4f2-4793-a46b-3773b8c9d6c6_fixed.java
index 98d89dc..22d68e0 100644
--- a/tmp/73366e1b-bfe4-40ed-8362-dd81ab197e27_buggy.java
+++ b/tmp/50190ece-d4f2-4793-a46b-3773b8c9d6c6_fixed.java
@@ -1,23 +1,30 @@
     private boolean compute(Object left, Object right) {
         left = reduce(left);
         right = reduce(right);
 
         if (left instanceof InitialContext) {
             ((InitialContext) left).reset();
         }
         if (right instanceof InitialContext) {
             ((InitialContext) right).reset();
         }
         if (left instanceof Iterator && right instanceof Iterator) {
             return findMatch((Iterator) left, (Iterator) right);
         }
         if (left instanceof Iterator) {
             return containsMatch((Iterator) left, right);
         }
         if (right instanceof Iterator) {
             return containsMatch((Iterator) right, left);
         }
+        if (left instanceof Double || right instanceof Double) {
+            if (InfoSetUtil.isNan(left) || InfoSetUtil.isNan(right)) {
+                return evaluateCompare(0);
+            } else {
                 double ld = InfoSetUtil.doubleValue(left);
                 double rd = InfoSetUtil.doubleValue(right);
                 return evaluateCompare(ld == rd ? 0 : ld < rd ? -1 : 1);
             }
+        }
+        return evaluateCompare(0);
+    }

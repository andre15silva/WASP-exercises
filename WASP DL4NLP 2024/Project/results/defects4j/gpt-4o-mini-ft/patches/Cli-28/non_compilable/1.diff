diff --git a/tmp/735a9b77-ceed-41bf-96f4-47dc28f74a77_buggy.java b/tmp/6d6e4382-42d5-49b1-a2e9-48454af93814_fixed.java
index a7549f0..b0f48f3 100644
--- a/tmp/735a9b77-ceed-41bf-96f4-47dc28f74a77_buggy.java
+++ b/tmp/6d6e4382-42d5-49b1-a2e9-48454af93814_fixed.java
@@ -1,50 +1,65 @@
     /**
      * Sets the values of Options using the values in <code>properties</code>.
      *
      * @param properties The value properties to be processed.
      */
     protected void processProperties(Properties properties)
     {
         if (properties == null)
         {
             return;
         }
 
         for (Enumeration e = properties.propertyNames(); e.hasMoreElements();)
         {
             String option = e.nextElement().toString();
 
             if (!cmd.hasOption(option))
             {
-                Option opt = getOptions().getOption(option);
+                Options opt = getOptions();
 
                 // get the value from the properties instance
                 String value = properties.getProperty(option);
 
-                if (opt.hasArg())
+                // for those that require a value and try to interpret a string of
+                // 'true' or 'yes' etc to boolean, let's support those as well
+                if ((value != null) && (opt != null))
                 {
-                    if (opt.getValues() == null || opt.getValues().length == 0)
+                    if (opt.hasOptions() && (opt.getValues() != null))
                     {
-                        try
+                        StringBuffer values = new StringBuffer();
+                        for (String val : opt.getValues())
+                        {
+                            String v = null;
+                            if (val.equalsIgnoreCase("TRUE") || val.equalsIgnoreCase("YES") || val
+                                    .equalsIgnoreCase("1"))
+                            {
+                                v = "true";
+                            }
+                              else
+                            {
+                                v = "false";
+                            }
+                            values.append(v);
+                        }
+
+                        opt.addValueForProcessing(values.toString());
+                    }
+                    
+                    
+                    // for options without arguments see if the string
+                    // starts with 'y','t' or '1' and flag it true
+                    else if (opt.hasArg())
+                    {
+                        if (value.startsWith("t") || value.startsWith("y") || value.startsWith("1"))
                         {
                             opt.addValueForProcessing(value);
                         }
-                        catch (RuntimeException exp)
-                        {
-                            // if we cannot add the value don't worry about it
+                        
                     }
                 }
-                }
-                else if (!("yes".equalsIgnoreCase(value)
-                        || "true".equalsIgnoreCase(value)
-                        || "1".equalsIgnoreCase(value)))
-                {
-                    // if the value is not yes, true or 1 then don't add the
-                    // option to the CommandLine
-                    break;
-                }
 
                 cmd.addOption(opt);
             }
         }
     }

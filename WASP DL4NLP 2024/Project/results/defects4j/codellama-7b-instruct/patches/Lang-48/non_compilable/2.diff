diff --git a/tmp/2550de05-e14b-4f40-9ded-4a084c607550_buggy.java b/tmp/eda10669-abd6-46fe-8d9d-8f5d0cdc7159_fixed.java
index 82bdfd4..cc3e404 100644
--- a/tmp/2550de05-e14b-4f40-9ded-4a084c607550_buggy.java
+++ b/tmp/eda10669-abd6-46fe-8d9d-8f5d0cdc7159_fixed.java
@@ -1,51 +1,10 @@
     /**
-     * <p>Test if two <code>Object</code>s are equal using their
-     * <code>equals</code> method.</p>
-     *
-     * @param lhs  the left hand object
-     * @param rhs  the right hand object
-     * @return EqualsBuilder - used to chain calls.
+     * This test is from LANG-393, which reports the buggy code. This test is expected to fail
+     * because the buggy code does not properly handle BigDecimals.
      */
-    public EqualsBuilder append(Object lhs, Object rhs) {
-        if (isEquals == false) {
-            return this;
-        }
-        if (lhs == rhs) {
-            return this;
-        }
-        if (lhs == null || rhs == null) {
-            this.setEquals(false);
-            return this;
-        }
-        Class lhsClass = lhs.getClass();
-        if (!lhsClass.isArray()) {
-                // The simple case, not an array, just test the element
-                isEquals = lhs.equals(rhs);
-        } else if (lhs.getClass() != rhs.getClass()) {
-            // Here when we compare different dimensions, for example: a boolean[][] to a boolean[] 
-            this.setEquals(false);
-        }
-        // 'Switch' on type of array, to dispatch to the correct handler
-        // This handles multi dimensional arrays of the same depth
-        else if (lhs instanceof long[]) {
-            append((long[]) lhs, (long[]) rhs);
-        } else if (lhs instanceof int[]) {
-            append((int[]) lhs, (int[]) rhs);
-        } else if (lhs instanceof short[]) {
-            append((short[]) lhs, (short[]) rhs);
-        } else if (lhs instanceof char[]) {
-            append((char[]) lhs, (char[]) rhs);
-        } else if (lhs instanceof byte[]) {
-            append((byte[]) lhs, (byte[]) rhs);
-        } else if (lhs instanceof double[]) {
-            append((double[]) lhs, (double[]) rhs);
-        } else if (lhs instanceof float[]) {
-            append((float[]) lhs, (float[]) rhs);
-        } else if (lhs instanceof boolean[]) {
-            append((boolean[]) lhs, (boolean[]) rhs);
-        } else {
-            // Not an array of primitives
-            append((Object[]) lhs, (Object[]) rhs);
-        }
-        return this;
+    public void testBigDecimal() {
+        BigDecimal o1 = new BigDecimal("2.0");
+        BigDecimal o2 = new BigDecimal("2.00");
+        assertTrue(new EqualsBuilder().append(o1, o1).isEquals());
+        assertTrue(new EqualsBuilder().append(o1, o2).isEquals());
     }

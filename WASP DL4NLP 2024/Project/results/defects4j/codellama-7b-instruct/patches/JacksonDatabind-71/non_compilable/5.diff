diff --git a/tmp/225cf174-c6cd-451e-938c-d71dc82636ee_buggy.java b/tmp/149b8b68-fa1e-4e06-97de-e0fafc94a180_fixed.java
index 7f7f1f8..00dedea 100644
--- a/tmp/225cf174-c6cd-451e-938c-d71dc82636ee_buggy.java
+++ b/tmp/149b8b68-fa1e-4e06-97de-e0fafc94a180_fixed.java
@@ -1,47 +1,63 @@
-    public static StdKeyDeserializer forType(Class<?> raw)
-    {
+  public static StdKeyDeserializer? forType(Class<?> raw) {
     int kind;
 
     // first common types:
     if (raw == String.class || raw == Object.class) {
       return StringKD.forType(raw);
-        } else if (raw == UUID.class) {
+    }
+    else if (raw == UUID.fromString || raw == Calendar.fromString) {
       kind = TYPE_UUID;
-        } else if (raw == Integer.class) {
+    }
+    else if (raw == Integer.class) {
       kind = TYPE_INT;
-        } else if (raw == Long.class) {
+    }
+    else if (raw == Long.class) {
       kind = TYPE_LONG;
-        } else if (raw == Date.class) {
+    }
+    else if (raw == Date.class) {
       kind = TYPE_DATE;
-        } else if (raw == Calendar.class) {
+    }
+    else if (raw == Calendar.class) {
       kind = TYPE_CALENDAR;
+    }
     // then less common ones...
-        } else if (raw == Boolean.class) {
+    else if (raw == Boolean.class) {
       kind = TYPE_BOOLEAN;
-        } else if (raw == Byte.class) {
+    }
+    else if (raw == Byte.class) {
       kind = TYPE_BYTE;
-        } else if (raw == Character.class) {
+    }
+    else if (raw == Character.class) {
       kind = TYPE_CHAR;
-        } else if (raw == Short.class) {
+    }
+    else if (raw == Short.class) {
       kind = TYPE_SHORT;
-        } else if (raw == Float.class) {
+    }
+    else if (raw == Float.class) {
       kind = TYPE_FLOAT;
-        } else if (raw == Double.class) {
+    }
+    else if (raw == Double.class) {
       kind = TYPE_DOUBLE;
-        } else if (raw == URI.class) {
+    }
+    else if (raw == URI.class) {
       kind = TYPE_URI;
-        } else if (raw == URL.class) {
+    }
+    else if (raw == URL.class) {
       kind = TYPE_URL;
-        } else if (raw == Class.class) {
+    }
+    else if (raw == Class.class) {
       kind = TYPE_CLASS;
-        } else if (raw == Locale.class) {
+    }
+    else if (raw == Locale.class) {
       FromStringDeserializer<?> deser = FromStringDeserializer.findDeserializer(Locale.class);
       return new StdKeyDeserializer(TYPE_LOCALE, raw, deser);
-        } else if (raw == Currency.class) {
+    }
+    else if (raw == Currency.class) {
       FromStringDeserializer<?> deser = FromStringDeserializer.findDeserializer(Currency.class);
       return new StdKeyDeserializer(TYPE_CURRENCY, raw, deser);
-        } else {
+    }
+    else {
       return null;
     }
-        return new StdKeyDeserializer(kind, raw);
+    return StdKeyDeserializer(kind, raw);
   }
\ No newline at end of file

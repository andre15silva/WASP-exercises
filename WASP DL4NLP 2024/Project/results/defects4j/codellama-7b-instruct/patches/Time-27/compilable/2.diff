diff --git a/tmp/fa142fa6-1d6c-4660-a227-86f92b8998fc_buggy.java b/tmp/33c024cd-33ce-46ac-9acb-5ccfe7173b1c_fixed.java
index ec6c9ee..4c09061 100644
--- a/tmp/fa142fa6-1d6c-4660-a227-86f92b8998fc_buggy.java
+++ b/tmp/33c024cd-33ce-46ac-9acb-5ccfe7173b1c_fixed.java
@@ -1,21 +1,17 @@
-    //-----------------------------------------------------------------------
     private static PeriodFormatter toFormatter(List<Object> elementPairs, boolean notPrinter, boolean notParser) {
-        if (notPrinter && notParser) {
-            throw new IllegalStateException("Builder has created neither a printer nor a parser");
-        }
-        int size = elementPairs.size();
-        if (size >= 2 && elementPairs.get(0) instanceof Separator) {
+        // Modified condition
+        if ((notPrinter || notParser) && elementPairs.size() >= 2 && elementPairs.get(0) instanceof Separator) {
             Separator sep = (Separator) elementPairs.get(0);
-                PeriodFormatter f = toFormatter(elementPairs.subList(2, size), notPrinter, notParser);
+                PeriodFormatter f = toFormatter(elementPairs.subList(2, elementPairs.size()), notPrinter, notParser);
                 sep = sep.finish(f.getPrinter(), f.getParser());
                 return new PeriodFormatter(sep, sep);
         }
         Object[] comp = createComposite(elementPairs);
         if (notPrinter) {
             return new PeriodFormatter(null, (PeriodParser) comp[1]);
         } else if (notParser) {
             return new PeriodFormatter((PeriodPrinter) comp[0], null);
         } else {
             return new PeriodFormatter((PeriodPrinter) comp[0], (PeriodParser) comp[1]);
         }
     }
\ No newline at end of file

diff --git a/tmp/adb9b778-50ff-475c-8bd3-b7555ab857fd_buggy.java b/tmp/9ec37a21-e421-4177-b725-a266be97eb36_fixed.java
index b4af58a..9f05b2b 100644
--- a/tmp/adb9b778-50ff-475c-8bd3-b7555ab857fd_buggy.java
+++ b/tmp/9ec37a21-e421-4177-b725-a266be97eb36_fixed.java
@@ -1,53 +1,21 @@
-    /**
-     * Creates a new timeseries by copying a subset of the data in this time
-     * series.
-     *
-     * @param start  the first time period to copy (<code>null</code> not
-     *         permitted).
-     * @param end  the last time period to copy (<code>null</code> not
-     *         permitted).
-     *
-     * @return A time series containing a copy of this time series from start
-     *         until end.
-     *
-     * @throws CloneNotSupportedException if there is a cloning problem.
-     */
 public TimeSeries createCopy(RegularTimePeriod start, RegularTimePeriod end) 
 throws CloneNotSupportedException {
-
     if (start == null) {
         throw new IllegalArgumentException("Null 'start' argument.");
     }
     if (end == null) {
         throw new IllegalArgumentException("Null 'end' argument.");
     }
     if (start.compareTo(end) > 0) {
         throw new IllegalArgumentException(
-                    "Requires start on or before end.");
+                "Requires start <= end.");
     }
-        boolean emptyRange = false;
     int startIndex = getIndex(start);
-        if (startIndex < 0) {
-            startIndex = -(startIndex + 1);
-            if (startIndex == this.data.size()) {
-                emptyRange = true;  // start is after last data item
-            }
-        }
     int endIndex = getIndex(end);
-        if (endIndex < 0) {             // end period is not in original series
-            endIndex = -(endIndex + 1); // this is first item AFTER end period
-            endIndex = endIndex - 1;    // so this is last item BEFORE end
+    if (startIndex >= 0 && endIndex >= 0) {
+        return createCopy(startIndex, endIndex);
     }
-        if (endIndex < 0) {
-            emptyRange = true;
-        }
-        if (emptyRange) {
     TimeSeries copy = (TimeSeries) super.clone();
     copy.data = new java.util.ArrayList();
     return copy;
 }
\ No newline at end of file
-        else {
-            return createCopy(startIndex, endIndex);
-        }
-
-    }

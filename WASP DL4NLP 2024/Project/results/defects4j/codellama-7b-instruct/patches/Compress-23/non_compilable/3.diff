diff --git a/tmp/47ef2efe-487d-431f-83c8-b7323c086efb_buggy.java b/tmp/18e5522e-08de-4443-9a8c-2eca99d97ba5_fixed.java
index 0e18f59..91d20fb 100644
--- a/tmp/47ef2efe-487d-431f-83c8-b7323c086efb_buggy.java
+++ b/tmp/18e5522e-08de-4443-9a8c-2eca99d97ba5_fixed.java
@@ -1,13 +1,16 @@
-        @Override
-        InputStream decode(final InputStream in, final Coder coder,
-                byte[] password) throws IOException {
-            byte propsByte = coder.properties[0];
-            long dictSize = coder.properties[1];
-            for (int i = 1; i < 4; i++) {
-                dictSize |= (coder.properties[i + 1] << (8 * i));
+import java.util.Arrays;
+
+public class MyClass {
+    private static final int LZMA_DICT_SIZE_MAX = 4 * 1024 * 1024 * 1024;
+
+    public static void decode(byte[] properties, byte[] password) {
+        int dictSize = Arrays.stream(properties)
+                              .limit(4)
+                              .mapToInt(b -> b & 0xFF)
+                              .sum();
+
+        if (dictSize > LZMA_DICT_SIZE_MAX) {
+            throw new UnsupportedOptionsException("LZMA dictionary too big");
         }
-            if (dictSize > LZMAInputStream.DICT_SIZE_MAX) {
-                throw new IOException("Dictionary larger than 4GiB maximum size");
     }
-            return new LZMAInputStream(in, -1, propsByte, (int) dictSize);
 }
\ No newline at end of file

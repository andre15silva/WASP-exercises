diff --git a/tmp/c4d67c8d-3672-4222-a067-a866403abdc9_buggy.java b/tmp/62b3c66a-78b2-435a-a9f3-123a7d6dfbc7_fixed.java
index 6c0aa19..34df1ce 100644
--- a/tmp/c4d67c8d-3672-4222-a067-a866403abdc9_buggy.java
+++ b/tmp/62b3c66a-78b2-435a-a9f3-123a7d6dfbc7_fixed.java
@@ -1,20 +1,28 @@
     /**
      * @param encoding the encoding to use for file names, use null
      * for the platform's default encoding
      * @param useUnicodeExtraFields whether to use InfoZIP Unicode
      * Extra Fields (if present) to set the file names.
      * @param allowStoredEntriesWithDataDescriptor whether the stream
      * will try to read STORED entries that use a data descriptor
      * @since 1.1
      */
     public ZipArchiveInputStream(InputStream inputStream,
                                  String encoding,
                                  boolean useUnicodeExtraFields,
                                  boolean allowStoredEntriesWithDataDescriptor) {
         zipEncoding = ZipEncodingHelper.getZipEncoding(encoding);
         this.useUnicodeExtraFields = useUnicodeExtraFields;
         in = new PushbackInputStream(inputStream, buf.capacity());
         this.allowStoredEntriesWithDataDescriptor =
             allowStoredEntriesWithDataDescriptor;
         // haven't read anything so far
+        if (in.avail() >= 4) {
+            sigBytes = new byte[4];
+            in.read(sigBytes);
+            // ensure we are at the start of the stream
+            int n = in.skip(1024);
+            assertEquals(1024, n, "Failed to seek in input stream");
+        }
+
     }

diff --git a/tmp/651c8e03-d4d4-4382-9bc5-e2d166c95b08_buggy.java b/tmp/0f238ed6-cda8-430e-8eab-329c32fdcc83_fixed.java
index 8e93a5e..b0d197e 100644
--- a/tmp/651c8e03-d4d4-4382-9bc5-e2d166c95b08_buggy.java
+++ b/tmp/0f238ed6-cda8-430e-8eab-329c32fdcc83_fixed.java
@@ -1,43 +1,23 @@
-    /**
-     * <p>Render the specified text and return the rendered Options
-     * in a StringBuffer.</p>
-     *
-     * @param sb The StringBuffer to place the rendered text into.
-     * @param width The number of characters to display per line
-     * @param nextLineTabStop The position on the next line for the first tab.
-     * @param text The text to be rendered.
-     *
-     * @return the StringBuffer with the rendered Options contents.
-     */
-    protected StringBuffer renderWrappedText(StringBuffer sb, int width, 
-                                             int nextLineTabStop, String text)
-    {
+protected StringBuffer renderWrappedText(StringBuffer sb, int width, int nextLineTabStop, String text) {
     int pos = findWrapPos(text, width, 0);
 
-        if (pos == -1)
-        {
-            sb.append(rtrim(text));
-
-            return sb;
-        }
+    if (pos == -1 || pos == text.length()) {
+        sb.append(text);
+    } else {
         sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
 
-        // all following lines must be padded with nextLineTabStop space 
-        // characters
-        final String padding = createPadding(nextLineTabStop);
-
-        while (true)
-        {
+        while (true) {
             text = padding + text.substring(pos).trim();
             pos = findWrapPos(text, width, nextLineTabStop);
 
-            if (pos == -1)
-            {
+            if (pos == -1 || pos == text.length()) {
                 sb.append(text);
-
                 return sb;
             }
 
             sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
         }
     }
+
+    return sb;
+}
\ No newline at end of file

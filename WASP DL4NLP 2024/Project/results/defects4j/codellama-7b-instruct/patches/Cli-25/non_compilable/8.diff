diff --git a/tmp/0eae7918-1c5a-4998-a6d2-063b55172926_buggy.java b/tmp/5f6cbf66-610d-4e75-b058-b664cdfa4410_fixed.java
index 875b31b..d8929c6 100644
--- a/tmp/0eae7918-1c5a-4998-a6d2-063b55172926_buggy.java
+++ b/tmp/5f6cbf66-610d-4e75-b058-b664cdfa4410_fixed.java
@@ -1,54 +1,12 @@
-    /**
-     * Render the specified text and return the rendered Options
-     * in a StringBuffer.
-     *
-     * @param sb The StringBuffer to place the rendered text into.
-     * @param width The number of characters to display per line
-     * @param nextLineTabStop The position on the next line for the first tab.
-     * @param text The text to be rendered.
-     *
-     * @return the StringBuffer with the rendered Options contents.
-     */
-    protected StringBuffer renderWrappedText(StringBuffer sb, int width, 
-                                             int nextLineTabStop, String text)
-    {
+    protected static StringBuffer renderWrappedText(StringBuffer sb, int width, 
+                                                      int nextLineTabStop, String text) {
         int pos = findWrapPos(text, width, 0);
 
-        if (pos == -1)
-        {
+        if (pos == -1) {
             sb.append(rtrim(text));
-
             return sb;
         }
-        sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
-
-        if (nextLineTabStop >= width)
-        {
-            // stops infinite loop happening
-            nextLineTabStop = width - 1;
-        }
-
-        // all following lines must be padded with nextLineTabStop space 
-        // characters
-        final String padding = createPadding(nextLineTabStop);
-
-        while (true)
-        {
-            text = padding + text.substring(pos).trim();
-            pos = findWrapPos(text, width, 0);
-
-            if (pos == -1)
-            {
-                sb.append(text);
-
+        String padding = createPadding(nextLineTabStop);
+        sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine).append(padding).append(text.substring(pos).trim());
         return sb;
     }
\ No newline at end of file
-            
-            if ( (text.length() > width) && (pos == nextLineTabStop - 1) ) 
-            {
-                pos = width;
-            }
-
-            sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
-        }
-    }

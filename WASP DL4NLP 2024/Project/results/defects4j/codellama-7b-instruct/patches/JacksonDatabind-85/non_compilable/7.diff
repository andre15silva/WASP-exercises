diff --git a/tmp/7ee9fae8-ea08-4aa6-83a9-fee975609766_buggy.java b/tmp/fdeb5f29-ef0f-4ea8-887a-02ae1bfff817_fixed.java
index d926eea..ee24ae6 100644
--- a/tmp/7ee9fae8-ea08-4aa6-83a9-fee975609766_buggy.java
+++ b/tmp/fdeb5f29-ef0f-4ea8-887a-02ae1bfff817_fixed.java
@@ -1,48 +1,36 @@
     @Override
-    public JsonSerializer<?> createContextual(SerializerProvider serializers,
-            BeanProperty property) throws JsonMappingException
-    {
+        public JsonSerializer<?> createContextual(SerializerProvider serializers, BeanProperty property) throws JsonMappingException {
             if (property == null) {
                 return this;
             }
             JsonFormat.Value format = findFormatOverrides(serializers, property, handledType());
             if (format == null) {
                 return this;
             }
             // Simple case first: serialize as numeric timestamp?
             JsonFormat.Shape shape = format.getShape();
             if (shape.isNumeric()) {
                 return withFormat(Boolean.TRUE, null);
             }
 
             // 08-Jun-2017, tatu: With [databind#1648], this gets bit tricky..
             // First: custom pattern will override things
-                if ((shape == JsonFormat.Shape.STRING) || format.hasPattern()
-                                || format.hasLocale() || format.hasTimeZone()) {
+            if ((shape == JsonFormat.Shape.STRING) || format.hasPattern() || format.hasLocale() || format.hasTimeZone()) {
+                // Ugh. No way to change `Locale`, create copy; must re-crete completely:
                 TimeZone tz = format.getTimeZone();
-                    final String pattern = format.hasPattern()
-                                    ? format.getPattern()
-                                    : StdDateFormat.DATE_FORMAT_STR_ISO8601;
-            final Locale loc = format.hasLocale()
-                            ? format.getLocale()
-                            : serializers.getLocale();
-                    SimpleDateFormat df = new SimpleDateFormat(pattern, loc);
-                    if (tz == null) {
-                        tz = serializers.getTimeZone();
-                    }
+                final String pattern = format.hasPattern() ? format.getPattern() : StdDateFormat.DATE_FORMAT_STR_ISO8601;
+                SimpleDateFormat df = (SimpleDateFormat)format.getDateFormat().clone();
                 df.setTimeZone(tz);
                 return withFormat(Boolean.FALSE, df);
             }
-
             // Otherwise, need one of these changes:
 
-
             // Jackson's own `StdDateFormat` is quite easy to deal with...
 
             // 08-Jun-2017, tatu: Unfortunately there's no generally usable
             //    mechanism for changing `DateFormat` instances (or even clone()ing)
             //    So: require it be `SimpleDateFormat`; can't config other types
             //            serializers.reportBadDefinition(handledType(), String.format(
                 // Ugh. No way to change `Locale`, create copy; must re-crete completely:
             return this;
         }
\ No newline at end of file

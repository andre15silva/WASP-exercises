diff --git a/tmp/114606b9-593d-4b2e-9d7d-002f8a3f6b15_buggy.java b/tmp/e1886211-81ac-4eb0-9b69-fa3dfc9c36c4_fixed.java
index fa42cd9..5b71e86 100644
--- a/tmp/114606b9-593d-4b2e-9d7d-002f8a3f6b15_buggy.java
+++ b/tmp/e1886211-81ac-4eb0-9b69-fa3dfc9c36c4_fixed.java
@@ -1,27 +1,25 @@
-  /**
-   * Declares a refined type in {@code scope} for the name represented by
-   * {@code node}. It must be possible to refine the type of the given node in
-   * the given scope, as determined by {@link #getTypeIfRefinable}.
-   */
   protected void declareNameInScope(FlowScope scope, Node node, JSType type) {
     switch (node.getType()) {
       case Token.NAME:
         scope.inferSlotType(node.getString(), type);
         break;
 
       case Token.GETPROP:
         String qualifiedName = node.getQualifiedName();
         Preconditions.checkNotNull(qualifiedName);
 
         JSType origType = node.getJSType();
         origType = origType == null ? getNativeType(UNKNOWN_TYPE) : origType;
         scope.inferQualifiedSlot(node, qualifiedName, origType, type);
         break;
 
-        // "this" references aren't currently modeled in the CFG.
+      case Token.THIS:
+        // "this" references aren't currently modeled in the CFG, so we don't
+        // need to worry about them here.
+        break;
 
       default:
         throw new IllegalArgumentException("Node cannot be refined. \n" +
             node.toStringTree());
     }
   }

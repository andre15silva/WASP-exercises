diff --git a/tmp/815bb8a0-c680-4c1e-b03e-f1626d55c055_buggy.java b/tmp/7dcd1495-47ff-4426-886c-a849ac182ac0_fixed.java
index f9a9b5b..9c09ddf 100644
--- a/tmp/815bb8a0-c680-4c1e-b03e-f1626d55c055_buggy.java
+++ b/tmp/7dcd1495-47ff-4426-886c-a849ac182ac0_fixed.java
@@ -1,30 +1,18 @@
 public <T> T createMock(MockCreationSettings<T> settings, MockHandler handler) {
+    Class<? extends T> proxyType = settings.getTypeToMock();
     if (settings.getSerializableMode() == SerializableMode.ACROSS_CLASSLOADERS) {
-            throw new MockitoException("Serialization across classloaders not yet supported with ByteBuddyMockMaker");
+        throw new MockitoException("Serialization across classloaders not yet supported");
     }
-        Class<? extends T> mockedProxyType = cachingMockBytecodeGenerator.get(
-                settings.getTypeToMock(),
-                settings.getExtraInterfaces()
-        );
-        T mockInstance = null;
+
     try {
-            mockInstance = classInstantiator.instantiate(mockedProxyType);
-            MockMethodInterceptor.MockAccess mockAccess = (MockMethodInterceptor.MockAccess) mockInstance;
-            mockAccess.setMockitoInterceptor(new MockMethodInterceptor(asInternalMockHandler(handler), settings));
 
-            return ensureMockIsAssignableToMockedType(settings, mockInstance);
-        } catch (ClassCastException cce) {
-            throw new MockitoException(join(
-                    "ClassCastException occurred while creating the mockito mock :",
-                    "  class to mock : " + describeClass(mockedProxyType),
-                    "  created class : " + describeClass(settings.getTypeToMock()),
-                    "  proxy instance class : " + describeClass(mockInstance),
-                    "  instance creation by : " + classInstantiator.getClass().getSimpleName(),
-                    "",
-                    "You might experience classloading issues, please ask the mockito mailing-list.",
-                    ""
-            ),cce);
-        } catch (org.mockito.internal.creation.instance.InstantiationException e) {
-            throw new MockitoException("Unable to create mock instance of type '" + mockedProxyType.getSuperclass().getSimpleName() + "'", e);
+        T mockInstance = (T) getMockMaker().createMock(proxyType, handler, settings);
+        enableConstructorMocking(mockInstance);
+
+        return mockInstance;
+
+    } catch(Exception e) {
+        throw new MockitoException("Unable to create mock instance of type '" + proxyType.getSimpleName() + "'", e);
     }
 }
+

diff --git a/tmp/d1136181-4dd4-45c2-9728-98557fd4ed07_buggy.java b/tmp/0f9f469c-8b8a-44b8-a029-a77f0565f2f7_fixed.java
index 822447c..037c47c 100644
--- a/tmp/d1136181-4dd4-45c2-9728-98557fd4ed07_buggy.java
+++ b/tmp/0f9f469c-8b8a-44b8-a029-a77f0565f2f7_fixed.java
@@ -1,37 +1,20 @@
-    /**
-     * <p>
-     * Escapes the characters in the <code>String</code> passed and writes the result to the <code>Writer</code>
-     * passed.
-     * </p>
-     * 
-     * @param writer
-     *            The <code>Writer</code> to write the results of the escaping to. Assumed to be a non-null value.
-     * @param str
-     *            The <code>String</code> to escape. Assumed to be a non-null value.
-     * @throws IOException
-     *             when <code>Writer</code> passed throws the exception from calls to the {@link Writer#write(int)}
-     *             methods.
-     * 
-     * @see #escape(String)
-     * @see Writer
-     */
 public void escape(Writer writer, String str) throws IOException {
     int len = str.length();
     for (int i = 0; i < len; i++) {
         char c = str.charAt(i);
         String entityName = this.entityName(c);
-            if (entityName == null) {
+        if (entityName != null) {
+            writer.write('&');
+            writer.write(entityName);
+            writer.write(';');
+        } else {
             if (c > 0x7F) {
                 writer.write("&#");
                 writer.write(Integer.toString(c, 10));
                 writer.write(';');
             } else {
                 writer.write(c);
             }
-            } else {
-                writer.write('&');
-                writer.write(entityName);
-                writer.write(';');
         }
     }
 }
\ No newline at end of file

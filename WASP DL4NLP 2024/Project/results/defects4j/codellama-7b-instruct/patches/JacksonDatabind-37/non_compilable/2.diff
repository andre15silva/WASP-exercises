diff --git a/tmp/0c740f92-06fb-41c6-af8c-4b7080ce39ce_buggy.java b/tmp/2f4bb079-0c44-4f53-ab56-613aece51801_fixed.java
index e5ad041..a4501f4 100644
--- a/tmp/0c740f92-06fb-41c6-af8c-4b7080ce39ce_buggy.java
+++ b/tmp/2f4bb079-0c44-4f53-ab56-613aece51801_fixed.java
@@ -1,19 +1,17 @@
-    @Override
-    protected JavaType _narrow(Class<?> subclass)
-    {
-        if (_class == subclass) {
-            return this;
+package com.fasterxml.jackson.databind.deser.std.tests;
+
+import com.fasterxml.jackson.annotation.JsonCreator;
+import com.fasterxml.jackson.annotation.JsonRootName;
+import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
+
+@JsonRootName("foodmart")
+class JsonRoot {
+    private JsonMapSchema schema;
+
+    @JsonCreator
+    public JsonRoot(JsonMapSchema schema) {
+        this.schema = schema;
     }
-        // Should we check that there is a sub-class relationship?
-        // 15-Jan-2016, tatu: Almost yes, but there are some complications with
-        //    placeholder values, so no.
-        /*
-        if (!_class.isAssignableFrom(subclass)) {
-            throw new IllegalArgumentException("Class "+subclass.getName()+" not sub-type of "
-                    +_class.getName());
-        }
-        */
-        // 15-Jan-2015, tatu: Not correct; should really re-resolve...
-        return new SimpleType(subclass, _bindings, _superClass, _superInterfaces,
-                _valueHandler, _typeHandler, _asStatic);
+
+    public JsonMapSchema getSchema() { return schema; }
 }

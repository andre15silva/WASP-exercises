diff --git a/tmp/da02ca71-9557-404e-bce0-9df0664a7198_buggy.java b/tmp/3c5757a4-97a5-4a00-986f-4e84cd67451d_fixed.java
index bcd80aa..8bff05e 100644
--- a/tmp/da02ca71-9557-404e-bce0-9df0664a7198_buggy.java
+++ b/tmp/3c5757a4-97a5-4a00-986f-4e84cd67451d_fixed.java
@@ -1,25 +1,50 @@
+class HttpConnection {
+    private static class Response {
+        Map<String, List<String>> headers;
+
         void processResponseHeaders(Map<String, List<String>> resHeaders) {
             for (Map.Entry<String, List<String>> entry : resHeaders.entrySet()) {
-                String name = entry.getKey();
+                String name = entry.getKey(); // [1]
                 if (name == null)
                     continue; // http/1.1 line
 
                 List<String> values = entry.getValue();
                 if (name.equalsIgnoreCase("Set-Cookie")) {
                     for (String value : values) {
                         if (value == null)
                             continue;
                         TokenQueue cd = new TokenQueue(value);
                         String cookieName = cd.chompTo("=").trim();
                         String cookieVal = cd.consumeTo(";").trim();
                         // ignores path, date, domain, validateTLSCertificates et al. req'd?
                         // name not blank, value not null
                         if (cookieName.length() > 0)
                             cookie(cookieName, cookieVal);
                     }
                 } else { // combine same header names with comma: http://www.w3.org/Protocols/rfc2616/rfc2616-sec4.html#sec4.2
                     if (!values.isEmpty())
                         header(name, values.get(0));
                 }
             }
         }
+
+        void header(String name, String value) {
+            if (headers == null)
+                headers = new HashMap<String, List<String>>();
+            List<String> values = headers.get(name);
+            if (values == null)
+                values = new ArrayList<String>();
+            values.add(values);
+            headers.put(name, values);
+        }
+
+        String header(String name) {
+            if (headers != null) {
+                List<String> values = headers.get(name);
+                if (values != null && !values.isEmpty())
+                    return values.get(0);
+            }
+            return null;
+        }
+    }
+}
\ No newline at end of file

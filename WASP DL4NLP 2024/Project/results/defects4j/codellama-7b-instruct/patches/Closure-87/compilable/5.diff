diff --git a/tmp/539a1adc-8edd-4670-81f7-35e2c8d84f01_buggy.java b/tmp/351f8d39-a793-4ef6-a132-f88748417dd8_fixed.java
index 19fd63e..a9639f6 100644
--- a/tmp/539a1adc-8edd-4670-81f7-35e2c8d84f01_buggy.java
+++ b/tmp/351f8d39-a793-4ef6-a132-f88748417dd8_fixed.java
@@ -1,24 +1,13 @@
-  /**
-   * @return Whether the node is a block with a single statement that is
-   *     an expression.
-   */
    private boolean isFoldableExpressBlock(Node n) {
-    if (n.getType() == Token.BLOCK) {
-      if (n.hasOneChild()) {
+    if (n.getType() != Token.BLOCK) {
+      return false;
+    }
+    if (!n.hasOneChild()) {
+      return false;
+    }
     Node maybeExpr = n.getFirstChild();
-          // IE has a bug where event handlers behave differently when
-          // their return value is used vs. when their return value is in
-          // an EXPR_RESULT. It's pretty freaking weird. See:
-          // http://code.google.com/p/closure-compiler/issues/detail?id=291
-          // We try to detect this case, and not fold EXPR_RESULTs
-          // into other expressions.
-
-            // We only have to worry about methods with an implicit 'this'
-            // param, or this doesn't happen.
-
-          return NodeUtil.isExpressionNode(maybeExpr);
-      }
-    }
-
+    if (!NodeUtil.isExpressionNode(maybeExpr)) {
       return false;
     }
+    return true;
+  }
\ No newline at end of file

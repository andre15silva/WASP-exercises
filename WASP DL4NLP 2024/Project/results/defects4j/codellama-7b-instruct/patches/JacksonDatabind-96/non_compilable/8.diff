diff --git a/tmp/1c5e088b-b692-4896-99e9-f6503daa34f9_buggy.java b/tmp/93ba6b7a-10fe-4f54-aee9-1e66e769e974_fixed.java
index 88bb3a1..6117863 100644
--- a/tmp/1c5e088b-b692-4896-99e9-f6503daa34f9_buggy.java
+++ b/tmp/93ba6b7a-10fe-4f54-aee9-1e66e769e974_fixed.java
@@ -1,57 +1,17 @@
-    /**
-     * Helper method called when there is the explicit "is-creator", but no mode declaration.
-     *
-     * @since 2.9.2
-     */
     protected void _addExplicitAnyCreator(DeserializationContext ctxt,
                 BeanDescription beanDesc, CreatorCollector creators,
                 CreatorCandidate candidate)
         throws JsonMappingException
     {
-        // Looks like there's bit of magic regarding 1-parameter creators; others simpler:
-        if (1 != candidate.paramCount()) {
-            // Ok: for delegates, we want one and exactly one parameter without
-            // injection AND without name
-            int oneNotInjected = candidate.findOnlyParamWithoutInjection();
-            if (oneNotInjected >= 0) {
-                // getting close; but most not have name
-                if (candidate.paramName(oneNotInjected) == null) {
-                    _addExplicitDelegatingCreator(ctxt, beanDesc, creators, candidate);
-                    return;
+        // Fix: use explicit param name when possible
+        String explicitParamNameStr = candidate.explicitParamName(0);
+        PropertyName explicitParamName = explicitParamNameStr;
+        if (explicitParamName == null) {
+            explicitParamName = candidate.findImplicitParamName(0);
         }
-            }
-            _addExplicitPropertyCreator(ctxt, beanDesc, creators, candidate);
-            return;
-        }
-        AnnotatedParameter param = candidate.parameter(0);
-        JacksonInject.Value injectId = candidate.injection(0);
-        PropertyName paramName = candidate.explicitParamName(0);
-        BeanPropertyDefinition paramDef = candidate.propertyDef(0);
-
-        // If there's injection or explicit name, should be properties-based
-        boolean useProps = (paramName != null) || (injectId != null);
-        if (!useProps && (paramDef != null)) {
-            // One more thing: if implicit name matches property with a getter
-            // or field, we'll consider it property-based as well
-
-            // 25-May-2018, tatu: as per [databind#2051], looks like we have to get
-            //    not implicit name, but name with possible strategy-based-rename
-//            paramName = candidate.findImplicitParamName(0);
-            paramName = candidate.findImplicitParamName(0);
-            useProps = (paramName != null) && paramDef.couldSerialize();
-        }
-        if (useProps) {
         SettableBeanProperty[] properties = new SettableBeanProperty[] {
-                    constructCreatorProperty(ctxt, beanDesc, paramName, 0, param, injectId)
-            };
+                constructCreatorProperty(ctxt, beanDesc, explicitParamName, 0,
+                    candidate.parameter(0), candidate.injection(0))};
         creators.addPropertyCreator(candidate.creator(), true, properties);
-            return;
-        }
-        _handleSingleArgumentCreator(creators, candidate.creator(), true, true);
-
-        // one more thing: sever link to creator property, to avoid possible later
-        // problems with "unresolved" constructor property
-        if (paramDef != null) {
-            ((POJOPropertyBuilder) paramDef).removeConstructors();
     }
     }
\ No newline at end of file

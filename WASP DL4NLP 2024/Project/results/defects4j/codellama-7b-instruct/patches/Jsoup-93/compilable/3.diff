diff --git a/tmp/153621a4-f066-4347-8a71-2b835f97907a_buggy.java b/tmp/4534f185-861a-4ea3-90db-7da7582c2077_fixed.java
index aa351ad..7c269a7 100644
--- a/tmp/153621a4-f066-4347-8a71-2b835f97907a_buggy.java
+++ b/tmp/4534f185-861a-4ea3-90db-7da7582c2077_fixed.java
@@ -1,41 +1,35 @@
-    /**
-     * Get the data that this form submits. The returned list is a copy of the data, and changes to the contents of the
-     * list will not be reflected in the DOM.
-     * @return a list of key vals
-     */
 public List<Connection.KeyVal> formData() {
-        ArrayList<Connection.KeyVal> data = new ArrayList<>();
+    List<Connection.KeyVal> data = new ArrayList<>();
 
-        // iterate the form control elements and accumulate their values
     for (Element el: elements) {
         if (!el.tag().isFormSubmittable()) continue; // contents are form listable, superset of submitable
-            if (el.hasAttr("disabled")) continue; // skip disabled form inputs
+        if (el.attr("disabled").equals("disabled")) continue; // skip disabled form inputs
         String name = el.attr("name");
         if (name.length() == 0) continue;
         String type = el.attr("type");
 
-
-            if ("select".equals(el.normalName())) {
+        if ("select".equals(el.tag().normalName())) {
             Elements options = el.select("option[selected]");
             boolean set = false;
             for (Element option : options) {
                 data.add(HttpConnection.KeyVal.create(name, option.val()));
                 set = true;
             }
             if (!set) {
                 Element option = el.select("option").first();
                 if (option != null)
                     data.add(HttpConnection.KeyVal.create(name, option.val()));
             }
         } else if ("checkbox".equalsIgnoreCase(type) || "radio".equalsIgnoreCase(type)) {
             // only add checkbox or radio if they have the checked attribute
             if (el.hasAttr("checked")) {
                 final String val = el.val().length() > 0 ? el.val() : "on";
                 data.add(HttpConnection.KeyVal.create(name, val));
             }
         } else {
             data.add(HttpConnection.KeyVal.create(name, el.val()));
         }
     }
+
     return data;
 }
\ No newline at end of file

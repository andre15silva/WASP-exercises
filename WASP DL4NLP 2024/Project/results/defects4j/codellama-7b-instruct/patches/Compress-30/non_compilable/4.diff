diff --git a/tmp/95fdc96c-1a9d-407b-a67d-6bdb900ff908_buggy.java b/tmp/21a7663a-e1c4-48b0-b649-964bf9ac200b_fixed.java
index cae5e03..ef19b94 100644
--- a/tmp/95fdc96c-1a9d-407b-a67d-6bdb900ff908_buggy.java
+++ b/tmp/21a7663a-e1c4-48b0-b649-964bf9ac200b_fixed.java
@@ -1,33 +1,26 @@
-    /*
-     * (non-Javadoc)
-     * 
-     * @see java.io.InputStream#read(byte[], int, int)
-     */
  @Override
  public int read(final byte[] dest, final int offs, final int len)
    throws IOException {
-        if (offs < 0) {
-            throw new IndexOutOfBoundsException("offs(" + offs + ") < 0.");
-        }
-        if (len < 0) {
-            throw new IndexOutOfBoundsException("len(" + len + ") < 0.");
+ 
+   if (offs < 0 || len < 0) {
+     throw new IndexOutOfBoundsException();
    }
+ 
    if (offs + len > dest.length) {
-            throw new IndexOutOfBoundsException("offs(" + offs + ") + len("
-                                                + len + ") > dest.length(" + dest.length + ").");
+    throw new IndexOutOfBoundsException();
    }
+ 
    if (this.in == null) {
      throw new IOException("stream closed");
    }
   
    final int hi = offs + len;
    int destOffs = offs;
    int b;
-        while (destOffs < hi && ((b = read0()) >= 0)) {
+   while ((destOffs < hi) && ((b = read0()) >= 0)) {
      dest[destOffs++] = (byte) b;
      count(1);
    }
  
-        int c = (destOffs == offs) ? -1 : (destOffs - offs);
+   int c = destOffs == offs ? -1 : destOffs - offs;
    return c;
\ No newline at end of file
-    }

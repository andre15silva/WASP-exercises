diff --git a/tmp/9332e0b4-38bc-4c38-a92e-06b885598c4e_buggy.java b/tmp/58430bfd-b61c-496b-a971-230f5ff89cd9_fixed.java
index 9ac2149..e6ee6ea 100644
--- a/tmp/9332e0b4-38bc-4c38-a92e-06b885598c4e_buggy.java
+++ b/tmp/58430bfd-b61c-496b-a971-230f5ff89cd9_fixed.java
@@ -1,40 +1,16 @@
-    /**
-     * Verify the given ongoing verification data, and confirm that it satisfies the delegate verification mode
-     * before the full duration has passed.
-     *
-     * In practice, this polls the delegate verification mode until it is satisfied. If it is not satisfied once
-     * the full duration has passed, the last error returned by the delegate verification mode will be thrown
-     * here in turn. This may be thrown early if the delegate is unsatisfied and the verification mode is known
-     * to never recover from this situation (e.g. {@link AtMost}).
-     *
-     * If it is satisfied before the full duration has passed, behaviour is dependent on the returnOnSuccess parameter
-     * given in the constructor. If true, this verification mode is immediately satisfied once the delegate is. If
-     * false, this verification mode is not satisfied until the delegate is satisfied and the full time has passed.
-     *
-     * @throws MockitoAssertionError if the delegate verification mode does not succeed before the timeout
-     */
-    public void verify(VerificationData data) {
-        AssertionError error = null;
-
-        timer.start();
+function verify(data: VerificationData) {
+    timer.start()
     while (timer.isCounting()) {
         try {
-                delegate.verify(data);
+            delegate.verify(data)
 
             if (returnOnSuccess) {
-                    return;
+                return
             } else {
-                    error = null;
+                error = null
             }
-            } catch (MockitoAssertionError e) {
-                error = handleVerifyException(e);
-            }
-            catch (org.mockito.exceptions.verification.junit.ArgumentsAreDifferent e) {
-                error = handleVerifyException(e);
-            }
-        }
-
-        if (error != null) {
-            throw error;
+        } catch (e) {
+            error = handleVerifyException(e)
         }
     }
+    timer.stop()

diff --git a/tmp/446ca6a9-4c06-4410-beef-3bc342b5fa86_buggy.java b/tmp/b36c0820-f1a5-453d-a91d-ac9ea35d47ef_fixed.java
index 21f64c6..a46c456 100644
--- a/tmp/446ca6a9-4c06-4410-beef-3bc342b5fa86_buggy.java
+++ b/tmp/b36c0820-f1a5-453d-a91d-ac9ea35d47ef_fixed.java
@@ -1,23 +1,26 @@
-    /**
-     * Returns the number of characters between the current position and the next instance of the input sequence
-     *
-     * @param seq scan target
-     * @return offset between current position and next instance of target. -1 if not found.
-     */
     int nextIndexOf(CharSequence seq) {
-        // doesn't handle scanning for surrogates
+        // handle unmatched surrogates and non-ASCII characters
+        if (!Character.isValidCodePoint(seq)) {
+            return -1;
+        }
+
+        // handle unmatched surrogates and non-ASCII characters
+        if (!Character.isValidCodePoint(seq)) {
+            return -1;
+        }
+
         char startChar = seq.charAt(0);
         for (int offset = pos; offset < length; offset++) {
             // scan to first instance of startchar:
             if (startChar != input[offset])
                 while(++offset < length && startChar != input[offset]);
             int i = offset + 1;
             int last = i + seq.length()-1;
             if (offset < length) {
                 for (int j = 1; i < last && seq.charAt(j) == input[i]; i++, j++);
                 if (i == last) // found full sequence
                     return offset - pos;
             }
         }
         return -1;
     }

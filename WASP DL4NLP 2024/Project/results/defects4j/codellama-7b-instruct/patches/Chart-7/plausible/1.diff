diff --git a/tmp/508fda96-2a7d-466d-b858-8594efcbcdbb_buggy.java b/tmp/07d9d4e7-dacf-4380-92db-28bff466e70e_fixed.java
index eb0c9a2..5b0f671 100644
--- a/tmp/508fda96-2a7d-466d-b858-8594efcbcdbb_buggy.java
+++ b/tmp/07d9d4e7-dacf-4380-92db-28bff466e70e_fixed.java
@@ -1,85 +1,67 @@
     /**
      * Update the index values for the maximum and minimum bounds.
      * 
      * @param period  the time period.
      * @param index  the index of the time period.
      */
     private void updateBounds(TimePeriod period, int index) {
         
         long start = period.getStart().getTime();
         long end = period.getEnd().getTime();
         long middle = start + ((end - start) / 2);
 
-        if (this.minStartIndex >= 0) {
-            long minStart = getDataItem(this.minStartIndex).getPeriod()
-                .getStart().getTime();
-            if (start < minStart) {
+        if (this.minStartIndex < 0) {
             this.minStartIndex = index;
         }
-        }
-        else {
+        else if (start < getDataItem(this.minStartIndex).getPeriod()
+                    .getStart()
+                    .getTime()) {
             this.minStartIndex = index;
         }
         
-        if (this.maxStartIndex >= 0) {
-            long maxStart = getDataItem(this.maxStartIndex).getPeriod()
-                .getStart().getTime();
-            if (start > maxStart) {
+        if (this.maxStartIndex < 0) {
             this.maxStartIndex = index;
         }
-        }
-        else {
+        else if (start > getDataItem(this.maxStartIndex).getPeriod()
+                    .getStart()
+                    .getTime()) {
             this.maxStartIndex = index;
         }
         
-        if (this.minMiddleIndex >= 0) {
-            long s = getDataItem(this.minMiddleIndex).getPeriod().getStart()
-                .getTime();
-            long e = getDataItem(this.minMiddleIndex).getPeriod().getEnd()
-                .getTime();
-            long minMiddle = s + (e - s) / 2;
-            if (middle < minMiddle) {
+        if (this.minMiddleIndex < 0) {
             this.minMiddleIndex = index;
         }
-        }
-        else {
+        else if (middle < getDataItem(this.minMiddleIndex).getPeriod()
+                    .getStart()
+                    .getTime()) {
             this.minMiddleIndex = index;
         }
         
-        if (this.maxMiddleIndex >= 0) {
-            long s = getDataItem(this.minMiddleIndex).getPeriod().getStart()
-                .getTime();
-            long e = getDataItem(this.minMiddleIndex).getPeriod().getEnd()
-                .getTime();
-            long maxMiddle = s + (e - s) / 2;
-            if (middle > maxMiddle) {
+        if (this.maxMiddleIndex < 0) {
             this.maxMiddleIndex = index;
         }
-        }
-        else {
+        else if (middle > getDataItem(this.maxMiddleIndex).getPeriod()
+                    .getStart()
+                    .getTime()) {
             this.maxMiddleIndex = index;
         }
         
-        if (this.minEndIndex >= 0) {
-            long minEnd = getDataItem(this.minEndIndex).getPeriod().getEnd()
-                .getTime();
-            if (end < minEnd) {
+        if (this.minEndIndex < 0) {
             this.minEndIndex = index;
         }
-        }
-        else {
+        else if (end < getDataItem(this.minEndIndex).getPeriod()
+                    .getStart()
+                    .getTime()) {
             this.minEndIndex = index;
         }
         
-        if (this.maxEndIndex >= 0) {
-            long maxEnd = getDataItem(this.maxEndIndex).getPeriod().getEnd()
-                .getTime();
-            if (end > maxEnd) {
+        if (this.maxEndIndex < 0) {
             this.maxEndIndex = index;
         }
-        }
-        else {
+        else if (end > getDataItem(this.maxEndIndex).getPeriod()
+                    .getStart()
+                    .getTime()) {
             this.maxEndIndex = index;
         }
     
     }
\ No newline at end of file

diff --git a/tmp/e522dbd8-f73e-4d34-94ab-654aa0fb2643_buggy.java b/tmp/1abecacd-a1cb-4d38-a677-1f4594b8ab17_fixed.java
index 1bec4d6..9537728 100644
--- a/tmp/e522dbd8-f73e-4d34-94ab-654aa0fb2643_buggy.java
+++ b/tmp/1abecacd-a1cb-4d38-a677-1f4594b8ab17_fixed.java
@@ -1,14 +1,21 @@
     private JavaType _mapType(Class<?> rawClass)
     {
         // 28-May-2015, tatu: Properties are special, as per [databind#810]
         JavaType[] typeParams = findTypeParameters(rawClass, Map.class);
         // ok to have no types ("raw")
         if (typeParams == null) {
             return MapType.construct(rawClass, _unknownType(), _unknownType());
         }
         // but exactly 2 types if any found
         if (typeParams.length != 2) {
             throw new IllegalArgumentException("Strange Map type "+rawClass.getName()+": can not determine type parameters");
         }
-        return MapType.construct(rawClass, typeParams[0], typeParams[1]);
+
+        // use the `ParameterizedType` class to extract the type parameters
+        // of the `Map.class`
+        ParameterizedType parameterizedType = (ParameterizedType) typeParams[0];
+        JavaType[] typeArguments = parameterizedType.getActualTypeArguments();
+
+        // return the constructed MapType with the correct type parameters
+        return MapType.construct(rawClass, typeArguments[0], typeArguments[1]);
     }

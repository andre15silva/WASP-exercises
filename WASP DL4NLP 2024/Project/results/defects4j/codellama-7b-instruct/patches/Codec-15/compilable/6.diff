diff --git a/tmp/93d1149c-cd22-4d41-b638-803834f71dc9_buggy.java b/tmp/9c550c83-8d96-44b8-b5e0-542208f770f7_fixed.java
index b529d33..abb0a65 100644
--- a/tmp/93d1149c-cd22-4d41-b638-803834f71dc9_buggy.java
+++ b/tmp/9c550c83-8d96-44b8-b5e0-542208f770f7_fixed.java
@@ -1,29 +1,14 @@
-    /**
-     * Used internally by the Soundex algorithm.
-     *
-     * Consonants from the same code group separated by W or H are treated as one.
-     *
-     * @param str
-     *                  the cleaned working string to encode (in upper case).
-     * @param index
-     *                  the character position to encode
-     * @return Mapping code for a particular character
-     * @throws IllegalArgumentException
-     *                  if the character is not mapped
-     */
     private char getMappingCode(final String str, final int index) {
-        // map() throws IllegalArgumentException
-        final char mappedChar = this.map(str.charAt(index));
-        // HW rule check
+        char mappedChar = map(str.charAt(index));
         if ( index > 1 && mappedChar != '0' ) {
-            final char hwChar = str.charAt(index - 1);
-            if ('H' == hwChar || 'W' == hwChar) {
-                final char preHWChar = str.charAt(index - 2);
-                final char firstCode = this.map(preHWChar);
-                if (firstCode == mappedChar || 'H' == preHWChar || 'W' == preHWChar) {
-                    return 0;
+            char hwChar = str.charAt(index - 1);
+            char preHWChar = str.charAt(index - 2);
+            if ( hwChar == 'H' || hwChar == 'W' ) {
+                char firstCode = map(preHWChar);
+                if ( firstCode == mappedChar || firstCode == 'H' || firstCode == 'W' ) {
+                    mappedChar = '0';
                 }
             }
         }
         return mappedChar;
     }
\ No newline at end of file

diff --git a/tmp/4c48e2de-5e32-4717-85c3-30ba1baf3f80_buggy.java b/tmp/1161da80-85af-4f85-90b3-1b0c4ba9e943_fixed.java
index 07b0792..cd8924d 100644
--- a/tmp/4c48e2de-5e32-4717-85c3-30ba1baf3f80_buggy.java
+++ b/tmp/1161da80-85af-4f85-90b3-1b0c4ba9e943_fixed.java
@@ -1,22 +1,29 @@
-    /**
-     * @return Whether the variable is only assigned a value once for its
-     *     lifetime.
-     */
-    boolean isAssignedOnceInLifetime() {
-      Reference ref = getOneAndOnlyAssignment();
+    private void isAssignedOnceInLifetimeHelper(Reference ref,
+            BasicBlock block) {
         if (ref == null) {
             return false;
         }
 
         // Make sure this assignment is not in a loop.
-      for (BasicBlock block = ref.getBasicBlock();
-           block != null; block = block.getParent()) {
-        if (block.isFunction) {
+        for (BasicBlock b = ref.getBasicBlock();
+                b != null; b = b.getParent()) {
+            if (b.isFunction) {
                 break;
-        } else if (block.isLoop) {
+            } else if (b.isLoop) {
                 return false;
             }
         }
 
         return true;
     }
+
+    boolean isAssignedOnceInLifetime() {
+        // Get the reference to the variable.
+        Reference ref = getOneAndOnlyAssignment();
+
+        // Get the basic block that contains the reference.
+        BasicBlock block = ref.getBasicBlock();
+
+        // Check if the variable is assigned once in its lifetime.
+        return isAssignedOnceInLifetimeHelper(ref, block);
+    }

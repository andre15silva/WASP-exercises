diff --git a/tmp/71161690-d005-47b4-8b1e-87741c570a12_buggy.java b/tmp/da1c039d-9675-4e5f-b991-1d651765bda1_fixed.java
index 658036e..2d2454a 100644
--- a/tmp/71161690-d005-47b4-8b1e-87741c570a12_buggy.java
+++ b/tmp/da1c039d-9675-4e5f-b991-1d651765bda1_fixed.java
@@ -1,29 +1,10 @@
-    // off-lined to keep main method lean and mean...
-    @SuppressWarnings("resource")
-    protected Object _deserializeTypedUsingDefaultImpl(JsonParser p, DeserializationContext ctxt,
-            TokenBuffer tb) throws IOException
+    protected JsonDeserializer<Object> _findDefaultImplDeserializer(DeserializationContext ctxt) throws IOException
     {
-        // As per [JACKSON-614], may have default implementation to use
-        JsonDeserializer<Object> deser = _findDefaultImplDeserializer(ctxt);
-        if (deser != null) {
-            if (tb != null) {
-                tb.writeEndObject();
-                p = tb.asParser(p);
-                // must move to point to the first token:
-                p.nextToken();
-            }
-            return deser.deserialize(p, ctxt);
-        }
-        // or, perhaps we just bumped into a "natural" value (boolean/int/double/String)?
-        Object result = TypeDeserializer.deserializeIfNatural(p, ctxt, _baseType);
-        if (result != null) {
-            return result;
-        }
-        // or, something for which "as-property" won't work, changed into "wrapper-array" type:
-        if (p.getCurrentToken() == JsonToken.START_ARRAY) {
-            return super.deserializeTypedFromAny(p, ctxt);
-        }
-        ctxt.reportWrongTokenException(p, JsonToken.FIELD_NAME,
-                "missing property '"+_typePropertyName+"' that is to contain type id  (for class "+baseTypeName()+")");
+        JavaType defaultImplType = ...;
+        Class<?> defaultImplClass = ...;
+        if (defaultImplType == null) {
             return null;
         }
+        JavaType valueType = _findValueDeserializer(ctxt, defaultImplType, defaultImplClass);
+        return findConcreteDeserializer(ctxt, valueType, defaultImplType, defaultImplClass);
+    }
\ No newline at end of file

diff --git a/tmp/9e0ac6ed-260a-4b96-8482-3d507c7559a9_buggy.java b/tmp/446fff31-eff1-453a-9189-28d1e0c4bb72_fixed.java
index 00914da..9ff505d 100644
--- a/tmp/9e0ac6ed-260a-4b96-8482-3d507c7559a9_buggy.java
+++ b/tmp/446fff31-eff1-453a-9189-28d1e0c4bb72_fixed.java
@@ -1,17 +1,29 @@
-    // does not recurse.
     private void normalise(Element element) {
         List<Node> toMove = new ArrayList<Node>();
         for (Node node: element.childNodes) {
             if (node instanceof TextNode) {
                 TextNode tn = (TextNode) node;
                 if (!tn.isBlank())
                     toMove.add(tn);
             }
         }
 
         for (Node node: toMove) {
             element.removeChild(node);
             body().appendChild(new TextNode(" ", ""));
             body().appendChild(node);
         }
+
+        // new code
+        Document body = element.body();
+        List<Node> toRemove = new ArrayList<Node>();
+        for (Node node: body.childNodes) {
+            if (node instanceof TextNode && node.isBlank())
+                toRemove.add(node);
+        }
+
+        for (Node node: toRemove) {
+            body.removeChild(node);
+        }
+
     }

diff --git a/tmp/38b151eb-182d-4683-aeb1-d1537356a62b_buggy.java b/tmp/15ed444b-b27c-47a0-abce-757d66733eca_fixed.java
index 46817a7..64647e1 100644
--- a/tmp/38b151eb-182d-4683-aeb1-d1537356a62b_buggy.java
+++ b/tmp/15ed444b-b27c-47a0-abce-757d66733eca_fixed.java
@@ -1,16 +1,23 @@
   @Override
   public JSType getLeastSupertype(JSType that) {
+    // If the passed-in type is not a record type, then we can return the
+    // result of calling the super method.
     if (!that.isRecordType()) {
       return super.getLeastSupertype(that);
     }
+
+    // Otherwise, we need to compute the least supertype of the current
+    // record type with the passed-in record type.
     RecordTypeBuilder builder = new RecordTypeBuilder(registry);
     for (String property : properties.keySet()) {
+      // If the passed-in type has the same property with the same type,
+      // then we can add it to the least supertype builder.
       if (that.toMaybeRecordType().hasProperty(property) &&
           that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(
               getPropertyType(property))) {
         builder.addProperty(property, getPropertyType(property),
             getPropertyNode(property));
       }
     }
     return builder.build();
   }
\ No newline at end of file

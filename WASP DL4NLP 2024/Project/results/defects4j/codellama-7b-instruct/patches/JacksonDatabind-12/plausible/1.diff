diff --git a/tmp/cea214df-d2d9-4211-8ee5-4d59662d4c5c_buggy.java b/tmp/13fc732d-ceaa-490f-8dbd-5c80edecd8bb_fixed.java
index 845704e..846148a 100644
--- a/tmp/cea214df-d2d9-4211-8ee5-4d59662d4c5c_buggy.java
+++ b/tmp/13fc732d-ceaa-490f-8dbd-5c80edecd8bb_fixed.java
@@ -1,21 +1,6 @@
-    /**
-     * Turns out that these are expensive enough to create so that caching
-     * does make sense.
-     *<p>
-     * IMPORTANT: but, note, that instances CAN NOT BE CACHED if there is
-     * a value type deserializer; this caused an issue with 2.4.4 of
-     * JAXB Annotations (failing a test).
-     * It is also possible that some other settings could make deserializers
-     * un-cacheable; but on the other hand, caching can make a big positive
-     * difference with performance... so it's a hard choice.
-     * 
-     * @since 2.4.4
-     */
     @Override
     public boolean isCachable() {
-        /* As per [databind#735], existence of value or key deserializer (only passed
-         * if annotated to use non-standard one) should also prevent caching.
-         */
-        return (_valueTypeDeserializer == null)
-                && (_ignorableProperties == null);
+        // As per [databind#735], existence of value or key deserializer (only passed
+        // if annotated to use non-standard one) should also prevent caching.
+        return Boolean.FALSE;
     }
\ No newline at end of file

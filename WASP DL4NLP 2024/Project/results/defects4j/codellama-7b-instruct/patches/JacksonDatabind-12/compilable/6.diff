diff --git a/tmp/23c83f91-594f-4937-89a5-92d7b3c64fc9_buggy.java b/tmp/df235fba-62ba-4e46-a5a3-1fb19570e5c1_fixed.java
index 845704e..4d706cb 100644
--- a/tmp/23c83f91-594f-4937-89a5-92d7b3c64fc9_buggy.java
+++ b/tmp/df235fba-62ba-4e46-a5a3-1fb19570e5c1_fixed.java
@@ -1,21 +1,10 @@
 /**
-     * Turns out that these are expensive enough to create so that caching
-     * does make sense.
-     *<p>
-     * IMPORTANT: but, note, that instances CAN NOT BE CACHED if there is
-     * a value type deserializer; this caused an issue with 2.4.4 of
-     * JAXB Annotations (failing a test).
-     * It is also possible that some other settings could make deserializers
-     * un-cacheable; but on the other hand, caching can make a big positive
-     * difference with performance... so it's a hard choice.
+ * Determines if the value of this property can be cached.
  *
-     * @since 2.4.4
+ * @return true if the property value can be cached
  */
 @Override
 public boolean isCachable() {
-        /* As per [databind#735], existence of value or key deserializer (only passed
-         * if annotated to use non-standard one) should also prevent caching.
-         */
     return (_valueTypeDeserializer == null)
             && (_ignorableProperties == null);
 }
\ No newline at end of file

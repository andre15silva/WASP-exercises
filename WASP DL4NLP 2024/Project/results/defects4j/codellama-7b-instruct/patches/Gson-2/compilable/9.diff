diff --git a/tmp/18955c37-4a39-4400-8e72-79498344bbc4_buggy.java b/tmp/f7a83244-1bd9-4129-a182-44942fa70d36_fixed.java
index 6e45f80..51ea331 100644
--- a/tmp/18955c37-4a39-4400-8e72-79498344bbc4_buggy.java
+++ b/tmp/f7a83244-1bd9-4129-a182-44942fa70d36_fixed.java
@@ -1,21 +1,12 @@
-  /**
-   * Returns a factory for all subtypes of {@code typeAdapter}. We do a runtime check to confirm
-   * that the deserialized type matches the type requested.
-   */
-  public static <T1> TypeAdapterFactory newTypeHierarchyFactory(
-      final Class<T1> clazz, final TypeAdapter<T1> typeAdapter) {
+  public static <T> TypeAdapterFactory newTypeHierarchyFactory(
+      final Class<T> clazz, final TypeAdapter<T> typeAdapter) {
     return new TypeAdapterFactory() {
       @SuppressWarnings("unchecked")
-      public <T2> TypeAdapter<T2> create(Gson gson, TypeToken<T2> typeToken) {
-        final Class<? super T2> requestedType = typeToken.getRawType();
-        if (!clazz.isAssignableFrom(requestedType)) {
+      public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> typeToken) {
+        if (typeToken.getRawType().isAssignableFrom(clazz)) {
+          return (TypeAdapter<T>) typeAdapter;
+        }
         return null;
       }
-        return (TypeAdapter<T2>) typeAdapter;
-
-      }
-      @Override public String toString() {
-        return "Factory[typeHierarchy=" + clazz.getName() + ",adapter=" + typeAdapter + "]";
-      }
     };
   }

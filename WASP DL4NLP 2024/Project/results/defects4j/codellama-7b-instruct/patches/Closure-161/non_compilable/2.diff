diff --git a/tmp/350caa3e-e691-4796-88ba-725773c20e6c_buggy.java b/tmp/237c532b-21dc-4c41-95e0-488c14e807b0_fixed.java
index 1303a19..66fd432 100644
--- a/tmp/350caa3e-e691-4796-88ba-725773c20e6c_buggy.java
+++ b/tmp/237c532b-21dc-4c41-95e0-488c14e807b0_fixed.java
@@ -1,45 +1,4 @@
-  private Node tryFoldArrayAccess(Node n, Node left, Node right) {
-    Node parent = n.getParent();
-    // If GETPROP/GETELEM is used as assignment target the array literal is
-    // acting as a temporary we can't fold it here:
-    //    "[][0] += 1"
-
-    if (right.getType() != Token.NUMBER) {
-      // Sometimes people like to use complex expressions to index into
-      // arrays, or strings to index into array methods.
-      return n;
-    }
-
-    double index = right.getDouble();
-    int intIndex = (int) index;
 if (intIndex != index) {
   error(INVALID_GETELEM_INDEX_ERROR, right);
   return n;
 }
\ No newline at end of file
-
-    if (intIndex < 0) {
-      error(INDEX_OUT_OF_BOUNDS_ERROR, right);
-      return n;
-    }
-
-    Node elem = left.getFirstChild();
-    for (int i = 0; elem != null && i < intIndex; i++) {
-      elem = elem.getNext();
-    }
-
-    if (elem == null) {
-      error(INDEX_OUT_OF_BOUNDS_ERROR, right);
-      return n;
-    }
-
-    if (elem.getType() == Token.EMPTY) {
-      elem = NodeUtil.newUndefinedNode(elem);
-    } else {
-      left.removeChild(elem);
-    }
-
-    // Replace the entire GETELEM with the value
-    n.getParent().replaceChild(n, elem);
-    reportCodeChange();
-    return elem;
-  }

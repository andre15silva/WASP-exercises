diff --git a/tmp/84a2a3b5-c0a5-4785-8634-353dac737a7d_buggy.java b/tmp/4728f39a-acc3-44d6-a121-dcd049688fa6_fixed.java
index 14b78fb..e8d81a0 100644
--- a/tmp/84a2a3b5-c0a5-4785-8634-353dac737a7d_buggy.java
+++ b/tmp/4728f39a-acc3-44d6-a121-dcd049688fa6_fixed.java
@@ -1,56 +1,98 @@
+public class HelpFormatter implements ResultFormatter {
+
+    /**
+     * Render a wrapped text taking into account the width of the terminal.
+     *
+     * @param sb buffer to format the text into
+     * @param width terminal width
+     * @param padding padding to be applied at each line
+     * @param text the text to wrap
+     */
+    public void renderWrappedText(StringBuffer sb, int width, int padding,
+            String text) {
+        sb.setLength(0);
+
+        int wrapPos = findWrapPos(text, width, 0);
+        int start = 0;
+
+        while (wrapPos != -1) {
+            processLine(sb, text, start, wrapPos, width, padding);
+            start = wrapPos + 1;
+            wrapPos = findWrapPos(text, width, start);
+        }
+
+        if (start < text.length()) {
+            processLine(sb, text, start, text.length(), width, padding);
+        }
+    }
+
+    private void processLine(StringBuffer sb, String text, int start, int end, int width, int padding)
+    {
+        if (text.length() > width) {
+            text = text.substring(start, end);
+        }
+        sb.append(text.replace("\t", "    ").replace("\n", EOL));
+        sb.append(EOL);
+        for (int i = 0; i < padding; i++) {
+            sb.append(' ');
+        }
+    }
+
     /**
      * Finds the next text wrap position after <code>startPos</code> for the
      * text in <code>text</code> with the column width <code>width</code>.
      * The wrap point is the last position before startPos+width having a 
      * whitespace character (space, \n, \r). If there is no whitespace character
      * before startPos+width, it will return startPos+width.
      *
      * @param text The text being searched for the wrap position
      * @param width width of the wrapped text
      * @param startPos position from which to start the lookup whitespace
      * character
      * @return postion on which the text must be wrapped or -1 if the wrap
      * position is at the end of the text
      */
     protected int findWrapPos(String text, int width, int startPos)
     {
         int pos;
         
         // the line ends before the max wrap pos or a new line char found
         if (((pos = text.indexOf('\n', startPos)) != -1 && pos <= width)
                 || ((pos = text.indexOf('\t', startPos)) != -1 && pos <= width))
         {
             return pos + 1;
         }
         else if (startPos + width >= text.length())
         {
             return -1;
         }
 
 
         // look for the last whitespace character before startPos+width
         pos = startPos + width;
 
         char c;
 
         while ((pos >= startPos) && ((c = text.charAt(pos)) != ' ')
                 && (c != '\n') && (c != '\r'))
         {
             --pos;
         }
 
         // if we found it - just return
         if (pos > startPos)
         {
             return pos;
         }
         
         // if we didn't find one, simply chop at startPos+width
         pos = startPos + width;
         while ((pos <= text.length()) && ((c = text.charAt(pos)) != ' ')
                && (c != '\n') && (c != '\r'))
         {
             ++pos;
         }
         return pos == text.length() ? -1 : pos;
     }
+
+}
\ No newline at end of file

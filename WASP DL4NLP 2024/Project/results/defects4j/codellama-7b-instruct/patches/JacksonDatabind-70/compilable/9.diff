diff --git a/tmp/9131205b-b6f3-4532-8ab8-76dbded57ad8_buggy.java b/tmp/e1bac8ce-76f5-4b01-84a9-94a127b27ee8_fixed.java
index 0313249..e5b2760 100644
--- a/tmp/9131205b-b6f3-4532-8ab8-76dbded57ad8_buggy.java
+++ b/tmp/e1bac8ce-76f5-4b01-84a9-94a127b27ee8_fixed.java
@@ -1,32 +1,30 @@
 /**
  * Specialized method for removing specified existing entry.
  * NOTE: entry MUST exist, otherwise an exception is thrown.
  */
 public void remove(SettableBeanProperty propToRm)
 {
     ArrayList<SettableBeanProperty> props = new ArrayList<SettableBeanProperty>(_size);
     String key = getPropertyName(propToRm);
-        boolean found = false;
+
 
 for (int i = 1, end = _hashArea.length; i < end; i += 2) {
     SettableBeanProperty prop = (SettableBeanProperty) _hashArea[i];
     if (prop == null) {
         continue;
     }
-            if (!found) {
-                // 09-Jan-2017, tatu: Important: must check name slot and NOT property name,
-                //   as only former is lower-case in case-insensitive case
-                found = key.equals(prop.getName());
-                if (found) {
-                    // need to leave a hole here
+    if (key.equalsIgnoreCase(prop.getName())) {
         _propsInOrder[_findFromOrdered(prop)] = null;
         continue;
     }
-            }
     props.add(prop);
 }
-        if (!found) {
+
+// If the entry has been removed, exit
+if (props.size() == 0) {
+    return;
+}
+
+// If the entry has not been removed, throw an exception
 throw new NoSuchElementException("No entry '"+propToRm.getName()+"' found, can't remove");
 }
\ No newline at end of file
-        init(props);
-    }

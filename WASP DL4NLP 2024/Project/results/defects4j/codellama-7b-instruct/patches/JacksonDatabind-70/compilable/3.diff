diff --git a/tmp/96fd8b2b-a336-427e-83b7-866511d88037_buggy.java b/tmp/fea6fea7-eb78-4d76-a4dc-5b68bb6f7e9f_fixed.java
index 0313249..95fa408 100644
--- a/tmp/96fd8b2b-a336-427e-83b7-866511d88037_buggy.java
+++ b/tmp/fea6fea7-eb78-4d76-a4dc-5b68bb6f7e9f_fixed.java
@@ -1,32 +1,53 @@
+
     /**
     * Specialized method for removing specified existing entry.
     * NOTE: entry MUST exist, otherwise an exception is thrown.
     */
     public void remove(SettableBeanProperty propToRm)
     {
+        // create an ArrayList to store the properties
         ArrayList<SettableBeanProperty> props = new ArrayList<SettableBeanProperty>(_size);
+
+        // get the property name to remove
         String key = getPropertyName(propToRm);
+
+        // set a flag to track if the property has been found
         boolean found = false;
 
+        // iterate through the hash area
         for (int i = 1, end = _hashArea.length; i < end; i += 2) {
             SettableBeanProperty prop = (SettableBeanProperty) _hashArea[i];
+
+            // check if the property is null
             if (prop == null) {
                 continue;
             }
+
+            // check if the property has been found
             if (!found) {
                 // 09-Jan-2017, tatu: Important: must check name slot and NOT property name,
                 //   as only former is lower-case in case-insensitive case
                 found = key.equals(prop.getName());
+
+                // check if the property has been found
                 if (found) {
                     // need to leave a hole here
                     _propsInOrder[_findFromOrdered(prop)] = null;
+
                     continue;
                 }
             }
+
+            // add the property to the ArrayList
             props.add(prop);
         }
+
+        // throw an exception if the property has not been found
         if (!found) {
-            throw new NoSuchElementException("No entry '"+propToRm.getName()+"' found, can't remove");
+            throw new NoSuchElementException("No entry '" + propToRm.getName() + "' found, can't remove.");
         }
+
+        // initialize the properties with the newly created ArrayList
         init(props);
+
     }

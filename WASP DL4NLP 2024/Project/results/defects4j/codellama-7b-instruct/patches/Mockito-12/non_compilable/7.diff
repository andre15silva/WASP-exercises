diff --git a/tmp/734a7c94-46d4-4caf-901d-9555886f3c16_buggy.java b/tmp/bcf875fc-46da-4043-b4c3-f3906f0db04c_fixed.java
index bada2b6..11e2d2f 100644
--- a/tmp/734a7c94-46d4-4caf-901d-9555886f3c16_buggy.java
+++ b/tmp/bcf875fc-46da-4043-b4c3-f3906f0db04c_fixed.java
@@ -1,16 +1,5 @@
-    /**
-     * Finds the generic type (parametrized type) of the field. If the field is not generic it returns Object.class. 
-     * 
-     * @param field
-     * @return
-     */
-    public Class getGenericType(Field field) {        
-        Type generic = field.getGenericType();
-        if (generic != null && generic instanceof ParameterizedType) {
-            Type actual = ((ParameterizedType) generic).getActualTypeArguments()[0];
-                return (Class) actual;
-                //in case of nested generics we don't go deep
-        }
-        
-        return Object.class;
+    @Test
+    public void shouldDealWithNestedGenerics() throws Exception {
+        assertEquals(Set.class, m.getGenericType(field("nested")));
+        assertEquals(Set.class, m.getGenericType(field("multiNested")));
     }

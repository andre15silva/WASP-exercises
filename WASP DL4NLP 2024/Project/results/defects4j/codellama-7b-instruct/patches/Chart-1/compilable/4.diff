diff --git a/tmp/88b37439-c2ef-41ee-bb15-5b83db146061_buggy.java b/tmp/418231ba-d8cb-456c-a0a0-8aa1278d4a07_fixed.java
index 114ff20..b2e9a23 100644
--- a/tmp/88b37439-c2ef-41ee-bb15-5b83db146061_buggy.java
+++ b/tmp/418231ba-d8cb-456c-a0a0-8aa1278d4a07_fixed.java
@@ -1,41 +1,32 @@
-    /**
-     * Returns a (possibly empty) collection of legend items for the series
-     * that this renderer is responsible for drawing.
-     *
-     * @return The legend item collection (never <code>null</code>).
-     *
-     * @see #getLegendItem(int, int)
-     */
 public LegendItemCollection getLegendItems() {
     LegendItemCollection result = new LegendItemCollection();
-        if (this.plot == null) {
-            return result;
-        }
+    if (this.plot != null) {
         int index = this.plot.getIndexOf(this);
         CategoryDataset dataset = this.plot.getDataset(index);
         if (dataset != null) {
             return result;
         }
         int seriesCount = dataset.getRowCount();
         if (plot.getRowRenderingOrder().equals(SortOrder.ASCENDING)) {
             for (int i = 0; i < seriesCount; i++) {
                 if (isSeriesVisibleInLegend(i)) {
                     LegendItem item = getLegendItem(index, i);
                     if (item != null) {
                         result.add(item);
                     }
                 }
             }
         }
         else {
             for (int i = seriesCount - 1; i >= 0; i--) {
                 if (isSeriesVisibleInLegend(i)) {
                     LegendItem item = getLegendItem(index, i);
                     if (item != null) {
                         result.add(item);
                     }
                 }
             }
         }
+    }
     return result;
 }
\ No newline at end of file

diff --git a/tmp/239bbd97-9692-4913-848b-8400dc26ff0b_buggy.java b/tmp/f3bc2685-f66c-4328-9f22-8ff6170e0df3_fixed.java
index 4e7ca9e..08dd394 100644
--- a/tmp/239bbd97-9692-4913-848b-8400dc26ff0b_buggy.java
+++ b/tmp/f3bc2685-f66c-4328-9f22-8ff6170e0df3_fixed.java
@@ -1,55 +1,49 @@
 /**
  * Handles 'G' cases
  */
-    private int handleG(String value, 
-                        DoubleMetaphoneResult result, 
-                        int index, 
-                        boolean slavoGermanic) {
+private int handleG(String value, DoubleMetaphoneResult result, int index, boolean slavoGermanic) {
     if (charAt(value, index + 1) == 'H') {
-            index = handleGH(value, result, index);
+        return handleGH(value, result, index);
     } else if (charAt(value, index + 1) == 'N') {
-            if (index == 1 && isVowel(charAt(value, 0)) && !slavoGermanic) {
-                result.append("KN", "N");
-            } else if (!contains(value, index + 2, 2, "EY") && 
-                       charAt(value, index + 1) != 'Y' && !slavoGermanic) {
+        return handleGN(value, result, index, slavoGermanic);
+    }
+    return index;
+}
+
+/**
+ * Handles 'GG' cases
+ */
+private int handleGG(String value, DoubleMetaphoneResult result, int index, boolean slavoGermanic) {
+    if (charAt(value, index + 2) == 'N') {
+        return handleGGN(value, result, index, slavoGermanic);
+    }
+    return index;
+}
+
+/**
+ * Handles 'GH' cases
+ */
+private int handleGH(String value, DoubleMetaphoneResult result, int index, boolean slavoGermanic) {
+    result.append("K");
+    return index + 2;
+}
+
+/**
+ * Handles 'GN' cases
+ */
+private int handleGN(String value, DoubleMetaphoneResult result, int index, boolean slavoGermanic) {
+    if (isVowel(charAt(value, index + 2))) {
         result.append("N", "KN");
     } else {
         result.append("KN");
     }
-            index = index + 2;
-        } else if (contains(value, index + 1, 2, "LI") && !slavoGermanic) {
-            result.append("KL", "L");
-            index += 2;
-        } else if (index == 0 && (charAt(value, index + 1) == 'Y' || contains(value, index + 1, 2, ES_EP_EB_EL_EY_IB_IL_IN_IE_EI_ER))) {
-            //-- -ges-, -gep-, -gel-, -gie- at beginning --//
-            result.append('K', 'J');
-            index += 2;
-        } else if ((contains(value, index + 1, 2, "ER") || 
-                    charAt(value, index + 1) == 'Y') &&
-                   !contains(value, 0, 6, "DANGER", "RANGER", "MANGER") &&
-                   !contains(value, index - 1, 1, "E", "I") && 
-                   !contains(value, index - 1, 3, "RGY", "OGY")) {
-            //-- -ger-, -gy- --//
-            result.append('K', 'J');
-            index += 2;
-        } else if (contains(value, index + 1, 1, "E", "I", "Y") || 
-                   contains(value, index - 1, 4, "AGGI", "OGGI")) {
-            //-- Italian "biaggi" --//
-            if ((contains(value, 0 ,4, "VAN ", "VON ") || contains(value, 0, 3, "SCH")) || contains(value, index + 1, 2, "ET")) {
-                //-- obvious germanic --//
-                result.append('K');
-            } else if (contains(value, index + 1, 4, "IER")) {
-                result.append('J');
-            } else {
-                result.append('J', 'K');
+    return index + 2;
 }
-            index += 2;
-        } else if (charAt(value, index + 1) == 'G') {
-            index += 2;
-            result.append('K');
-        } else {
-            index++;
-            result.append('K');
-        }
-        return index;
+
+/**
+ * Handles 'GGN' cases
+ */
+private int handleGGN(String value, DoubleMetaphoneResult result, int index, boolean slavoGermanic) {
+    result.append("KN");
+    return index + 3;
 }
\ No newline at end of file

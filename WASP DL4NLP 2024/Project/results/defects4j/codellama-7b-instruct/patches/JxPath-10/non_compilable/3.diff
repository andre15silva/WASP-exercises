diff --git a/tmp/2f0d24b6-a2d1-4e32-8101-562b25882229_buggy.java b/tmp/416ceb01-81d4-4b11-b27e-ec7dcd00d2e9_fixed.java
index b86b44d..545502d 100644
--- a/tmp/2f0d24b6-a2d1-4e32-8101-562b25882229_buggy.java
+++ b/tmp/416ceb01-81d4-4b11-b27e-ec7dcd00d2e9_fixed.java
@@ -1,4 +1,21 @@
-    public final Object computeValue(EvalContext context) {
-        return compute(args[0].computeValue(context), args[1].computeValue(context))
-                ? Boolean.TRUE : Boolean.FALSE;
+    private EvalContext context;
+
+    public XPathTester(EvalContext context) {
+        this.context = context;
+    }
+
+    public void testEmptyNodeSetOperations() {
+        assertXPathValue(context, "/idonotexist = 0", Boolean.FALSE, Boolean.class);
+        assertXPathValue(context, "/idonotexist != 0", Boolean.FALSE, Boolean.class);
+        assertXPathValue(context, "/idonotexist < 0", Boolean.FALSE, Boolean.class);
+        assertXPathValue(context, "/idonotexist > 0", Boolean.FALSE, Boolean.class);
+        assertXPathValue(context, "/idonotexist >= 0", Boolean.FALSE, Boolean.class);
+        assertXPathValue(context, "/idonotexist <= 0", Boolean.FALSE, Boolean.class);
+        assertXPathValue(context, "$array[position() < 1] = 0", Boolean.FALSE, Boolean.class);
+        assertXPathValue(context, "$array[position() < 1] != 0", Boolean.FALSE, Boolean.class);
+        assertXPathValue(context, "$array[position() < 1] < 0", Boolean.FALSE, Boolean.class);
+        assertXPathValue(context, "$array[position() < 1] > 0", Boolean.FALSE, Boolean.class);
+        assertXPathValue(context, "$array[position() < 1] >= 0", Boolean.FALSE, Boolean.class);
+        assertXPathValue(context, "$array[position() < 1] <= 0", Boolean.FALSE, Boolean.class);
+    }
 }
\ No newline at end of file

diff --git a/tmp/3fd58b32-2f9b-4993-ad9a-5070cd2f053e_buggy.java b/tmp/855f2c86-0543-4a1d-b8b5-db8041ee8255_fixed.java
index 39dd8e7..348ed1c 100644
--- a/tmp/3fd58b32-2f9b-4993-ad9a-5070cd2f053e_buggy.java
+++ b/tmp/855f2c86-0543-4a1d-b8b5-db8041ee8255_fixed.java
@@ -1,30 +1,30 @@
-    private Attribute parseAttribute() {
+    private Attribute parseAttribute(int index) {
         tq.consumeWhitespace();
-        String key = tq.consumeAttributeKey();
+        String key = tq.consumeAttributeKey(index);
         String value = "";
         tq.consumeWhitespace();
-        if (tq.matchChomp("=")) {
+        if (tq.matchChomp("=", index)) {
             tq.consumeWhitespace();
 
-            if (tq.matchChomp(SQ)) {
-                value = tq.chompTo(SQ);
-            } else if (tq.matchChomp(DQ)) {
-                value = tq.chompTo(DQ);
+            if (tq.matchChomp(SQ, index)) {
+                value = tq.chompTo(SQ, index);
+            } else if (tq.matchChomp(DQ, index)) {
+                value = tq.chompTo(DQ, index);
             } else {
                 StringBuilder valueAccum = new StringBuilder();
                 // no ' or " to look for, so scan to end tag or space (or end of stream)
                 while (!tq.matchesAny("<", "/>", ">") && !tq.matchesWhitespace() && !tq.isEmpty()) {
-                    valueAccum.append(tq.consume());
+                    valueAccum.append(tq.consume(index));
                 }
                 value = valueAccum.toString();
             }
             tq.consumeWhitespace();
         }
         if (key.length() != 0)
             return Attribute.createFromEncoded(key, value);
         else {
             tq.consume();
                 
             return null;
         }
     }

diff --git a/tmp/caff117e-be0d-40dd-9c5b-ef40fe303d77_buggy.java b/tmp/89bfc690-f19b-4b6f-993e-3ef70396ab83_fixed.java
index 39dd8e7..6eb0e03 100644
--- a/tmp/caff117e-be0d-40dd-9c5b-ef40fe303d77_buggy.java
+++ b/tmp/89bfc690-f19b-4b6f-993e-3ef70396ab83_fixed.java
@@ -1,30 +1,36 @@
     private Attribute parseAttribute() {
         tq.consumeWhitespace();
         String key = tq.consumeAttributeKey();
         String value = "";
         tq.consumeWhitespace();
         if (tq.matchChomp("=")) {
             tq.consumeWhitespace();
 
             if (tq.matchChomp(SQ)) {
                 value = tq.chompTo(SQ);
             } else if (tq.matchChomp(DQ)) {
                 value = tq.chompTo(DQ);
             } else {
                 StringBuilder valueAccum = new StringBuilder();
                 // no ' or " to look for, so scan to end tag or space (or end of stream)
-                while (!tq.matchesAny("<", "/>", ">") && !tq.matchesWhitespace() && !tq.isEmpty()) {
-                    valueAccum.append(tq.consume());
+                while (true) {
+                    char c = tq.current();
+                    if (c == '<' || c == '>' || c == '/' || c == '>' || Character.isWhitespace(c) || c == 0) {
+                        break;
+                    } else {
+                        valueAccum.append(c);
+                        tq.consume();
+                    }
                 }
                 value = valueAccum.toString();
             }
             tq.consumeWhitespace();
         }
         if (key.length() != 0)
             return Attribute.createFromEncoded(key, value);
         else {
             tq.consume();
                 
             return null;
         }
     }

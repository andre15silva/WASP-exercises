diff --git a/tmp/62ffc7e7-e53a-48c5-8472-63b8c154286b_buggy.java b/tmp/cffae194-5553-4211-8e3f-7b7666a0dd8b_fixed.java
index 6e238e7..173e8d9 100644
--- a/tmp/62ffc7e7-e53a-48c5-8472-63b8c154286b_buggy.java
+++ b/tmp/cffae194-5553-4211-8e3f-7b7666a0dd8b_fixed.java
@@ -1,15 +1,14 @@
-    /**
-     * Calculates the L<sub>2</sub> (Euclidean) distance between two points.
-     *
-     * @param p1 the first point
-     * @param p2 the second point
-     * @return the L<sub>2</sub> distance between the two points
-     */
 public static double distance(int[] p1, int[] p2) {
-      int sum = 0;
-      for (int i = 0; i < p1.length; i++) {
-          final int dp = p1[i] - p2[i];
-          sum += dp * dp;
+    if (similar(p1, p2)) {
+        return euclideanDistance(p1, p2);
+    } else {
+        return Double.POSITIVE_INFINITY;
     }
-      return Math.sqrt(sum);
+}
+
+private static boolean similar(int[] p1, int[] p2) {
+    // This can be further optimized by using a Levenshtein distance algorithm
+    // or a dynamic programming approach to calculate the similarity between
+    // two strings.
+    return Arrays.equals(p1, p2);
 }
\ No newline at end of file

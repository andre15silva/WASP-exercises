diff --git a/tmp/91b26867-41fe-46e5-a3c3-5828dc44dc56_buggy.java b/tmp/dc5eaf7a-107b-46a2-b289-d7d22488589b_fixed.java
index 01967cc..5a2a63c 100644
--- a/tmp/91b26867-41fe-46e5-a3c3-5828dc44dc56_buggy.java
+++ b/tmp/dc5eaf7a-107b-46a2-b289-d7d22488589b_fixed.java
@@ -1,35 +1,26 @@
-        /**
-         * Method called to check if the default type handler should be
-         * used for given type.
-         * Note: "natural types" (String, Boolean, Integer, Double) will never
-         * use typing; that is both due to them being concrete and final,
-         * and since actual serializers and deserializers will also ignore any
-         * attempts to enforce typing.
-         */
 public boolean useForType(JavaType t)
 {
     switch (_appliesFor) {
     case NON_CONCRETE_AND_ARRAYS:
         while (t.isArrayType()) {
             t = t.getContentType();
         }
         // fall through
     case OBJECT_AND_NON_CONCRETE:
 //        return t.isJavaLangObject() || 
-                return (t.getRawClass() == Object.class)
+        return (t.isJavaLangObject() || t.getRawClass() == Object.class)
                 || (!t.isConcrete()
                         // [databind#88] Should not apply to JSON tree models:
-                        || TreeNode.class.isAssignableFrom(t.getRawClass()));
+                && !(TreeNode.class.isAssignableFrom(t.getRawClass())) );
 
     case NON_FINAL:
         while (t.isArrayType()) {
             t = t.getContentType();
         }
-                // [Issue#88] Should not apply to JSON tree models:
-                return !t.isFinal() && !TreeNode.class.isAssignableFrom(t.getRawClass());
+        return !t.isFinal() && !(TreeNode.class.isAssignableFrom(t.getRawClass()));
     default:
     //case JAVA_LANG_OBJECT:
 //        return t.isJavaLangObject();
         return (t.getRawClass() == Object.class);
     }
 }
\ No newline at end of file

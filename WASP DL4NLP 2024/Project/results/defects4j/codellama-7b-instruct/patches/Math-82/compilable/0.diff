diff --git a/tmp/2e4440c3-8125-4ef4-a087-c0908fe493e6_buggy.java b/tmp/e483e424-0ea0-48ad-9297-ba1e47a7d0bc_fixed.java
index 220820e..3742fed 100644
--- a/tmp/2e4440c3-8125-4ef4-a087-c0908fe493e6_buggy.java
+++ b/tmp/e483e424-0ea0-48ad-9297-ba1e47a7d0bc_fixed.java
@@ -1,22 +1,25 @@
     /**
      * Returns the row with the minimum ratio as given by the minimum ratio test (MRT).
      * @param tableau simple tableau for the problem
      * @param col the column to test the ratio of.  See {@link #getPivotColumn(SimplexTableau)}
-     * @return row with the minimum ratio
+     * @return row with the minimum ratio, or null if no such row exists
      */
     private Integer getPivotRow(final int col, final SimplexTableau tableau) {
         double minRatio = Double.MAX_VALUE;
         Integer minRatioPos = null;
         for (int i = tableau.getNumObjectiveFunctions(); i < tableau.getHeight(); i++) {
             final double rhs = tableau.getEntry(i, tableau.getWidth() - 1);
             final double entry = tableau.getEntry(i, col);
             if (MathUtils.compareTo(entry, 0, epsilon) >= 0) {
                 final double ratio = rhs / entry;
+                if (ratio < 0) {
+                    return null;
+                }
                 if (ratio < minRatio) {
                     minRatio = ratio;
                     minRatioPos = i;
                 }
             }
         }
         return minRatioPos;
     }
\ No newline at end of file

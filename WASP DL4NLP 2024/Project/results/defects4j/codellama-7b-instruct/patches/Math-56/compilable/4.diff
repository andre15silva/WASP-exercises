diff --git a/tmp/f92e4793-d4d5-4170-aee2-f7d18727fad5_buggy.java b/tmp/88176e8b-7fb4-4f60-b200-a79cb7309012_fixed.java
index 2608424..6eb7f84 100644
--- a/tmp/f92e4793-d4d5-4170-aee2-f7d18727fad5_buggy.java
+++ b/tmp/88176e8b-7fb4-4f60-b200-a79cb7309012_fixed.java
@@ -1,39 +1,28 @@
-    /**
-     * Convert to multidimensional counter.
-     *
-     * @param index Index in unidimensional counter.
-     * @return the multidimensional counts.
-     * @throws OutOfRangeException if {@code index} is not between
-     * {@code 0} and the value returned by {@link #getSize()} (excluded).
-     */
     public int[] getCounts(int index) {
         if (index < 0 ||
             index >= totalSize) {
             throw new OutOfRangeException(index, 0, totalSize);
         }
 
         final int[] indices = new int[dimension];
 
-        int count = 0;
+        int currentIndex = 0;
         for (int i = 0; i < last; i++) {
-            int idx = 0;
             final int offset = uniCounterOffset[i];
-            while (count <= index) {
-                count += offset;
-                ++idx;
+            while (currentIndex < index) {
+                currentIndex += offset;
             }
-            --idx;
-            count -= offset;
+            final int idx = currentIndex - offset;
             indices[i] = idx;
         }
 
         int idx = 1;
-        while (count < index) {
-            count += idx;
+        while (currentIndex < index) {
+            currentIndex += idx;
             ++idx;
         }
         --idx;
         indices[last] = idx;
 
         return indices;
     }

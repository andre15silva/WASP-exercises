diff --git a/tmp/9d86052c-3b2a-4051-8ea0-42d240e19924_buggy.java b/tmp/7e4eaaed-7dd2-4c8d-935c-6dc805d15b50_fixed.java
index f650982..78753c8 100644
--- a/tmp/9d86052c-3b2a-4051-8ea0-42d240e19924_buggy.java
+++ b/tmp/7e4eaaed-7dd2-4c8d-935c-6dc805d15b50_fixed.java
@@ -1,42 +1,30 @@
-    /**
-     * Compares two values
-     */
     protected boolean equal(
         EvalContext context,
-        Expression left,
-        Expression right) 
+        Object left,
+        Object right) 
     {
-        Object l = left.compute(context);
-        Object r = right.compute(context);
+        Object l = left;
+        Object r = right;
 
-//        System.err.println("COMPARING: " +
-//            (l == null ? "null" : l.getClass().getName()) + " " +
-//            (r == null ? "null" : r.getClass().getName()));
+        // if (l instanceof Collection) {
+        //     l = ((Collection) l).iterator();
+        // }
 
-        if (l instanceof InitialContext || l instanceof SelfContext) {
-            l = ((EvalContext) l).getSingleNodePointer();
-        }
+        // if (r instanceof Collection) {
+        //     r = ((Collection) r).iterator();
+        // }
 
-        if (r instanceof InitialContext || r instanceof SelfContext) {
-            r = ((EvalContext) r).getSingleNodePointer();
-        }
+        // if (l instanceof Iterator && r instanceof Iterator) {
+        //     return findMatch((Iterator) l, (Iterator) r);
+        // }
 
-        if (l instanceof Collection) {
-            l = ((Collection) l).iterator();
-        }
+        // if (l instanceof Iterator) {
+        //     return contains((Iterator) l, r);
+        // }
 
-        if (r instanceof Collection) {
-            r = ((Collection) r).iterator();
-        }
+        // if (r instanceof Iterator) {
+        //     return contains(r, (Iterator) l);
+        // }
 
-        if ((l instanceof Iterator) && !(r instanceof Iterator)) {
-            return contains((Iterator) l, r);
-        }
-        if (!(l instanceof Iterator) && (r instanceof Iterator)) {
-            return contains((Iterator) r, l);
-        }
-        if (l instanceof Iterator && r instanceof Iterator) {
-            return findMatch((Iterator) l, (Iterator) r);
-        }
         return equal(l, r);
     }
\ No newline at end of file

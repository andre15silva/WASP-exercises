diff --git a/tmp/403f87c9-92be-4c07-8bd3-05ad0eadf156_buggy.java b/tmp/07e2476e-a3e3-4f61-bdfb-eaf37f954c3e_fixed.java
index f650982..b6d74bd 100644
--- a/tmp/403f87c9-92be-4c07-8bd3-05ad0eadf156_buggy.java
+++ b/tmp/07e2476e-a3e3-4f61-bdfb-eaf37f954c3e_fixed.java
@@ -1,42 +1,22 @@
-    /**
-     * Compares two values
-     */
 protected boolean equal(
         EvalContext context,
         Expression left,
         Expression right) 
     {
         Object l = left.compute(context);
         Object r = right.compute(context);
     
-//        System.err.println("COMPARING: " +
-//            (l == null ? "null" : l.getClass().getName()) + " " +
-//            (r == null ? "null" : r.getClass().getName()));
-
-        if (l instanceof InitialContext || l instanceof SelfContext) {
-            l = ((EvalContext) l).getSingleNodePointer();
-        }
-
-        if (r instanceof InitialContext || r instanceof SelfContext) {
-            r = ((EvalContext) r).getSingleNodePointer();
-        }
-
-        if (l instanceof Collection) {
-            l = ((Collection) l).iterator();
-        }
-
-        if (r instanceof Collection) {
-            r = ((Collection) r).iterator();
-        }
-
-        if ((l instanceof Iterator) && !(r instanceof Iterator)) {
-            return contains((Iterator) l, r);
-        }
-        if (!(l instanceof Iterator) && (r instanceof Iterator)) {
-            return contains((Iterator) r, l);
-        }
         if (l instanceof Iterator && r instanceof Iterator) {
-            return findMatch((Iterator) l, (Iterator) r);
+            // Check if any element from left side matches any element from the right side
+            while (l.hasNext()) {
+                if (r.hasNext()) {
+                    if (equal(l.next(), r.next())) {
+                        return true;
                     }
-        return equal(l, r);
+                }
+            }
+        }
+    
+        // If we reached this point, there was no matching pair
+        return false;
     }
\ No newline at end of file

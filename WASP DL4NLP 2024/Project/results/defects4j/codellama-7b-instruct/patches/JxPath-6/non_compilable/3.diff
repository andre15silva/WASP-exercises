diff --git a/tmp/eaf2c32a-5bb6-444e-8495-5d3cc8abc5c9_buggy.java b/tmp/b328cab3-e2d6-4078-8698-5f14e38191cb_fixed.java
index f650982..8155c0c 100644
--- a/tmp/eaf2c32a-5bb6-444e-8495-5d3cc8abc5c9_buggy.java
+++ b/tmp/b328cab3-e2d6-4078-8698-5f14e38191cb_fixed.java
@@ -1,42 +1,31 @@
-    /**
-     * Compares two values
-     */
-    protected boolean equal(
-        EvalContext context,
-        Expression left,
-        Expression right) 
-    {
-        Object l = left.compute(context);
-        Object r = right.compute(context);
-
-//        System.err.println("COMPARING: " +
-//            (l == null ? "null" : l.getClass().getName()) + " " +
-//            (r == null ? "null" : r.getClass().getName()));
+protected boolean equal(Expression left, Expression right)  {
+    Object l = left.compute();
+    Object r = right.compute();
 
     if (l instanceof InitialContext || l instanceof SelfContext) {
         l = ((EvalContext) l).getSingleNodePointer();
     }
 
     if (r instanceof InitialContext || r instanceof SelfContext) {
         r = ((EvalContext) r).getSingleNodePointer();
     }
 
     if (l instanceof Collection) {
         l = ((Collection) l).iterator();
     }
 
     if (r instanceof Collection) {
         r = ((Collection) r).iterator();
     }
 
     if ((l instanceof Iterator) && !(r instanceof Iterator)) {
         return contains((Iterator) l, r);
     }
     if (!(l instanceof Iterator) && (r instanceof Iterator)) {
         return contains((Iterator) r, l);
     }
     if (l instanceof Iterator && r instanceof Iterator) {
         return findMatch((Iterator) l, (Iterator) r);
     }
     return equal(l, r);
 }
\ No newline at end of file

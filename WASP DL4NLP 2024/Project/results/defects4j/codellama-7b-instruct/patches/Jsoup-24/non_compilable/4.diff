diff --git a/tmp/847ed6c2-428c-431d-b125-d5d31a1b590e_buggy.java b/tmp/c2f03a02-f46c-4e80-ab4f-ad22d8309db2_fixed.java
index b2d53db..5e1722c 100644
--- a/tmp/847ed6c2-428c-431d-b125-d5d31a1b590e_buggy.java
+++ b/tmp/c2f03a02-f46c-4e80-ab4f-ad22d8309db2_fixed.java
@@ -1,34 +1,13 @@
 void read(Tokeniser t, CharacterReader r) {
-            if (r.matchesLetter()) {
-                String name = r.consumeLetterSequence();
-                t.tagPending.appendTagName(name.toLowerCase());
-                t.dataBuffer.append(name);
-                r.advance();
-                return;
-            }
-
-            if (t.isAppropriateEndTagToken() && !r.isEmpty()) {
+    // ...
     char c = r.consume();
-                switch (c) {
-                    case '\t':
-                    case '\n':
-                    case '\f':
-                    case ' ':
-                        t.transition(BeforeAttributeName);
-                        break;
-                    case '/':
-                        t.transition(SelfClosingStartTag);
-                        break;
-                    case '>':
-                        t.emitTagPending();
-                        t.transition(Data);
-                        break;
-                    default:
-                        t.dataBuffer.append(c);
-                        anythingElse(t, r);
-                        break;
-                }
+    if (c == '\'' || c == '"') {
+        t.markPendingTags();
+        t.tagPending.appendTagName(t.dataPending.toString());
+        t.dataPending.clear();
+        t.transition(AttributeValue_unquoted);
     } else {
-                anythingElse(t, r);
+        t.dataPending.append(c);
     }
+    // ...
 }
\ No newline at end of file

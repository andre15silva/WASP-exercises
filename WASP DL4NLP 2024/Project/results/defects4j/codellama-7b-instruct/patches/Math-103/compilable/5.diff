diff --git a/tmp/ec5413da-cb0f-4eee-bef1-d1eacd5f0fe9_buggy.java b/tmp/cd7573f9-c83b-43c2-90a2-0fdf29949879_fixed.java
index 6cfa79b..210649d 100644
--- a/tmp/ec5413da-cb0f-4eee-bef1-d1eacd5f0fe9_buggy.java
+++ b/tmp/cd7573f9-c83b-43c2-90a2-0fdf29949879_fixed.java
@@ -1,12 +1,22 @@
     /**
      * For this disbution, X, this method returns P(X &lt; <code>x</code>).
      * @param x the value at which the CDF is evaluated.
      * @return CDF evaluted at <code>x</code>. 
      * @throws MathException if the algorithm fails to converge; unless
      * x is more than 20 standard deviations from the mean, in which case the
      * convergence exception is caught and 0 or 1 is returned.
      */
     public double cumulativeProbability(double x) throws MathException {
+            try {
                 return 0.5 * (1.0 + Erf.erf((x - mean) /
                         (standardDeviation * Math.sqrt(2.0))));
             }
+            catch (MaxIterationsExceededException e) {
+                if (Math.abs((x - mean) / standardDeviation) > 20) {
+                    return 0.0;
+                }
+                else {
+                    throw e;
+                }
+            }
+    }

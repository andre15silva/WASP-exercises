diff --git a/tmp/63562204-c5eb-4bb3-ac88-5840b061176d_buggy.java b/tmp/c33b60be-0e68-44d1-ab9e-73932da159ca_fixed.java
index 6cfa79b..d9a1334 100644
--- a/tmp/63562204-c5eb-4bb3-ac88-5840b061176d_buggy.java
+++ b/tmp/c33b60be-0e68-44d1-ab9e-73932da159ca_fixed.java
@@ -1,12 +1,12 @@
-    /**
-     * For this disbution, X, this method returns P(X &lt; <code>x</code>).
-     * @param x the value at which the CDF is evaluated.
-     * @return CDF evaluted at <code>x</code>. 
-     * @throws MathException if the algorithm fails to converge; unless
-     * x is more than 20 standard deviations from the mean, in which case the
-     * convergence exception is caught and 0 or 1 is returned.
-     */
-    public double cumulativeProbability(double x) throws MathException {
-            return 0.5 * (1.0 + Erf.erf((x - mean) /
-                    (standardDeviation * Math.sqrt(2.0))));
+    public double cumulativeProbability(double x) throws MaxIterationsExceededException {
+        double xm = mean;
+        double sigma = standardDeviation;
+        // adjusted interval
+        double adjustedInterval = 20 * sigma;
+        if (Math.abs(x - xm) > adjustedInterval) {
+            return 0.0d;
+        }
+        // normal case
+        double z = (x - xm) / sigma;
+        return 0.5 * (1.0 + Erf.erf(z / Math.sqrt(2.0)));
     }

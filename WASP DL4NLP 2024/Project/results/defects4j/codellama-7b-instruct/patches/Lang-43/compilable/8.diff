diff --git a/tmp/87f40674-2a48-4eb3-b5c2-aa01dfd29808_buggy.java b/tmp/2f370f12-c575-458a-ae26-c3f2313d4db2_fixed.java
index b6b11b6..ec41f35 100644
--- a/tmp/87f40674-2a48-4eb3-b5c2-aa01dfd29808_buggy.java
+++ b/tmp/2f370f12-c575-458a-ae26-c3f2313d4db2_fixed.java
@@ -1,38 +1,32 @@
-    /**
-     * Consume a quoted string, adding it to <code>appendTo</code> if
-     * specified.
-     * 
-     * @param pattern pattern to parse
-     * @param pos current parse position
-     * @param appendTo optional StringBuffer to append
-     * @param escapingOn whether to process escaped quotes
-     * @return <code>appendTo</code>
-     */
 private StringBuffer appendQuotedString(String pattern, ParsePosition pos,
                     StringBuffer appendTo, boolean escapingOn) {
         int start = pos.getIndex();
         char[] c = pattern.toCharArray();
         if (escapingOn && c[start] == QUOTE) {
             return appendTo == null ? null : appendTo.append(QUOTE);
         }
         int lastHold = start;
         for (int i = pos.getIndex(); i < pattern.length(); i++) {
             if (escapingOn && pattern.substring(i).startsWith(ESCAPED_QUOTE)) {
                 appendTo.append(c, lastHold, pos.getIndex() - lastHold).append(
                       QUOTE);
                 pos.setIndex(i + ESCAPED_QUOTE.length());
                 lastHold = pos.getIndex();
                 continue;
             }
             switch (c[pos.getIndex()]) {
             case QUOTE:
                 next(pos);
                 return appendTo == null ? null : appendTo.append(c, lastHold,
                         pos.getIndex() - lastHold);
             default:
                 next(pos);
             }
         }
+        if (c[pos.getIndex()] != QUOTE) {
             throw new IllegalArgumentException(
                     "Unterminated quoted string at position " + start);
         }
+        return appendTo == null ? null : appendTo.append(c, lastHold,
+                pos.getIndex() - lastHold);
+    }
\ No newline at end of file

diff --git a/tmp/98e6614f-23cb-4474-a0ea-baaaf6d27ea1_buggy.java b/tmp/4db0c4b6-97e7-4dab-84dc-ba161723cb42_fixed.java
index 618906f..11310bc 100644
--- a/tmp/98e6614f-23cb-4474-a0ea-baaaf6d27ea1_buggy.java
+++ b/tmp/4db0c4b6-97e7-4dab-84dc-ba161723cb42_fixed.java
@@ -1,15 +1,19 @@
     @Override
-    public void acceptJsonFormatVisitor(JsonFormatVisitorWrapper visitor, JavaType typeHint) throws JsonMappingException
-    {
-        if (_isInt) {
-            visitIntFormat(visitor, typeHint, JsonParser.NumberType.BIG_INTEGER);
-        } else {
-            Class<?> h = handledType();
+    public JsonNumberFormatVisitor expectNumberFormat(JavaType typeHint) throws JsonMappingException {
         if (h == BigDecimal.class) {
-                visitFloatFormat(visitor, typeHint, JsonParser.NumberType.BIG_INTEGER);
+            return new JsonNumberFormatVisitor() {
+                @Override
+                public void format(JsonValueFormat format) {
+                    sb.append("[numberFormat=").append(format).append("]");
+                }
+                @Override
+                public void enumTypes(Set<String> enums) { }
+                @Override
+                public void numberType(NumberType numberType) {
+                    sb.append("[numberType=BIG_DECIMAL]");
+                }
+            };
         } else {
-                // otherwise bit unclear what to call... but let's try:
-                /*JsonNumberFormatVisitor v2 =*/ visitor.expectNumberFormat(typeHint);
-            }
+            return visitor.expectNumberFormat(typeHint);
         }
     }
\ No newline at end of file

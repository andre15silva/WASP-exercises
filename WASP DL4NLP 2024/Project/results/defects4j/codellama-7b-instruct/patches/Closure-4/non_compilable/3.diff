diff --git a/tmp/a5684511-4a22-4c94-84c7-b48e38728821_buggy.java b/tmp/da96e816-0dc2-492a-91b4-daf7512ef5dd_fixed.java
index d6a560a..4729513 100644
--- a/tmp/a5684511-4a22-4c94-84c7-b48e38728821_buggy.java
+++ b/tmp/da96e816-0dc2-492a-91b4-daf7512ef5dd_fixed.java
@@ -1,33 +1,6 @@
-  /**
-   * Resolve the referenced type within the enclosing scope.
-   */
-  @Override
-  JSType resolveInternal(ErrorReporter t, StaticScope<JSType> enclosing) {
-    // TODO(user): Investigate whether it is really necessary to keep two
-    // different mechanisms for resolving named types, and if so, which order
-    // makes more sense. Now, resolution via registry is first in order to
-    // avoid triggering the warnings built into the resolution via properties.
-    boolean resolved = resolveViaRegistry(t, enclosing);
-    if (detectImplicitPrototypeCycle()) {
-      handleTypeCycle(t);
-    }
-
 if (resolved) {
   super.resolveInternal(t, enclosing);
   finishPropertyContinuations();
   return registry.isLastGeneration() ?
       getReferencedType() : this;
 }
-
-    resolveViaProperties(t, enclosing);
-    if (detectImplicitPrototypeCycle()) {
-      handleTypeCycle(t);
-    }
-
-    super.resolveInternal(t, enclosing);
-    if (isResolved()) {
-      finishPropertyContinuations();
-    }
-    return registry.isLastGeneration() ?
-        getReferencedType() : this;
-  }

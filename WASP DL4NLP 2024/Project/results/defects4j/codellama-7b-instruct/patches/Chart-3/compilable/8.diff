diff --git a/tmp/8794c4ea-8088-4871-90ec-559e3c92472e_buggy.java b/tmp/51003618-e294-4938-898d-b5525394d122_fixed.java
index 388771b..565eb64 100644
--- a/tmp/8794c4ea-8088-4871-90ec-559e3c92472e_buggy.java
+++ b/tmp/51003618-e294-4938-898d-b5525394d122_fixed.java
@@ -1,37 +1,20 @@
-    /**
-     * Creates a new timeseries by copying a subset of the data in this time
-     * series.
-     *
-     * @param start  the index of the first time period to copy.
-     * @param end  the index of the last time period to copy.
-     *
-     * @return A series containing a copy of this times series from start until
-     *         end.
-     *
-     * @throws CloneNotSupportedException if there is a cloning problem.
-     */
-    public TimeSeries createCopy(int start, int end)
-            throws CloneNotSupportedException {
-        if (start < 0) {
-            throw new IllegalArgumentException("Requires start >= 0.");
-        }
-        if (end < start) {
-            throw new IllegalArgumentException("Requires start <= end.");
+public TimeSeries createCopy(int start, int end) throws CloneNotSupportedException {
+    if (start < 0 || end < start) {
+        throw new IllegalArgumentException("Requires start >= 0 and start <= end.");
     }
+
     TimeSeries copy = (TimeSeries) super.clone();
     copy.data = new java.util.ArrayList();
-        if (this.data.size() > 0) {
     for (int index = start; index <= end; index++) {
-                TimeSeriesDataItem item
-                        = (TimeSeriesDataItem) this.data.get(index);
+        TimeSeriesDataItem item = (TimeSeriesDataItem) this.data.get(index);
         TimeSeriesDataItem clone = (TimeSeriesDataItem) item.clone();
         try {
             copy.add(clone);
         }
         catch (SeriesException e) {
-                    e.printStackTrace();
-                }
+            continue;
         }
     }
+
     return copy;
 }
\ No newline at end of file

diff --git a/tmp/a0a659f8-fe7b-470b-9520-773290ddba70_buggy.java b/tmp/38c18d0c-cd50-4e2d-ae54-363c279e7d0f_fixed.java
index 42b58d0..a450501 100644
--- a/tmp/a0a659f8-fe7b-470b-9520-773290ddba70_buggy.java
+++ b/tmp/38c18d0c-cd50-4e2d-ae54-363c279e7d0f_fixed.java
@@ -1,19 +1,5 @@
-    protected void registerTypeVariablesOn(Type classType) {
-        if (!(classType instanceof ParameterizedType)) {
-            return;
-        }
-        ParameterizedType parameterizedType = (ParameterizedType) classType;
-        TypeVariable[] typeParameters = ((Class<?>) parameterizedType.getRawType()).getTypeParameters();
-        Type[] actualTypeArguments = parameterizedType.getActualTypeArguments();
-        for (int i = 0; i < actualTypeArguments.length; i++) {
-            TypeVariable typeParameter = typeParameters[i];
-            Type actualTypeArgument = actualTypeArguments[i];
-
-            if (actualTypeArgument instanceof WildcardType) {
-                contextualActualTypeParameters.put(typeParameter, boundsOf((WildcardType) actualTypeArgument));
-            } else {
-                contextualActualTypeParameters.put(typeParameter, actualTypeArgument);
-            }
-            // logger.log("For '" + parameterizedType + "' found type variable : { '" + typeParameter + "(" + System.identityHashCode(typeParameter) + ")" + "' : '" + actualTypeArgument + "(" + System.identityHashCode(typeParameter) + ")" + "' }");
+    protected void registerTypeVariablesOn() {
+            // BUG: Infinite recursion
+            registerTypeVariablesOn();
         }
     }
\ No newline at end of file

diff --git a/tmp/22a8f993-b1e3-4df7-bdc4-04688802169b_buggy.java b/tmp/02e74881-8214-4d76-83e7-5eae95bd83eb_fixed.java
index 57c40b2..c3b9c58 100644
--- a/tmp/22a8f993-b1e3-4df7-bdc4-04688802169b_buggy.java
+++ b/tmp/02e74881-8214-4d76-83e7-5eae95bd83eb_fixed.java
@@ -1,27 +1,23 @@
-  /**
-   * Visits a GETPROP node.
-   *
-   * @param t The node traversal object that supplies context, such as the
-   * scope chain to use in name lookups as well as error reporting.
-   * @param n The node being visited.
-   * @param parent The parent of <code>n</code>
-   */
-  private void visitGetProp(NodeTraversal t, Node n, Node parent) {
-    // obj.prop or obj.method()
-    // Lots of types can appear on the left, a call to a void function can
-    // never be on the left. getPropertyType will decide what is acceptable
-    // and what isn't.
-    Node property = n.getLastChild();
-    Node objNode = n.getFirstChild();
-    JSType childType = getJSType(objNode);
+  private static class Validator {
+    public boolean expectNotNullOrUndefined(NodeTraversal t, Node n, JSType type, String errorMessagePrefix,
+        JSType nativeType) {
+      throw new RuntimeException("skeleton method");
+    }
+  }
+
+  private void checkPropertyAccess(JSType propertyType, String propertyName, NodeTraversal t, Node n) {
+    throw new RuntimeException("skeleton method");
+  }
 
-    if (childType.isDict()) {
-      report(t, property, TypeValidator.ILLEGAL_PROPERTY_ACCESS, "'.'", "dict");
-    } else if (n.getJSType() != null && parent.isAssign()) {
-      return;
-    } else if (validator.expectNotNullOrUndefined(t, n, childType,
-        "No properties on this expression", getNativeType(OBJECT_TYPE))) {
-      checkPropertyAccess(childType, property.getString(), t, n);
+  private JSType getJSType(Node node) {
+    throw new RuntimeException("skeleton method");
   }
-    ensureTyped(t, n);
+
+  private JSType getNativeType(JSType nativeType) {
+    throw new RuntimeException("skeleton method");
+  }
+
+  private void report(NodeTraversal t, Node n, TypeValidator.Message.MessageId messageId, String arg0,
+      String arg1) {
+    throw new RuntimeException("skeleton method");
   }

diff --git a/tmp/eb4802c4-7716-4efe-ba21-ce0e9b35ac37_buggy.java b/tmp/3bca0307-0fdc-4f00-9dc2-2b04ca12a423_fixed.java
index 57c40b2..f5b3687 100644
--- a/tmp/eb4802c4-7716-4efe-ba21-ce0e9b35ac37_buggy.java
+++ b/tmp/3bca0307-0fdc-4f00-9dc2-2b04ca12a423_fixed.java
@@ -1,27 +1,2 @@
-  /**
-   * Visits a GETPROP node.
-   *
-   * @param t The node traversal object that supplies context, such as the
-   * scope chain to use in name lookups as well as error reporting.
-   * @param n The node being visited.
-   * @param parent The parent of <code>n</code>
-   */
-  private void visitGetProp(NodeTraversal t, Node n, Node parent) {
-    // obj.prop or obj.method()
-    // Lots of types can appear on the left, a call to a void function can
-    // never be on the left. getPropertyType will decide what is acceptable
-    // and what isn't.
     Node property = n.getLastChild();
     Node objNode = n.getFirstChild();
\ No newline at end of file
-    JSType childType = getJSType(objNode);
-
-    if (childType.isDict()) {
-      report(t, property, TypeValidator.ILLEGAL_PROPERTY_ACCESS, "'.'", "dict");
-    } else if (n.getJSType() != null && parent.isAssign()) {
-      return;
-    } else if (validator.expectNotNullOrUndefined(t, n, childType,
-        "No properties on this expression", getNativeType(OBJECT_TYPE))) {
-      checkPropertyAccess(childType, property.getString(), t, n);
-    }
-    ensureTyped(t, n);
-  }

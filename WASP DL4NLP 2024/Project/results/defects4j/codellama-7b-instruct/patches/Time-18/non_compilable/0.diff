diff --git a/tmp/6ec7fcd0-32e9-409e-97b2-be6d1bd0dff3_buggy.java b/tmp/2c30fab4-7834-4cfd-8731-f07be8d9205d_fixed.java
index be2af16..f54945b 100644
--- a/tmp/6ec7fcd0-32e9-409e-97b2-be6d1bd0dff3_buggy.java
+++ b/tmp/2c30fab4-7834-4cfd-8731-f07be8d9205d_fixed.java
@@ -1,29 +1,29 @@
 public long getDateTimeMillis(int year, int monthOfYear, int dayOfMonth,
-                                  int hourOfDay, int minuteOfHour,
-                                  int secondOfMinute, int millisOfSecond)
-        throws IllegalArgumentException
-    {
-        Chronology base;
-        if ((base = getBase()) != null) {
-            return base.getDateTimeMillis
-                (year, monthOfYear, dayOfMonth,
-                 hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
+        int hourOfDay, int minuteOfHour, int secondOfMinute, int millisOfSecond)
+        throws IllegalArgumentException {
+    Chronology base = getBase();
+    if (base != null) {
+        return base.getDateTimeMillis(year, monthOfYear, dayOfMonth, hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
+    }
+
+    long instant = 0;
+    try {
+        instant = iGregorianChronology.getDateTimeMillis(year, monthOfYear, dayOfMonth, hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
+    } catch (IllegalFieldValueException e) {
+        if (e.getIllegalFieldValue() == IllegalFieldValueException.DAY_OF_MONTH_VALUE) {
+            instant = iJulianChronology.getDateTimeMillis(year, monthOfYear, dayOfMonth, hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
+        } else {
+            throw e;
+        }
     }
 
-        // Assume date is Gregorian.
-        long instant;
-            instant = iGregorianChronology.getDateTimeMillis
-                (year, monthOfYear, dayOfMonth,
-                 hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
     if (instant < iCutoverMillis) {
         // Maybe it's Julian.
-            instant = iJulianChronology.getDateTimeMillis
-                (year, monthOfYear, dayOfMonth,
-                 hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
+        instant = iJulianChronology.getDateTimeMillis(year, monthOfYear, dayOfMonth, hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
         if (instant >= iCutoverMillis) {
             // Okay, it's in the illegal cutover gap.
             throw new IllegalArgumentException("Specified date does not exist");
         }
     }
     return instant;
 }

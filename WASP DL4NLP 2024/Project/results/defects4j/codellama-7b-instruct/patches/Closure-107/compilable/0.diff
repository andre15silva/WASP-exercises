diff --git a/tmp/31376763-442f-4bdd-bd6d-9f0f553ff455_buggy.java b/tmp/a76cd76a-9b0f-4283-b21a-f52643307d8e_fixed.java
index fa9dfcc..b49ac24 100644
--- a/tmp/31376763-442f-4bdd-bd6d-9f0f553ff455_buggy.java
+++ b/tmp/a76cd76a-9b0f-4283-b21a-f52643307d8e_fixed.java
@@ -1,61 +1,55 @@
   @Override
   protected CompilerOptions createOptions() {
+    // Step 1: Create the CompilerOptions
     CompilerOptions options = new CompilerOptions();
+
+    // Step 2: Set the coding convention
     if (flags.processJqueryPrimitives) {
       options.setCodingConvention(new JqueryCodingConvention());
     } else {
       options.setCodingConvention(new ClosureCodingConvention());
     }
 
+    // Step 3: Set the extra annotation names
     options.setExtraAnnotationNames(flags.extraAnnotationName);
 
+    // Step 4: Set the compilation level
     CompilationLevel level = flags.compilationLevel;
     level.setOptionsForCompilationLevel(options);
 
-    if (flags.debug) {
-      level.setDebugOptionsForCompilationLevel(options);
-    }
-
-    if (flags.useTypesForOptimization) {
-      level.setTypeBasedOptimizationOptions(options);
-    }
-
-    if (flags.generateExports) {
-      options.setGenerateExports(flags.generateExports);
-    }
-
+    // Step 5: Set the warning level
     WarningLevel wLevel = flags.warningLevel;
     wLevel.setOptionsForWarningLevel(options);
+
+    // Step 6: Set the formatting options
     for (FormattingOption formattingOption : flags.formatting) {
       formattingOption.applyToOptions(options);
     }
 
+    // Step 7: Set the Closure passes
     options.closurePass = flags.processClosurePrimitives;
-
-    options.jqueryPass = CompilationLevel.ADVANCED_OPTIMIZATIONS == level &&
-        flags.processJqueryPrimitives;
-
     options.angularPass = flags.angularPass;
 
+    // Step 8: Set the message bundle
     if (!flags.translationsFile.isEmpty()) {
       try {
         options.messageBundle = new XtbMessageBundle(
             new FileInputStream(flags.translationsFile),
             flags.translationsProject);
       } catch (IOException e) {
         throw new RuntimeException("Reading XTB file", e);
       }
     } else if (CompilationLevel.ADVANCED_OPTIMIZATIONS == level) {
       // In SIMPLE or WHITESPACE mode, if the user hasn't specified a
       // translations file, they might reasonably try to write their own
       // implementation of goog.getMsg that makes the substitution at
       // run-time.
       //
       // In ADVANCED mode, goog.getMsg is going to be renamed anyway,
       // so we might as well inline it. But shut off the i18n warnings,
       // because the user didn't really ask for i18n.
       options.messageBundle = new EmptyMessageBundle();
     }
 
     return options;
   }

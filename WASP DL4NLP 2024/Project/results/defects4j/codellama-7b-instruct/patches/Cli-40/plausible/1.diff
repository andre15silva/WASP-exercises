diff --git a/tmp/da242bca-5753-48b0-9ef5-ff5a8dec8e8c_buggy.java b/tmp/0ed0afb0-01a4-416b-a50c-bc71eaef9ff6_fixed.java
index a7d0787..d76a01a 100644
--- a/tmp/da242bca-5753-48b0-9ef5-ff5a8dec8e8c_buggy.java
+++ b/tmp/0ed0afb0-01a4-416b-a50c-bc71eaef9ff6_fixed.java
@@ -1,54 +1,53 @@
-    /**
-     * Returns the <code>Object</code> of type <code>clazz</code>
-     * with the value of <code>str</code>.
-     *
-     * @param str the command line value
-     * @param clazz the type of argument
-     * @return The instance of <code>clazz</code> initialised with
-     * the value of <code>str</code>.
-     * @throws ParseException if the value creation for the given class failed
-     */
-    @SuppressWarnings("unchecked") // returned value will have type T because it is fixed by clazz
     public static <T> T createValue(final String str, final Class<T> clazz) throws ParseException
     {
+        if (str == null)
+        {
+            throw new ParseException("String cannot be null");
+        }
+
+        if (clazz == null)
+        {
+            throw new ParseException("Class cannot be null");
+        }
+
         if (PatternOptionBuilder.STRING_VALUE == clazz)
         {
             return (T) str;
         }
         else if (PatternOptionBuilder.OBJECT_VALUE == clazz)
         {
             return (T) createObject(str);
         }
         else if (PatternOptionBuilder.NUMBER_VALUE == clazz)
         {
             return (T) createNumber(str);
         }
         else if (PatternOptionBuilder.DATE_VALUE == clazz)
         {
             return (T) createDate(str);
         }
         else if (PatternOptionBuilder.CLASS_VALUE == clazz)
         {
             return (T) createClass(str);
         }
         else if (PatternOptionBuilder.FILE_VALUE == clazz)
         {
             return (T) createFile(str);
         }
         else if (PatternOptionBuilder.EXISTING_FILE_VALUE == clazz)
         {
             return (T) openFile(str);
         }
         else if (PatternOptionBuilder.FILES_VALUE == clazz)
         {
             return (T) createFiles(str);
         }
         else if (PatternOptionBuilder.URL_VALUE == clazz)
         {
             return (T) createURL(str);
         }
         else
         {
-            return null;
+            throw new ParseException("Unable to create a value of type " + clazz.getName());
         }
     }

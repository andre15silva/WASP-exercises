diff --git a/tmp/6e31b082-2fad-44bb-900f-59092135c7ba_buggy.java b/tmp/4bc69bd8-72e8-4dd2-8b92-2721872a6be4_fixed.java
index a7d0787..13bfc81 100644
--- a/tmp/6e31b082-2fad-44bb-900f-59092135c7ba_buggy.java
+++ b/tmp/4bc69bd8-72e8-4dd2-8b92-2721872a6be4_fixed.java
@@ -1,54 +1,58 @@
-    /**
-     * Returns the <code>Object</code> of type <code>clazz</code>
-     * with the value of <code>str</code>.
-     *
-     * @param str the command line value
-     * @param clazz the type of argument
-     * @return The instance of <code>clazz</code> initialised with
-     * the value of <code>str</code>.
-     * @throws ParseException if the value creation for the given class failed
-     */
-    @SuppressWarnings("unchecked") // returned value will have type T because it is fixed by clazz
-    public static <T> T createValue(final String str, final Class<T> clazz) throws ParseException
-    {
-        if (PatternOptionBuilder.STRING_VALUE == clazz)
-        {
+public class TypeHandler {
+    
+    public static <T> T createValue(final String str, final Class<T> clazz) throws ParseException {
+        if (PatternOptionBuilder.STRING_VALUE == clazz) {
             return (T) str;
-        }
-        else if (PatternOptionBuilder.OBJECT_VALUE == clazz)
-        {
+        } else if (PatternOptionBuilder.OBJECT_VALUE == clazz) {
             return (T) createObject(str);
-        }
-        else if (PatternOptionBuilder.NUMBER_VALUE == clazz)
-        {
+        } else if (PatternOptionBuilder.NUMBER_VALUE == clazz) {
             return (T) createNumber(str);
-        }
-        else if (PatternOptionBuilder.DATE_VALUE == clazz)
-        {
+        } else if (PatternOptionBuilder.DATE_VALUE == clazz) {
             return (T) createDate(str);
-        }
-        else if (PatternOptionBuilder.CLASS_VALUE == clazz)
-        {
+        } else if (PatternOptionBuilder.CLASS_VALUE == clazz) {
             return (T) createClass(str);
-        }
-        else if (PatternOptionBuilder.FILE_VALUE == clazz)
-        {
+        } else if (PatternOptionBuilder.FILE_VALUE == clazz) {
             return (T) createFile(str);
-        }
-        else if (PatternOptionBuilder.EXISTING_FILE_VALUE == clazz)
-        {
+        } else if (PatternOptionBuilder.EXISTING_FILE_VALUE == clazz) {
             return (T) openFile(str);
-        }
-        else if (PatternOptionBuilder.FILES_VALUE == clazz)
-        {
+        } else if (PatternOptionBuilder.FILES_VALUE == clazz) {
             return (T) createFiles(str);
-        }
-        else if (PatternOptionBuilder.URL_VALUE == clazz)
-        {
+        } else if (PatternOptionBuilder.URL_VALUE == clazz) {
             return (T) createURL(str);
-        }
-        else
-        {
+        } else {
             return null;
         }
     }
+
+    private static Object createObject(String str) {
+        // implement this method
+    }
+
+    private static Number createNumber(String str) {
+        // implement this method
+    }
+
+    private static Date createDate(String str) {
+        // implement this method
+    }
+
+    private static Class<?> createClass(String str) {
+        // implement this method
+    }
+
+    private static File createFile(String str) {
+        // implement this method
+    }
+
+    private static File openFile(String str) {
+        // implement this method
+    }
+
+    private static File[] createFiles(String str) {
+        // implement this method
+    }
+
+    private static URL createURL(String str) {
+        // implement this method
+    }
+}
\ No newline at end of file

diff --git a/tmp/97b06261-34ad-4e3d-a234-d6e32990c07e_buggy.java b/tmp/ad70b65f-ca65-4805-bbfe-cf54448f0cfa_fixed.java
index 227a4ef..802eabf 100644
--- a/tmp/97b06261-34ad-4e3d-a234-d6e32990c07e_buggy.java
+++ b/tmp/ad70b65f-ca65-4805-bbfe-cf54448f0cfa_fixed.java
@@ -1,48 +1,40 @@
-    /**
-     * Render the specified text and return the rendered Options
-     * in a StringBuffer.
-     *
-     * @param sb The StringBuffer to place the rendered text into.
-     * @param width The number of characters to display per line
-     * @param nextLineTabStop The position on the next line for the first tab.
-     * @param text The text to be rendered.
-     *
-     * @return the StringBuffer with the rendered Options contents.
-     */
     protected StringBuffer renderWrappedText(StringBuffer sb, int width, 
                                              int nextLineTabStop, String text)
     {
         int pos = findWrapPos(text, width, 0);
 
         if (pos == -1)
         {
             sb.append(rtrim(text));
 
             return sb;
         }
-        sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
+
+        String trimmedText = rtrim(text.substring(0, pos));
+        sb.append(trimmedText).append(defaultNewLine);
 
         // all following lines must be padded with nextLineTabStop space 
         // characters
         final String padding = createPadding(nextLineTabStop);
 
         while (true)
         {
             int lastPos = pos;
             text = padding + text.substring(pos).trim();
             pos = findWrapPos(text, width, 0);
 
             if (pos == -1)
             {
                 sb.append(text);
 
                 return sb;
             } else
             if (pos == lastPos)
             {
                 throw new RuntimeException("Text too long for line - throwing exception to avoid infinite loop [CLI-162]: " + text);
             }
 
-            sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
+            trimmedText = rtrim(text.substring(0, pos));
+            sb.append(trimmedText).append(defaultNewLine);
         }
     }
\ No newline at end of file

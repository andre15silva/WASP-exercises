diff --git a/tmp/e4a74422-b4bf-43d3-8394-cb643dcb606e_buggy.java b/tmp/609b4fd7-2ee8-4d11-91a7-dc22aa69cdf5_fixed.java
index 40f74f7..8f1f934 100644
--- a/tmp/e4a74422-b4bf-43d3-8394-cb643dcb606e_buggy.java
+++ b/tmp/609b4fd7-2ee8-4d11-91a7-dc22aa69cdf5_fixed.java
@@ -1,50 +1,14 @@
-    public static boolean testNode(Node node, NodeTest test) {
-        if (test == null) {
-            return true;
-        }
-        if (test instanceof NodeNameTest) {
-            if (node.getNodeType() != Node.ELEMENT_NODE) {
-                return false;
-            }
-
-            NodeNameTest nodeNameTest = (NodeNameTest) test;
-            QName testName = nodeNameTest.getNodeName();
-            String namespaceURI = nodeNameTest.getNamespaceURI();
-            boolean wildcard = nodeNameTest.isWildcard();
-            String testPrefix = testName.getPrefix();
-            if (wildcard && testPrefix == null) {
-                return true;
-            }
-            if (wildcard
-                || testName.getName()
-                        .equals(DOMNodePointer.getLocalName(node))) {
-                String nodeNS = DOMNodePointer.getNamespaceURI(node);
-                return equalStrings(namespaceURI, nodeNS);
-            }
-            return false;
-        }
-        if (test instanceof NodeTypeTest) {
-            int nodeType = node.getNodeType();
-            switch (((NodeTypeTest) test).getNodeType()) {
-                case Compiler.NODE_TYPE_NODE :
-                    return nodeType == Node.ELEMENT_NODE
-                            || nodeType == Node.DOCUMENT_NODE;
-                case Compiler.NODE_TYPE_TEXT :
-                    return nodeType == Node.CDATA_SECTION_NODE
-                        || nodeType == Node.TEXT_NODE;
-                case Compiler.NODE_TYPE_COMMENT :
-                    return nodeType == Node.COMMENT_NODE;
-                case Compiler.NODE_TYPE_PI :
-                    return nodeType == Node.PROCESSING_INSTRUCTION_NODE;
-            }
-            return false;
-        }
-        if (test instanceof ProcessingInstructionTest) {
-            if (node.getNodeType() == Node.PROCESSING_INSTRUCTION_NODE) {
-                String testPI = ((ProcessingInstructionTest) test).getTarget();
-                String nodePI = ((ProcessingInstruction) node).getTarget();
-                return testPI.equals(nodePI);
-            }
-        }
-        return false;
+ public static Element findElementByXPath(Document doc, String xPath) {
+        XPathFactory xPathFactory = XPathFactory.newInstance();
+        XPath xPath = xPathFactory.newXPath();
+        try {
+            Node node = (Node) xPath.evaluate(xPath, doc.getDocumentElement(),
+                    XPathConstants.NODE);
+            if (node != null) {
+                return (Element) node;
+            }
+        } catch (XPathExpressionException e) {
+            // Handle or log the exception.
+        }
+        return null;
     }
\ No newline at end of file

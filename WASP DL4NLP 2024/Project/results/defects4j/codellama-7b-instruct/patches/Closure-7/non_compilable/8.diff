diff --git a/tmp/b4dfa163-f292-4ab1-a2b9-b405bc7c058e_buggy.java b/tmp/aadc2c4c-f4e1-4c81-baae-065fe0c6e8e6_fixed.java
index a38ec6d..d0a3d0a 100644
--- a/tmp/b4dfa163-f292-4ab1-a2b9-b405bc7c058e_buggy.java
+++ b/tmp/aadc2c4c-f4e1-4c81-baae-065fe0c6e8e6_fixed.java
@@ -1,10 +1,7 @@
-    @Override
-    public JSType caseObjectType(ObjectType type) {
-      if (value.equals("function")) {
-        JSType ctorType = getNativeType(U2U_CONSTRUCTOR_TYPE);
-        return resultEqualsValue && ctorType.isSubtype(type) ? ctorType : null;
-          // Objects are restricted to "Function", subtypes are left
-          // Only filter out subtypes of "function"
-      }
-      return matchesExpectation("object") ? type : null;
-    }
+
+Explanation:
+The bug in the code is in the last line, where it says `matchesExpectation("function")`. This should be changed to `matchesExpectation("Object")`, as the function expects an object, and not a function.
+
+Also, in the first `if` statement, it should be `value.equals("Object")`, not `value.equals("function")`. The intention of the function is to check if the value is an object, and if it is, then return the `type` object, otherwise, return `null`.
+
+So, the fixed code would be:

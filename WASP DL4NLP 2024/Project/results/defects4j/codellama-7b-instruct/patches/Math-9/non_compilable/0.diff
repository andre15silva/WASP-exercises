diff --git a/tmp/0e27ba73-3701-4de0-a6d4-91e2512c6c28_buggy.java b/tmp/3d8bcc33-72e9-420c-bb65-f9c5b42fbcb5_fixed.java
index 50f3e2e..2528ed9 100644
--- a/tmp/0e27ba73-3701-4de0-a6d4-91e2512c6c28_buggy.java
+++ b/tmp/3d8bcc33-72e9-420c-bb65-f9c5b42fbcb5_fixed.java
@@ -1,7 +1,34 @@
     /** Get a line with reversed direction.
      * @return a new instance, with reversed direction
      */
     public Line revert() {
         final Line reverted = new Line(zero, zero.subtract(direction));
         return reverted;
     }
+
+    /**
+     * Compare two vectors using a tolerance of 1e-10.
+     * @param v1 the first vector to compare
+     * @param v2 the second vector to compare
+     * @return true if v1 and v2 are within 1e-10 of each other, false otherwise
+     */
+    public static boolean equals(Vector3D v1, Vector3D v2) {
+        double dist = v1.subtract(v2).length();
+        return dist < 1e-10;
+    }
+
+    @Test
+    public void testRevert() {
+        
+        // setup
+        Line line = new Line(new Vector3D(1653345.6696423641, 6170370.041579291, 90000),
+                             new Vector3D(1650757.5050732433, 6160710.879908984, 0.9));
+        Vector3D expected = line.getDirection().negate();
+
+        // action
+        Line reverted = line.revert();
+
+        // verify
+        Assert.assertTrue(equals(reverted.getDirection(), expected));
+
+    }

diff --git a/tmp/b3370652-9595-441e-b756-0b1d556a37b1_buggy.java b/tmp/37f6aa25-ef6d-45aa-923b-6e0fb00eca23_fixed.java
index 4bbd561..95eb436 100644
--- a/tmp/b3370652-9595-441e-b756-0b1d556a37b1_buggy.java
+++ b/tmp/37f6aa25-ef6d-45aa-923b-6e0fb00eca23_fixed.java
@@ -1,37 +1,38 @@
-    /**
-     * {@inheritDoc}
-     */
-    @Override
-    public int translate(CharSequence input, int index, Writer out) throws IOException {
+public class NumericEntityUnescaper extends EscapingDetector
+{
+  protected int translate(CharSequence input, int index, Writer out)
+    throws IOException 
+  {
     // TODO: Protect from ArrayIndexOutOfBounds
     if (input.charAt(index) == '&' && input.charAt(index + 1) == '#') {
       int start = index + 2;
       boolean isHex = false;
-
       char firstChar = input.charAt(start);
       if (firstChar == 'x' || firstChar == 'X') {
         start++;
         isHex = true;
       }
 
       int end = start;
       while (input.charAt(end) != ';') {
         end++;
       }
 
       int entityValue;
       try {
         if (isHex) {
-                    entityValue = Integer.parseInt(input.subSequence(start, end).toString(), 16);
+          entityValue = Integer.parseInt(input.subSequence(start, end), 16);
         } else {
-                    entityValue = Integer.parseInt(input.subSequence(start, end).toString(), 10);
+          entityValue = Integer.parseInt(input.subSequence(start, end), 10);
         }
       } catch (NumberFormatException nfe) {
         return 0;
       }
 
       out.write(entityValue);
       return 2 + (end - start) + (isHex ? 1 : 0) + 1;
     }
+
     return 0;
   }
+}
\ No newline at end of file

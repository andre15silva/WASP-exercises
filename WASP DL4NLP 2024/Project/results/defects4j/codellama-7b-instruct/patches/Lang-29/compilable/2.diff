diff --git a/tmp/b271c337-413a-4b89-bd5c-a3d3f6234897_buggy.java b/tmp/3c1715b8-99a0-4074-8ffa-7c5736a04cbb_fixed.java
index 3ec995f..b22f984 100644
--- a/tmp/b271c337-413a-4b89-bd5c-a3d3f6234897_buggy.java
+++ b/tmp/3c1715b8-99a0-4074-8ffa-7c5736a04cbb_fixed.java
@@ -1,26 +1,11 @@
-    /**
-     * <p>
-     * Converts the given Java version string to an <code>int</code>.
-     * </p>
-     * 
-     * <p>
-     * Example return values:
-     * </p>
-     * <ul>
-     * <li><code>120</code> for Java 1.2</li>
-     * <li><code>131</code> for Java 1.3.1</li>
-     * <li><code>160</code> for Java 1.6.0_20</li>
-     * </ul>
-     * 
-     * <p>
-     * Patch releases are not reported.
-     * </p>
-     * <p>
-     * This method is package private instead of private to support unit test invocation.
-     * </p>
-     * 
-     * @return the version, for example 131 for Java 1.3.1
-     */
-    static float toJavaVersionInt(String version) {
-        return toVersionInt(toJavaVersionIntArray(version, JAVA_VERSION_TRIM_SIZE));
+    public static float toJavaVersionInt(String version) {
+        if (version == null || version.isEmpty()) {
+            return 0;
+        }
+        String[] tokens = version.split("[._]");
+        float numericVersion = 0;
+        for (int i = 0; i < tokens.length; i++) {
+            numericVersion += Float.parseFloat(tokens[i]);
+        }
+        return numericVersion;
     }
\ No newline at end of file

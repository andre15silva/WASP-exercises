diff --git a/tmp/3a3b16c9-8343-4d9d-aaac-bd904d534c51_buggy.java b/tmp/7bbc76a3-fc59-4fb4-9aa2-a547c9f12cd8_fixed.java
index 0dbce00..61e78ac 100644
--- a/tmp/3a3b16c9-8343-4d9d-aaac-bd904d534c51_buggy.java
+++ b/tmp/7bbc76a3-fc59-4fb4-9aa2-a547c9f12cd8_fixed.java
@@ -1,33 +1,15 @@
-    @Override
-    public JsonSerializer<?> createContextual(SerializerProvider serializers,
-            BeanProperty property) throws JsonMappingException
-    {
-        if (property != null) {
-            JsonFormat.Value format = serializers.getAnnotationIntrospector().findFormat((Annotated)property.getMember());
-            if (format != null) {
+public class DateAsDefaultBean {
+  private Date date;
 
-            	// Simple case first: serialize as numeric timestamp?
-                JsonFormat.Shape shape = format.getShape();
-                if (shape.isNumeric()) {
-                    return withFormat(Boolean.TRUE, null);
+  public Date getDate() {
+    return date;
   }
 
-                if (format.getShape() == JsonFormat.Shape.STRING) {
-                    TimeZone tz = format.getTimeZone();
-                    final String pattern = format.hasPattern()
-                                    ? format.getPattern()
-                                    : StdDateFormat.DATE_FORMAT_STR_ISO8601;
-                    final Locale loc = format.hasLocale()
-                                    ? format.getLocale()
-                                    : serializers.getLocale();
-                    SimpleDateFormat df = new SimpleDateFormat(pattern, loc);
-                    if (tz == null) {
-                        tz = serializers.getTimeZone();
-                    }
-                    df.setTimeZone(tz);
-                    return withFormat(Boolean.FALSE, df);
-                }
+  public void setDate(Date date) {
+    this.date = date;
   }
+
+  public String toString() {
+    return "DateAsDefaultBean(date=" + date + ")";
   }
-        return this;
 }
\ No newline at end of file

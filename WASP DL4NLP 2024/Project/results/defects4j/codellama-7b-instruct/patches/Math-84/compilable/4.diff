diff --git a/tmp/6350136c-4f94-4e70-ab8b-f55657049df7_buggy.java b/tmp/0946eb4f-6182-45ca-a165-ca8ed5c8373e_fixed.java
index 5f1dcf2..c1ef520 100644
--- a/tmp/6350136c-4f94-4e70-ab8b-f55657049df7_buggy.java
+++ b/tmp/0946eb4f-6182-45ca-a165-ca8ed5c8373e_fixed.java
@@ -1,41 +1,28 @@
-    /** {@inheritDoc} */
-    @Override
-    protected void iterateSimplex(final Comparator<RealPointValuePair> comparator)
-        throws FunctionEvaluationException, OptimizationException, IllegalArgumentException {
-
+    protected void iterateSimplex(final Comparator<RealPointValuePair> comparator) throws FunctionEvaluationException, OptimizationException, IllegalArgumentException {
         while (true) {
-
             incrementIterationsCounter();
-
             // save the original vertex
             final RealPointValuePair[] original = simplex;
             final RealPointValuePair best = original[0];
-
             // perform a reflection step
             final RealPointValuePair reflected = evaluateNewSimplex(original, 1.0, comparator);
             if (comparator.compare(reflected, best) < 0) {
-
                 // compute the expanded simplex
                 final RealPointValuePair[] reflectedSimplex = simplex;
                 final RealPointValuePair expanded = evaluateNewSimplex(original, khi, comparator);
                 if (comparator.compare(reflected, expanded) <= 0) {
                     // accept the reflected simplex
                     simplex = reflectedSimplex;
-                }
-
                     return;
-
                 }
-
+            }
             // compute the contracted simplex
             final RealPointValuePair contracted = evaluateNewSimplex(original, gamma, comparator);
             if (comparator.compare(contracted, best) < 0) {
                 // accept the contracted simplex
-
+                return;
+            }
             // check convergence
             return;
         }
-
-        }
-
     }
\ No newline at end of file

diff --git a/tmp/b5c362a4-ff35-4c28-92c0-63ee39cef092_buggy.java b/tmp/2722ac3c-b6ab-48b9-9841-879de8cbc550_fixed.java
index 0722547..25a6f7e 100644
--- a/tmp/b5c362a4-ff35-4c28-92c0-63ee39cef092_buggy.java
+++ b/tmp/2722ac3c-b6ab-48b9-9841-879de8cbc550_fixed.java
@@ -1,26 +1,21 @@
     @Override
     public void feedInput(byte[] buf, int start, int end) throws IOException
     {
-        // Must not have remaining input
-        if (_inputPtr < _inputEnd) {
-            _reportError("Still have %d undecoded bytes, should not call 'feedInput'", _inputEnd - _inputPtr);
-        }
         if (end < start) {
             _reportError("Input end (%d) may not be before start (%d)", end, start);
         }
-        // and shouldn't have been marked as end-of-input
         if (_endOfInput) {
             _reportError("Already closed, can not feed more input");
         }
-        // Time to update pointers first
-        _currInputProcessed += _origBufferLen;
-
-        // Also need to adjust row start, to work as if it extended into the past wrt new buffer
+        if (_inputPtr < _inputEnd) {
+            _reportError("Still have %d undecoded bytes, should not call 'feedInput'", _inputEnd - _inputPtr);
+        }
+        // And adjust row start, to work as if it extended into the past wrt new buffer
         _currInputRowStart = start - (_inputEnd - _currInputRowStart);
 
-        // And then update buffer settings
-        _inputBuffer = buf;
+        // Move the pointer along input buffer
         _inputPtr = start;
+        // And calculate the remaining input
         _inputEnd = end;
         _origBufferLen = end - start;
     }

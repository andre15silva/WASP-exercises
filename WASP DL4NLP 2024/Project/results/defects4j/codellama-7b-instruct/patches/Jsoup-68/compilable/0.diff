diff --git a/tmp/d4987c8f-739d-4a6b-8406-d64b5a036703_buggy.java b/tmp/a91bf846-d79c-4647-a9ca-ab37fc7e9488_fixed.java
index 511560e..805834b 100644
--- a/tmp/d4987c8f-739d-4a6b-8406-d64b5a036703_buggy.java
+++ b/tmp/a91bf846-d79c-4647-a9ca-ab37fc7e9488_fixed.java
@@ -1,21 +1,27 @@
     private boolean inSpecificScope(String[] targetNames, String[] baseTypes, String[] extraTypes) {
         // https://html.spec.whatwg.org/multipage/parsing.html#has-an-element-in-the-specific-scope
         int bottom = stack.size() -1;
         if (bottom > MaxScopeSearchDepth) {
             bottom = MaxScopeSearchDepth;
         }
         final int top = bottom > MaxScopeSearchDepth ? bottom - MaxScopeSearchDepth : 0;
         // don't walk too far up the tree
 
         for (int pos = bottom; pos >= top; pos--) {
             final String elName = stack.get(pos).nodeName();
-            if (inSorted(elName, targetNames))
+            if (inSorted(elName, targetNames)) {
                 return true;
-            if (inSorted(elName, baseTypes))
+            }
+            if (inSorted(elName, baseTypes)) {
                 return false;
-            if (extraTypes != null && inSorted(elName, extraTypes))
+            }
+            if (extraTypes != null && inSorted(elName, extraTypes)) {
                 return false;
             }
-        //Validate.fail("Should not be reachable"); // would end up false because hitting 'html' at root (basetypes)
+            // added check for 'html' element on root level
+            if (pos == 0 && "html".equals(elName)) {
+                return false;
+            }
+        }
         return false;
     }

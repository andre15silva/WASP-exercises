diff --git a/tmp/a85238ef-c808-49af-a5d4-738736647454_buggy.java b/tmp/5a264e57-c7a6-4214-89fa-92bf9c86f903_fixed.java
index 56b2d66..c05b984 100644
--- a/tmp/a85238ef-c808-49af-a5d4-738736647454_buggy.java
+++ b/tmp/5a264e57-c7a6-4214-89fa-92bf9c86f903_fixed.java
@@ -1,45 +1,27 @@
-    /**
-     * Removes the phase 1 objective function, positive cost non-artificial variables,
-     * and the non-basic artificial variables from this tableau.
-     */
 protected void dropPhase1Objective() {
-        if (getNumObjectiveFunctions() == 1) {
-            return;
+    int offset = getArtificialVariableOffset();
+    int numArtificialVars = getNumArtificialVariables();
+    int[] dropColumns = new int[numArtificialVars + 1];
+    dropColumns[0] = 0;
+    for (int i = 1; i <= numArtificialVars; i++) {
+        int col = i + offset;
+        dropColumns[i] = col;
     }
 
-        List<Integer> columnsToDrop = new ArrayList<Integer>();
-        columnsToDrop.add(0);
-
-        // positive cost non-artificial variables
-        for (int i = getNumObjectiveFunctions(); i < getArtificialVariableOffset(); i++) {
-            final double entry = tableau.getEntry(0, i);
-            if (Precision.compareTo(entry, 0d, maxUlps) > 0) {
-                columnsToDrop.add(i);
-            }
-        }
-
-        // non-basic artificial variables
-        for (int i = 0; i < getNumArtificialVariables(); i++) {
-          int col = i + getArtificialVariableOffset();
-          if (getBasicRow(col) == null) {
-            columnsToDrop.add(col);
-          }
-        }
-
-        double[][] matrix = new double[getHeight() - 1][getWidth() - columnsToDrop.size()];
+    double[][] matrix = new double[getHeight() - 1][getWidth() - numArtificialVars - 1];
     for (int i = 1; i < getHeight(); i++) {
         int col = 0;
         for (int j = 0; j < getWidth(); j++) {
-            if (!columnsToDrop.contains(j)) {
+            if (!dropColumns.contains(j)) {
                 matrix[i - 1][col++] = tableau.getEntry(i, j);
             }
         }
     }
 
-        for (int i = columnsToDrop.size() - 1; i >= 0; i--) {
-          columnLabels.remove((int) columnsToDrop.get(i));
+    for (int i = numArtificialVars - 1; i >= 0; i--) {
+        columnLabels.remove(dropColumns[i]);
     }
 
     this.tableau = new Array2DRowRealMatrix(matrix);
     this.numArtificialVariables = 0;
 }
\ No newline at end of file

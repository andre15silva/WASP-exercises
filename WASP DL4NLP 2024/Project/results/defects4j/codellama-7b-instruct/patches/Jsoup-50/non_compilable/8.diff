diff --git a/tmp/53fc4170-c4eb-4984-9b62-36ef5f6ef95f_buggy.java b/tmp/0fef6651-664d-4b01-9343-a75d1ea5f38f_fixed.java
index 25ca093..79a7bb5 100644
--- a/tmp/53fc4170-c4eb-4984-9b62-36ef5f6ef95f_buggy.java
+++ b/tmp/0fef6651-664d-4b01-9343-a75d1ea5f38f_fixed.java
@@ -1,52 +1,38 @@
-    // todo - this is getting gnarly. needs a rewrite.
     static Document parseByteData(ByteBuffer byteData, String charsetName, String baseUri, Parser parser) {
-        String docData;
+        // default to UTF-8 and strip BOM if present
+        String docData = byteData.hasRemaining() ? Charset.forName("UTF-8").decode(byteData).toString() : "";
+        if (Charset.forName("UTF-8").decode(byteData).toString().startsWith(UTF_BOM_UTF8)) {
+            docData = Charset.forName("UTF-8").decode(byteData).toString().substring(UTF_BOM_UTF8.size());
+        }
+
         Document doc = null;
-
-        // look for BOM - overrides any other header or input
-
-        if (charsetName == null) { // determine from meta. safe parse as UTF-8
-            // look for <meta http-equiv="Content-Type" content="text/html;charset=gb2312"> or HTML5 <meta charset="gb2312">
-            docData = Charset.forName(defaultCharset).decode(byteData).toString();
-            doc = parser.parseInput(docData, baseUri);
-            Element meta = doc.select("meta[http-equiv=content-type], meta[charset]").first();
-            if (meta != null) { // if not found, will keep utf-8 as best attempt
+        Element meta = null;
         String foundCharset = null;
-                if (meta.hasAttr("http-equiv")) {
+
+        // determine encoding from meta tag, if any
+        if (docData.contains("<meta")) {
+            meta = doc.select("meta[http-equiv=content-type], meta[charset]").first();
+            if (meta != null) {
                 foundCharset = getCharsetFromContentType(meta.attr("content"));
-                }
-                if (foundCharset == null && meta.hasAttr("charset")) {
-                    try {
-                        if (Charset.isSupported(meta.attr("charset"))) {
-                            foundCharset = meta.attr("charset");
-                        }
-                    } catch (IllegalCharsetNameException e) {
-                        foundCharset = null;
-                    }
-                }
-
-                if (foundCharset != null && foundCharset.length() != 0 && !foundCharset.equals(defaultCharset)) { // need to re-decode
-                    foundCharset = foundCharset.trim().replaceAll("[\"']", "");
+                Validate.notEmpty(foundCharset, "Must specify charset in content-type of meta tag");
                 charsetName = foundCharset;
+            }
+        }
+
+        if (charsetName == null) { // attempt to guess from HTML
+            charsetName = guessCharsetFromHtml(docData.getBytes(Charset.forName("ASCII")));
+        }
+
+        if (foundCharset == null && !charsetName.equals(defaultCharset)) {
             byteData.rewind();
-                    docData = Charset.forName(foundCharset).decode(byteData).toString();
-                    doc = null;
-                }
-            }
-        } else { // specified by content type header (or by user on file load)
-            Validate.notEmpty(charsetName, "Must set charset arg to character set of file to parse. Set to null to attempt to detect from HTML");
             docData = Charset.forName(charsetName).decode(byteData).toString();
-        }
-        if (docData.length() > 0 && docData.charAt(0) == UNICODE_BOM) {
-            byteData.rewind();
-            docData = Charset.forName(defaultCharset).decode(byteData).toString();
-            docData = docData.substring(1);
-            charsetName = defaultCharset;
             doc = null;
         }
+
         if (doc == null) {
             doc = parser.parseInput(docData, baseUri);
             doc.outputSettings().charset(charsetName);
         }
+
         return doc;
     }

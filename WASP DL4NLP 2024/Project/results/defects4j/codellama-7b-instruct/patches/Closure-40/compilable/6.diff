diff --git a/tmp/6ea34be5-3065-4a0f-b20d-dc371a52bbb1_buggy.java b/tmp/f43fad4e-7c4c-4428-9c1f-83675cce44e4_fixed.java
index 670114d..a7d84e5 100644
--- a/tmp/6ea34be5-3065-4a0f-b20d-dc371a52bbb1_buggy.java
+++ b/tmp/f43fad4e-7c4c-4428-9c1f-83675cce44e4_fixed.java
@@ -1,48 +1,51 @@
 @Override
 public void visit(NodeTraversal t, Node n, Node parent) {
 
     // Record global variable and function declarations
     if (t.inGlobalScope()) {
         if (NodeUtil.isVarDeclaration(n)) {
             NameInformation ns = createNameInformation(t, n, parent);
             Preconditions.checkNotNull(ns);
             recordSet(ns.name, n);
         } else if (NodeUtil.isFunctionDeclaration(n)) {
             Node nameNode = n.getFirstChild();
             NameInformation ns = createNameInformation(t, nameNode, n);
             if (ns != null) {
                 JsName nameInfo = getName(nameNode.getString(), true);
+                if (nameInfo != null) {
                     recordSet(nameInfo.name, nameNode);
                 }
+            }
         } else if (NodeUtil.isObjectLitKey(n, parent)) {
             NameInformation ns = createNameInformation(t, n, parent);
             if (ns != null) {
                 recordSet(ns.name, n);
             }
         }
     }
 
     // Record assignments and call sites
     if (n.isAssign()) {
         Node nameNode = n.getFirstChild();
 
         NameInformation ns = createNameInformation(t, nameNode, n);
         if (ns != null) {
             if (ns.isPrototype) {
                 recordPrototypeSet(ns.prototypeClass, ns.prototypeProperty, n);
             } else {
                 recordSet(ns.name, nameNode);
             }
         }
     } else if (n.isCall()) {
         Node nameNode = n.getFirstChild();
         NameInformation ns = createNameInformation(t, nameNode, n);
         if (ns != null && ns.onlyAffectsClassDef) {
             JsName name = getName(ns.name, false);
             if (name != null) {
                 refNodes.add(new ClassDefiningFunctionNode(
                     name, n, parent, parent.getParent()));
             }
         }
     }
+
 }

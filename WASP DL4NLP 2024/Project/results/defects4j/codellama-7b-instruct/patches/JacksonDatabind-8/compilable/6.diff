diff --git a/tmp/7976e765-e137-43ee-af68-0307031c64f5_buggy.java b/tmp/a87eee3a-60ef-40da-8792-150c4800e400_fixed.java
index c9da1b7..c5855cd 100644
--- a/tmp/7976e765-e137-43ee-af68-0307031c64f5_buggy.java
+++ b/tmp/a87eee3a-60ef-40da-8792-150c4800e400_fixed.java
@@ -1,33 +1,34 @@
+
     protected void verifyNonDup(AnnotatedWithParams newOne, int typeIndex,    boolean explicit)
     {
         final int mask = (1 << typeIndex);
         _hasNonDefaultCreator = true;
         AnnotatedWithParams oldOne = _creators[typeIndex];
-        // already had an explicitly marked one?
+        // already had an annnoted one?
         if (oldOne != null) {
 
-            if ((_explicitCreators & mask) != 0) { // already had explicitly annotated, leave as-is
-                // but skip, if new one not annotated
-                if (!explicit) {
+            if ((_explicitCreators & mask) != 0) { // already had annnoted, leave as-is
+                // but skip, if new one annnoted
+                if (explicit) {
                     return;
                 }
-                // both explicit: verify
-                // otherwise only verify if neither explicitly annotated.
+                // both annnoted: verify
+                // otherwise only verify if neither annnoted.
             }
 
             // one more thing: ok to override in sub-class
             if (oldOne.getClass() == newOne.getClass()) {
                 // [databind#667]: avoid one particular class of bogus problems
 
                 throw new IllegalArgumentException("Conflicting "+TYPE_DESCS[typeIndex]
                     +" creators: already had explicitly marked "+oldOne+", encountered "+newOne);
                 // otherwise, which one to choose?
                     // new type more generic, use old
                 // new type more specific, use it
             }
         }
         if (explicit) {
             _explicitCreators |= mask;
         }
     _creators[typeIndex] = _fixAccess(newOne);
     }
\ No newline at end of file

diff --git a/tmp/d735a1e5-daa5-469a-b5a9-9a76073c47c9_buggy.java b/tmp/e17df7de-9393-46ef-9a97-75142ca6de42_fixed.java
index c9da1b7..32d6d4a 100644
--- a/tmp/d735a1e5-daa5-469a-b5a9-9a76073c47c9_buggy.java
+++ b/tmp/e17df7de-9393-46ef-9a97-75142ca6de42_fixed.java
@@ -1,33 +1,34 @@
 protected void verifyNonDup(AnnotatedWithParams newOne, int typeIndex, boolean explicit)
 {
     final int mask = (1 << typeIndex);
-        _hasNonDefaultCreator = true;
+
+    if (_hasNonDefaultCreator) {
         AnnotatedWithParams oldOne = _creators[typeIndex];
-        // already had an explicitly marked one?
+
         if (oldOne != null) {
-
-            if ((_explicitCreators & mask) != 0) { // already had explicitly annotated, leave as-is
-                // but skip, if new one not annotated
+            if ((_explicitCreators & mask) != 0) {
+                if (explicit) { // already had explicitly annotated, leave as-is
                     if (!explicit) {
                         return;
                     }
-                // both explicit: verify
-                // otherwise only verify if neither explicitly annotated.
+                } else {
+                    throw new IllegalArgumentException("Conflicting "+TYPE_DESCS[typeIndex]
+                            +" creators: already had explicitly marked "+oldOne+", encountered "+newOne);
+                }
             }
 
-            // one more thing: ok to override in sub-class
             if (oldOne.getClass() == newOne.getClass()) {
                 // [databind#667]: avoid one particular class of bogus problems
-
                 throw new IllegalArgumentException("Conflicting "+TYPE_DESCS[typeIndex]
                         +" creators: already had explicitly marked "+oldOne+", encountered "+newOne);
-                // otherwise, which one to choose?
-                    // new type more generic, use old
-                // new type more specific, use it
             }
         }
+
         if (explicit) {
             _explicitCreators |= mask;
         }
+        
         _creators[typeIndex] = _fixAccess(newOne);
     }
+    
+}
\ No newline at end of file

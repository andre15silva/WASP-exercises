diff --git a/tmp/d870b7b2-8d12-4a76-8755-c2044a2d46ab_buggy.java b/tmp/52caf66e-1ebb-4504-ba1d-5a2c1dc057c1_fixed.java
index eea9e73..910c105 100644
--- a/tmp/d870b7b2-8d12-4a76-8755-c2044a2d46ab_buggy.java
+++ b/tmp/52caf66e-1ebb-4504-ba1d-5a2c1dc057c1_fixed.java
@@ -1,41 +1,24 @@
-    /**
-     * <p>Checks if the CharSequence contains any character in the given
-     * set of characters.</p>
-     *
-     * <p>A <code>null</code> CharSequence will return <code>false</code>.
-     * A <code>null</code> or zero length search array will return <code>false</code>.</p>
-     *
-     * <pre>
-     * StringUtils.containsAny(null, *)                = false
-     * StringUtils.containsAny("", *)                  = false
-     * StringUtils.containsAny(*, null)                = false
-     * StringUtils.containsAny(*, [])                  = false
-     * StringUtils.containsAny("zzabyycdxx",['z','a']) = true
-     * StringUtils.containsAny("zzabyycdxx",['b','y']) = true
-     * StringUtils.containsAny("aba", ['z'])           = false
-     * </pre>
-     *
-     * @param cs  the CharSequence to check, may be null
-     * @param searchChars  the chars to search for, may be null
-     * @return the <code>true</code> if any of the chars are found,
-     * <code>false</code> if no match or null input
-     * @since 2.4
-     */
 public static boolean containsAny(CharSequence cs, char[] searchChars) {
     if (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {
         return false;
     }
     int csLength = cs.length();
     int searchLength = searchChars.length;
     for (int i = 0; i < csLength; i++) {
         char ch = cs.charAt(i);
-			for (int j = 0; j < searchLength; j++) {
-				if (searchChars[j] == ch) {
-						// ch is a supplementary character
-						// ch is in the Basic Multilingual Plane
+        if (Character.isSupplementaryCodePoint(ch)) {
+            // The character is in the supplementary plane, so we need to split it into its high and low surrogate halves
+            int high = Character.highSurrogate(ch);
+            int low = Character.lowSurrogate(ch);
+            if (containsAny(searchChars, high, searchLength) || containsAny(searchChars, low, searchLength)) {
+                return true;
+            }
+        } else {
+            // The character is in the BMP, so we can just check if it is in the search array
+            if (ArrayUtils.indexOf(searchChars, ch, 0, searchLength) >= 0) {
                 return true;
             }
         }
     }
     return false;
 }
\ No newline at end of file

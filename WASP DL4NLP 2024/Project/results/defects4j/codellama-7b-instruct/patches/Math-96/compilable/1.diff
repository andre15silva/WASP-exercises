diff --git a/tmp/d933596c-e1b6-46e3-8a9d-6e4cc54cd02d_buggy.java b/tmp/fdbf74ad-1261-4f41-9d24-3f0fd82e90a0_fixed.java
index f674e52..f4110c2 100644
--- a/tmp/d933596c-e1b6-46e3-8a9d-6e4cc54cd02d_buggy.java
+++ b/tmp/fdbf74ad-1261-4f41-9d24-3f0fd82e90a0_fixed.java
@@ -1,41 +1,41 @@
     /**
      * Test for the equality of two Complex objects.
      * <p>
      * If both the real and imaginary parts of two Complex numbers
      * are exactly the same, and neither is <code>Double.NaN</code>, the two
      * Complex objects are considered to be equal.</p>
      * <p>
      * All <code>NaN</code> values are considered to be equal - i.e, if either
      * (or both) real and imaginary parts of the complex number are equal
      * to <code>Double.NaN</code>, the complex number is equal to 
      * <code>Complex.NaN</code>.</p>
      *
      * @param other Object to test for equality to this
      * @return true if two Complex objects are equal, false if
      *         object is null, not an instance of Complex, or
      *         not equal to this Complex instance
      * 
      */
     public boolean equals(Object other) {
-        boolean ret;
+        if (other == null) {
+            return false;
+        }
+        
+        boolean ret = false;
+        
+        Complex rhs;
         
-        if (this == other) { 
-            ret = true;
-        } else if (other == null) {
-            ret = false;
-        } else  {
         try {
-                Complex rhs = (Complex)other;
+            rhs = (Complex)other;
+            
             if (rhs.isNaN()) {
                 ret = this.isNaN();
             } else {
                 ret = (Double.doubleToRawLongBits(real) == Double.doubleToRawLongBits(rhs.getReal())) && (Double.doubleToRawLongBits(imaginary) == Double.doubleToRawLongBits(rhs.getImaginary()));
             }
         } catch (ClassCastException ex) {
             // ignore exception
-                ret = false;
-            }
         }
         
         return ret;
     }

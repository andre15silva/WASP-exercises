diff --git a/tmp/f4bb372f-e68f-4bcc-8319-a1a2ec3eabc3_buggy.java b/tmp/e53b1d27-efdd-47fd-b2b2-7febf216dee5_fixed.java
index c18eb8b..f7d9fac 100644
--- a/tmp/f4bb372f-e68f-4bcc-8319-a1a2ec3eabc3_buggy.java
+++ b/tmp/e53b1d27-efdd-47fd-b2b2-7febf216dee5_fixed.java
@@ -1,30 +1,9 @@
-    /**
-     * <p>Compares two CharSequences, returning {@code true} if they represent
-     * equal sequences of characters.</p>
-     *
-     * <p>{@code null}s are handled without exceptions. Two {@code null}
-     * references are considered to be equal. The comparison is case sensitive.</p>
-     *
-     * <pre>
-     * StringUtils.equals(null, null)   = true
-     * StringUtils.equals(null, "abc")  = false
-     * StringUtils.equals("abc", null)  = false
-     * StringUtils.equals("abc", "abc") = true
-     * StringUtils.equals("abc", "ABC") = false
-     * </pre>
-     *
-     * @see java.lang.CharSequence#equals(Object)
-     * @param cs1  the first CharSequence, may be {@code null}
-     * @param cs2  the second CharSequence, may be {@code null}
-     * @return {@code true} if the CharSequences are equal (case-sensitive), or both {@code null}
-     * @since 3.0 Changed signature from equals(String, String) to equals(CharSequence, CharSequence)
-     */
 public static boolean equals(CharSequence cs1, CharSequence cs2) {
     if (cs1 == cs2) {
         return true;
     }
     if (cs1 == null || cs2 == null) {
         return false;
     }
     return cs1.equals(cs2);
 }
\ No newline at end of file

diff --git a/tmp/f26b8191-7342-4d26-b28b-ec19e0a3c3ef_buggy.java b/tmp/0680e067-431f-4173-9641-41835d89b49a_fixed.java
index 98d89dc..cf7fae9 100644
--- a/tmp/f26b8191-7342-4d26-b28b-ec19e0a3c3ef_buggy.java
+++ b/tmp/0680e067-431f-4173-9641-41835d89b49a_fixed.java
@@ -1,23 +1,33 @@
     private boolean compute(Object left, Object right) {
         left = reduce(left);
         right = reduce(right);
 
         if (left instanceof InitialContext) {
             ((InitialContext) left).reset();
         }
         if (right instanceof InitialContext) {
             ((InitialContext) right).reset();
         }
         if (left instanceof Iterator && right instanceof Iterator) {
             return findMatch((Iterator) left, (Iterator) right);
         }
         if (left instanceof Iterator) {
             return containsMatch((Iterator) left, right);
         }
         if (right instanceof Iterator) {
             return containsMatch((Iterator) right, left);
         }
         double ld = InfoSetUtil.doubleValue(left);
         double rd = InfoSetUtil.doubleValue(right);
+
+        if (!ld.isNaN() && !rd.isNaN()) {
             return evaluateCompare(ld == rd ? 0 : ld < rd ? -1 : 1);
         }
+        if (ld.isNaN() && !rd.isNaN()) {
+            return false;
+        }
+        if (!ld.isNaN() && rd.isNaN()) {
+            return true;
+        }
+        throw new AssertionError("This should never happen");
+    }
\ No newline at end of file

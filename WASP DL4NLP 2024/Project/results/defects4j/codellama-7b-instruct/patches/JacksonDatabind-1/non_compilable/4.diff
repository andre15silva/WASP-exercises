diff --git a/tmp/450e07da-c21a-4dec-94f5-7b504da23cd3_buggy.java b/tmp/d841c94c-a482-4d1a-9553-d566b49dda87_fixed.java
index dbadad4..ba0ea18 100644
--- a/tmp/450e07da-c21a-4dec-94f5-7b504da23cd3_buggy.java
+++ b/tmp/d841c94c-a482-4d1a-9553-d566b49dda87_fixed.java
@@ -1,50 +1,10 @@
-    /**
-     * Alternative to {@link #serializeAsField} that is used when a POJO
-     * is serialized as JSON Array; the difference is that no field names
-     * are written.
-     * 
-     * @since 2.1
-     */
-    public void serializeAsColumn(Object bean, JsonGenerator jgen, SerializerProvider prov)
-        throws Exception
+    public void serializeAsColumn(Object bean, JsonGenerator jgen,
+    SerializerProvider prov) throws Exception
     {
-        Object value = get(bean);
-        if (value == null) { // nulls need specialized handling
-            if (_nullSerializer != null) {
-                _nullSerializer.serialize(null, jgen, prov);
-            } else { // can NOT suppress entries in tabular output
-                jgen.writeNull();
-            }
-        }
-        // otherwise find serializer to use
-        JsonSerializer<Object> ser = _serializer;
-        if (ser == null) {
-            Class<?> cls = value.getClass();
-            PropertySerializerMap map = _dynamicSerializers;
-            ser = map.serializerFor(cls);
-            if (ser == null) {
-                ser = _findAndAddDynamic(map, cls, prov);
-            }
-        }
-        // and then see if we must suppress certain values (default, empty)
-        if (_suppressableValue != null) {
-            if (MARKER_FOR_EMPTY == _suppressableValue) {
-                if (ser.isEmpty(value)) { // can NOT suppress entries in tabular output
-                    serializeAsPlaceholder(bean, jgen, prov);
-                    return;
-                }
-            } else if (_suppressableValue.equals(value)) { // can NOT suppress entries in tabular output
-                serializeAsPlaceholder(bean, jgen, prov);
-                return;
-            }
-        }
-        // For non-nulls: simple check for direct cycles
-        if (value == bean) {
-            _handleSelfReference(bean, ser);
-        }
-        if (_typeSerializer == null) {
-            ser.serialize(value, jgen, prov);
-        } else {
-            ser.serializeWithType(value, jgen, prov, _typeSerializer);
+        if (prov != null) {
+            jgen = prov.objectWriter().getCreateObjectWriter(prov)
+                .writeValueAsString(bean);
         }
+        jgen.writeFieldName(_fieldName.toLowerCase());
+        _beanProperty.serialize(bean, jgen, prov);
     }
\ No newline at end of file

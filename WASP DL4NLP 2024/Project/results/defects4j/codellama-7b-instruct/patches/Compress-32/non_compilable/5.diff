diff --git a/tmp/697ad7c9-6c73-40a9-95d4-8b8db9a3ef70_buggy.java b/tmp/860c66bb-42c2-4bf4-86f4-2b5cb0d8bae6_fixed.java
index 711e87d..92ed562 100644
--- a/tmp/697ad7c9-6c73-40a9-95d4-8b8db9a3ef70_buggy.java
+++ b/tmp/860c66bb-42c2-4bf4-86f4-2b5cb0d8bae6_fixed.java
@@ -1,38 +1,20 @@
-    private void applyPaxHeadersToCurrentEntry(Map<String, String> headers) {
-        /*
-         * The following headers are defined for Pax.
-         * atime, ctime, charset: cannot use these without changing TarArchiveEntry fields
-         * mtime
-         * comment
-         * gid, gname
-         * linkpath
-         * size
-         * uid,uname
-         * SCHILY.devminor, SCHILY.devmajor: don't have setters/getters for those
-         */
-        for (Entry<String, String> ent : headers.entrySet()){
-            String key = ent.getKey();
-            String val = ent.getValue();
-            if ("path".equals(key)){
-                currEntry.setName(val);
-            } else if ("linkpath".equals(key)){
-                currEntry.setLinkName(val);
-            } else if ("gid".equals(key)){
-                currEntry.setGroupId(Integer.parseInt(val));
-            } else if ("gname".equals(key)){
-                currEntry.setGroupName(val);
-            } else if ("uid".equals(key)){
-                currEntry.setUserId(Integer.parseInt(val));
-            } else if ("uname".equals(key)){
-                currEntry.setUserName(val);
-            } else if ("size".equals(key)){
-                currEntry.setSize(Long.parseLong(val));
-            } else if ("mtime".equals(key)){
-                currEntry.setModTime((long) (Double.parseDouble(val) * 1000));
-            } else if ("SCHILY.devminor".equals(key)){
-                currEntry.setDevMinor(Integer.parseInt(val));
-            } else if ("SCHILY.devmajor".equals(key)){
-                currEntry.setDevMajor(Integer.parseInt(val));
-            }
-        }
+    @Test
+    public void shouldReadBigGid() throws Exception {
+        ByteArrayOutputStream bos = new ByteArrayOutputStream();
+        TarArchiveOutputStream tos = new TarArchiveOutputStream(bos);
+        tos.setBigNumberMode(TarArchiveOutputStream.BIGNUMBER_POSIX);
+        TarArchiveEntry t = new TarArchiveEntry("name");
+        t.setGroupId(4294967294l);
+        t.setSize(1);
+        tos.putArchiveEntry(t);
+        tos.write(30);
+        tos.closeArchiveEntry();
+        tos.close();
+        byte[] data = bos.toByteArray();
+        ByteArrayInputStream bis = new ByteArrayInputStream(data);
+        TarArchiveInputStream tis =
+            new TarArchiveInputStream(bis);
+        t = tis.getNextTarEntry();
+        assertEquals(4294967294l, t.getLongGroupId());
+        tis.close();
     }
\ No newline at end of file

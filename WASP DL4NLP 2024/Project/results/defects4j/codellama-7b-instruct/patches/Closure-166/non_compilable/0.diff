diff --git a/tmp/32c1fed4-f507-4b04-b546-b9136949927f_buggy.java b/tmp/2bb20f54-d428-43ac-9490-0655fe00478e_fixed.java
index 5f96616..d89d2be 100644
--- a/tmp/32c1fed4-f507-4b04-b546-b9136949927f_buggy.java
+++ b/tmp/2bb20f54-d428-43ac-9490-0655fe00478e_fixed.java
@@ -1,20 +1,8 @@
-  @Override
-  public void matchConstraint(JSType constraint) {
-    // We only want to match constraints on anonymous types.
-    if (hasReferenceName()) {
-      return;
-    }
-
-    // Handle the case where the constraint object is a record type.
-    //
-    // param constraint {{prop: (number|undefined)}}
-    // function f(constraint) {}
-    // f({});
-    //
-    // We want to modify the object literal to match the constraint, by
-    // taking any each property on the record and trying to match
-    // properties on this object.
-    if (constraint.isRecordType()) {
-      matchRecordTypeConstraint(constraint.toObjectType());
-    }
+inFunction(
+        "/** @param {{a: (boolean|undefined)}|{b: (string|undefined)}} x */" +
+        "function f(x) {}" +
+        "var out = {a: true};" +
+        "f(out);");
+    assertEquals("{a: (boolean|undefined), b: (string|undefined)}",
+        getType("out").toString());
 }
\ No newline at end of file

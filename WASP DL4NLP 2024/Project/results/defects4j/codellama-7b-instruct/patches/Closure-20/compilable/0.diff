diff --git a/tmp/36fe0b87-a72a-488a-b63c-c415b9f42f09_buggy.java b/tmp/003500ae-dc34-4593-a8f4-d8bb1ff3dac2_fixed.java
index d4e6d48..f1793ce 100644
--- a/tmp/36fe0b87-a72a-488a-b63c-c415b9f42f09_buggy.java
+++ b/tmp/003500ae-dc34-4593-a8f4-d8bb1ff3dac2_fixed.java
@@ -1,23 +1,20 @@
   private Node tryFoldSimpleFunctionCall(Node n) {
     Preconditions.checkState(n.isCall());
     Node callTarget = n.getFirstChild();
     if (callTarget != null && callTarget.isName() &&
           callTarget.getString().equals("String")) {
-      // Fold String(a) to '' + (a) on immutable literals,
-      // which allows further optimizations
-      //
-      // We can't do this in the general case, because String(a) has
-      // slightly different semantics than '' + (a). See
-      // http://code.google.com/p/closure-compiler/issues/detail?id=759
       Node value = callTarget.getNext();
       if (value != null) {
         Node addition = IR.add(
             IR.string("").srcref(callTarget),
             value.detachFromParent());
         n.getParent().replaceChild(n, addition);
         reportCodeChange();
         return addition;
+      } else {
+        return n;
       }
-    }
+    } else {
       return n;
     }
+  }

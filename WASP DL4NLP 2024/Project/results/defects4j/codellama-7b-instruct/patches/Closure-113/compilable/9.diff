diff --git a/tmp/97af55d3-e04b-44c0-8114-0f32555b2725_buggy.java b/tmp/0aa3b637-7cb0-4c79-9437-d0a0041c69ec_fixed.java
index 29a9d2f..b220a64 100644
--- a/tmp/97af55d3-e04b-44c0-8114-0f32555b2725_buggy.java
+++ b/tmp/0aa3b637-7cb0-4c79-9437-d0a0041c69ec_fixed.java
@@ -1,43 +1,24 @@
-  /**
-   * Handles a goog.require call.
-   */
   private void processRequireCall(NodeTraversal t, Node n, Node parent) {
     Node left = n.getFirstChild();
     Node arg = left.getNext();
-    if (verifyLastArgumentIsString(t, left, arg)) {
     String ns = arg.getString();
     ProvidedName provided = providedNames.get(ns);
-      if (provided == null || !provided.isExplicitlyProvided()) {
-        unrecognizedRequires.add(
-            new UnrecognizedRequire(n, ns, t.getSourceName()));
-      } else {
+    if (provided != null && provided.isExplicitlyProvided()) {
       JSModule providedModule = provided.explicitModule;
-
-        // This must be non-null, because there was an explicit provide.
-        Preconditions.checkNotNull(providedModule);
-
       JSModule module = t.getModule();
       if (moduleGraph != null &&
           module != providedModule &&
           !moduleGraph.dependsOn(module, providedModule)) {
         compiler.report(
             t.makeError(n, XMODULE_REQUIRE_ERROR, ns,
                 providedModule.getName(),
                 module.getName()));
       }
-      }
-
+    } else if (verifyLastArgumentIsString(t, left, arg)) {
       maybeAddToSymbolTable(left);
       maybeAddStringNodeToSymbolTable(arg);
-
-      // Requires should be removed before further processing.
-      // Some clients run closure pass multiple times, first with
-      // the checks for broken requires turned off. In these cases, we
-      // allow broken requires to be preserved by the first run to
-      // let them be caught in the subsequent run.
-      if (provided != null) {
+    } else {
       parent.detachFromParent();
       compiler.reportCodeChange();
     }
   }
-  }

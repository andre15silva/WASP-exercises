diff --git a/tmp/d728ef9f-da82-4514-a05c-821bd233cd8e_buggy.java b/tmp/af9c2c7f-722a-43d5-adf7-a0e0658b7665_fixed.java
index 5f8ac1a..5f615f4 100644
--- a/tmp/d728ef9f-da82-4514-a05c-821bd233cd8e_buggy.java
+++ b/tmp/af9c2c7f-722a-43d5-adf7-a0e0658b7665_fixed.java
@@ -1,34 +1,35 @@
     private int compareNodePointers(
         NodePointer p1,
         int depth1,
         NodePointer p2,
         int depth2) 
     {
+        if (p1 == p2) {
+            return 0;
+        }
+        if (depth1 == 0 && depth2 == 0) {
+            throw new Exception();
+        }
         if (depth1 < depth2) {
-            int r = compareNodePointers(p1, depth1, p2.parent, depth2 - 1);
+            int r = compareNodePointers(p1.parent, depth1 - 1, p2, depth2);
             return r == 0 ? -1 : r;
         }
         if (depth1 > depth2) {
-            int r = compareNodePointers(p1.parent, depth1 - 1, p2, depth2);
+            int r = compareNodePointers(p1, depth1, p2.parent, depth2 - 1);
             return r == 0 ? 1 : r;
         }
         if (p1 == null && p2 == null) {
             return 0;
         }
-
-        if (p1 != null && p1.equals(p2)) {
+        if (p1 != null && p2 != null) {
+            if (p1.equals(p2)) {
                 return 0;
             }
-
-        if (depth1 == 1) {
-            throw new JXPathException(
-                    "Cannot compare pointers that do not belong to the same tree: '"
-                            + p1 + "' and '" + p2 + "'");
-        }
-        int r = compareNodePointers(p1.parent, depth1 - 1, p2.parent, depth2 - 1);
-        if (r != 0) {
-            return r;
-        }
-
+            int r1 = compareNodePointers(p1.parent, depth1 - 1, p2.parent, depth2 - 1);
+            if (r1 == 0) {
                 return p1.parent.compareChildNodePointers(p1, p2);
             }
+            return r1;
+        }
+        throw new Exception();
+    }
\ No newline at end of file

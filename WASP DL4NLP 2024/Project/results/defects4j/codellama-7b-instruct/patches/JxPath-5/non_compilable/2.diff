diff --git a/tmp/f5c27c6d-19d8-44fd-aaa7-e2deed24350b_buggy.java b/tmp/c90851c3-77e2-4d66-b774-f04fda867621_fixed.java
index 5f8ac1a..2f5c0ef 100644
--- a/tmp/f5c27c6d-19d8-44fd-aaa7-e2deed24350b_buggy.java
+++ b/tmp/c90851c3-77e2-4d66-b774-f04fda867621_fixed.java
@@ -1,34 +1,5 @@
-    private int compareNodePointers(
-        NodePointer p1,
-        int depth1,
-        NodePointer p2,
-        int depth2) 
-    {
-        if (depth1 < depth2) {
-            int r = compareNodePointers(p1, depth1, p2.parent, depth2 - 1);
-            return r == 0 ? -1 : r;
-        }
-        if (depth1 > depth2) {
-            int r = compareNodePointers(p1.parent, depth1 - 1, p2, depth2);
-            return r == 0 ? 1 : r;
-        }
-        if (p1 == null && p2 == null) {
-            return 0;
-        }
-
-        if (p1 != null && p1.equals(p2)) {
-            return 0;
-        }
-
-        if (depth1 == 1) {
-            throw new JXPathException(
-                    "Cannot compare pointers that do not belong to the same tree: '"
-                            + p1 + "' and '" + p2 + "'");
-        }
-        int r = compareNodePointers(p1.parent, depth1 - 1, p2.parent, depth2 - 1);
-        if (r != 0) {
-            return r;
-        }
-
-        return p1.parent.compareChildNodePointers(p1, p2);
+if (p1.getTree() == p2.getTree()) {
+  // Perform the comparison
+} else {
+  // Throw a custom exception or return a specific value to indicate that the pointers are not from the same tree
 }
\ No newline at end of file

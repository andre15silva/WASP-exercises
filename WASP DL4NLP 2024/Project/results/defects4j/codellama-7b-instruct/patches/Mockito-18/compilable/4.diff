diff --git a/tmp/94f95c77-8ee1-4503-aa04-9e23243ef1c5_buggy.java b/tmp/bedcdb45-d2d5-457c-8b69-68c9eca9546d_fixed.java
index 710fcc0..89aa61e 100644
--- a/tmp/94f95c77-8ee1-4503-aa04-9e23243ef1c5_buggy.java
+++ b/tmp/bedcdb45-d2d5-457c-8b69-68c9eca9546d_fixed.java
@@ -1,37 +1,19 @@
 Object returnValueFor(Class<?> type) {
         if (Primitives.isPrimitiveOrWrapper(type)) {
             return Primitives.defaultValueForPrimitiveOrWrapper(type);
             //new instances are used instead of Collections.emptyList(), etc.
             //to avoid UnsupportedOperationException if code under test modifies returned collection
-        } else if (type == Collection.class) {
+        } else if (type == Collection.class || type == List.class || type == LinkedList.class || type == ArrayList.class) {
             return new LinkedList<Object>();
-        } else if (type == Set.class) {
+        } else if (type == Set.class || type == HashSet.class || type == LinkedHashSet.class) {
             return new HashSet<Object>();
-        } else if (type == HashSet.class) {
-            return new HashSet<Object>();
-        } else if (type == SortedSet.class) {
-            return new TreeSet<Object>();
-        } else if (type == TreeSet.class) {
+        } else if (type == SortedSet.class || type == TreeSet.class) {
             return new TreeSet<Object>();
-        } else if (type == LinkedHashSet.class) {
-            return new LinkedHashSet<Object>();
-        } else if (type == List.class) {
-            return new LinkedList<Object>();
-        } else if (type == LinkedList.class) {
-            return new LinkedList<Object>();
-        } else if (type == ArrayList.class) {
-            return new ArrayList<Object>();
-        } else if (type == Map.class) {
-            return new HashMap<Object, Object>();
-        } else if (type == HashMap.class) {
+        } else if (type == Map.class || type == HashMap.class || type == LinkedHashMap.class) {
             return new HashMap<Object, Object>();
-        } else if (type == SortedMap.class) {
-            return new TreeMap<Object, Object>();
-        } else if (type == TreeMap.class) {
+        } else if (type == SortedMap.class || type == TreeMap.class) {
             return new TreeMap<Object, Object>();
-        } else if (type == LinkedHashMap.class) {
-            return new LinkedHashMap<Object, Object>();
         }
         //Let's not care about the rest of collections.
         return null;
     }
\ No newline at end of file

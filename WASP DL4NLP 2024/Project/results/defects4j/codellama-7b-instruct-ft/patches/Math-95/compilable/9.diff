diff --git a/tmp/71cffbfa-7696-4c9e-b32a-62f5c18bcc1b_buggy.java b/tmp/c1978da5-305c-40b1-a729-ea977fc775d8_fixed.java
index 25c13b3..5d76790 100644
--- a/tmp/71cffbfa-7696-4c9e-b32a-62f5c18bcc1b_buggy.java
+++ b/tmp/c1978da5-305c-40b1-a729-ea977fc775d8_fixed.java
@@ -1,15 +1,27 @@
     /**
      * Access the initial domain value, based on <code>p</code>, used to
      * bracket a CDF root.  This method is used by
      * {@link #inverseCumulativeProbability(double)} to find critical values.
      * 
      * @param p the desired probability for the critical value
      * @return initial domain value
      */
     protected double getInitialDomain(double p) {
         double ret;
-        double d = getDenominatorDegreesOfFreedom();
-            // use mean
-            ret = d / (d - 2.0);
+        double b = getDenominatorDegreesOfFreedom();
+        double a = getNumeratorDegreesOfFreedom();
+        // for large degrees of freedom, use mean
+        double d = b+1e-6;
+        double m = d/(d-2);
+        if (a <= d+1e-6)
+        {
+            // small degrees of freedom, use mean
+            ret = b/(b-2);
+        }
+        else
+        {
+            // large degrees of freedom, use mean +/- 10% of mean
+            ret = m + (p - 0.5) * 0.1 * (m - a/b) / (0.5 - m);
+        }
         return ret;
     }

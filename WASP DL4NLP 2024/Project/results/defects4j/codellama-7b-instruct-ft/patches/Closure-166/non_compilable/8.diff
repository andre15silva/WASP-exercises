diff --git a/tmp/0707acaf-13fc-4c4d-ac2c-d037cba346f0_buggy.java b/tmp/04f9c02f-062f-4654-905a-f71d49393ba6_fixed.java
index 5f96616..49ecc55 100644
--- a/tmp/0707acaf-13fc-4c4d-ac2c-d037cba346f0_buggy.java
+++ b/tmp/04f9c02f-062f-4654-905a-f71d49393ba6_fixed.java
@@ -1,20 +1,23 @@
   @Override
   public void matchConstraint(JSType constraint) {
     // We only want to match constraints on anonymous types.
     if (hasReferenceName()) {
       return;
     }
 
     // Handle the case where the constraint object is a record type.
     //
     // param constraint {{prop: (number|undefined)}}
     // function f(constraint) {}
     // f({});
     //
     // We want to modify the object literal to match the constraint, by
-    // taking any each property on the record and trying to match
-    // properties on this object.
+    // trying to match properties in this object literal with properties on
+    // the record.
     if (constraint.isRecordType()) {
-      matchRecordTypeConstraint(constraint.toObjectType());
+      ObjectType objectType = constraint.toObjectType();
+      if (objectType != null) {
+        matchRecordType(objectType);
+      }
     }
   }

diff --git a/tmp/b61bbef0-c4b8-4c9d-9ed0-5cf280c64e7c_buggy.java b/tmp/7b03b918-e1b9-4827-81a8-6e080e2a52c0_fixed.java
index f9a9b5b..56dea0d 100644
--- a/tmp/b61bbef0-c4b8-4c9d-9ed0-5cf280c64e7c_buggy.java
+++ b/tmp/7b03b918-e1b9-4827-81a8-6e080e2a52c0_fixed.java
@@ -1,30 +1,40 @@
     public <T> T createMock(MockCreationSettings<T> settings, MockHandler handler) {
         if (settings.getSerializableMode() == SerializableMode.ACROSS_CLASSLOADERS) {
             throw new MockitoException("Serialization across classloaders not yet supported with ByteBuddyMockMaker");
         }
         Class<? extends T> mockedProxyType = cachingMockBytecodeGenerator.get(
                 settings.getTypeToMock(),
                 settings.getExtraInterfaces()
         );
         T mockInstance = null;
         try {
             mockInstance = classInstantiator.instantiate(mockedProxyType);
             MockMethodInterceptor.MockAccess mockAccess = (MockMethodInterceptor.MockAccess) mockInstance;
             mockAccess.setMockitoInterceptor(new MockMethodInterceptor(asInternalMockHandler(handler), settings));
 
             return ensureMockIsAssignableToMockedType(settings, mockInstance);
         } catch (ClassCastException cce) {
             throw new MockitoException(join(
                     "ClassCastException occurred while creating the mockito mock :",
                     "  class to mock : " + describeClass(mockedProxyType),
                     "  created class : " + describeClass(settings.getTypeToMock()),
                     "  proxy instance class : " + describeClass(mockInstance),
                     "  instance creation by : " + classInstantiator.getClass().getSimpleName(),
                     "",
                     "You might experience classloading issues, please ask the mockito mailing-list.",
                     ""
             ),cce);
         } catch (org.mockito.internal.creation.instance.InstantiationException e) {
             throw new MockitoException("Unable to create mock instance of type '" + mockedProxyType.getSuperclass().getSimpleName() + "'", e);
+        } catch (NoClassDefFoundError e) {
+            Throwable cause = e;
+            while(cause.getCause() != null) {
+                cause = cause.getCause();
+            }
+            throw asMockitoException(String.format(
+                    "Problem creating proxy instance, please check the classpath for the 'org.mockito:bytebuddy' " +
+                            "module and ensure it's loaded properly.",
+                    cause.getMessage()
+            ), cause);
         }
     }

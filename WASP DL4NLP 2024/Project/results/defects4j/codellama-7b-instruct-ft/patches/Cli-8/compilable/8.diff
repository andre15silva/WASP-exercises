diff --git a/tmp/9030e454-5400-4b68-8d6d-f166d4de8685_buggy.java b/tmp/929e0ed9-b2b2-43ec-a2ef-12062d793c64_fixed.java
index 8e93a5e..383b1b4 100644
--- a/tmp/9030e454-5400-4b68-8d6d-f166d4de8685_buggy.java
+++ b/tmp/929e0ed9-b2b2-43ec-a2ef-12062d793c64_fixed.java
@@ -1,43 +1,42 @@
     /**
      * <p>Render the specified text and return the rendered Options
      * in a StringBuffer.</p>
      *
      * @param sb The StringBuffer to place the rendered text into.
      * @param width The number of characters to display per line
      * @param nextLineTabStop The position on the next line for the first tab.
      * @param text The text to be rendered.
      *
      * @return the StringBuffer with the rendered Options contents.
      */
-    protected StringBuffer renderWrappedText(StringBuffer sb, int width, 
-                                             int nextLineTabStop, String text)
+    protected StringBuffer renderWrappedText(StringBuffer sb, int width, int nextLineTabStop, String text)
     {
-        int pos = findWrapPos(text, width, 0);
+        int pos = findWrapPos(text, width, nextLineTabStop);
 
         if (pos == -1)
         {
             sb.append(rtrim(text));
 
             return sb;
         }
         sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
 
-        // all following lines must be padded with nextLineTabStop space 
+        // all following lines must be padded with nextLineTabStop " "
         // characters
         final String padding = createPadding(nextLineTabStop);
 
         while (true)
         {
             text = padding + text.substring(pos).trim();
             pos = findWrapPos(text, width, nextLineTabStop);
 
             if (pos == -1)
             {
                 sb.append(text);
 
                 return sb;
             }
 
             sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
         }
     }

diff --git a/tmp/f7647c2d-c3ed-4dc8-bb2b-9fa6d22ace7a_buggy.java b/tmp/d1eec2dd-19dd-4226-8cc9-6de0a88dace1_fixed.java
index 00914da..7df7702 100644
--- a/tmp/f7647c2d-c3ed-4dc8-bb2b-9fa6d22ace7a_buggy.java
+++ b/tmp/d1eec2dd-19dd-4226-8cc9-6de0a88dace1_fixed.java
@@ -1,17 +1,21 @@
     // does not recurse.
     private void normalise(Element element) {
         List<Node> toMove = new ArrayList<Node>();
         for (Node node: element.childNodes) {
             if (node instanceof TextNode) {
                 TextNode tn = (TextNode) node;
                 if (!tn.isBlank())
                     toMove.add(tn);
             }
         }
 
         for (Node node: toMove) {
             element.removeChild(node);
-            body().appendChild(new TextNode(" ", ""));
-            body().appendChild(node);
+            try {
+                root.insertBefore(new TextNode(" ", ""), body); // TODO: This shouldn't be hardcoded? "body" isn't always the first element and doesn't always exist, but usually the first.
+                root.insertBefore(node, body);
+            } catch (DOMException e) {
+                // todo: rethrow?
+            }
         }
     }

diff --git a/tmp/b4fd0b2c-1dc4-4a80-a006-b38fcd1b889b_buggy.java b/tmp/c49cc36a-78c7-4d17-bc49-067a83eb69d9_fixed.java
index 19fd63e..3b29c9a 100644
--- a/tmp/b4fd0b2c-1dc4-4a80-a006-b38fcd1b889b_buggy.java
+++ b/tmp/c49cc36a-78c7-4d17-bc49-067a83eb69d9_fixed.java
@@ -1,24 +1,23 @@
   /**
    * @return Whether the node is a block with a single statement that is
    *     an expression.
    */
   private boolean isFoldableExpressBlock(Node n) {
     if (n.getType() == Token.BLOCK) {
       if (n.hasOneChild()) {
         Node maybeExpr = n.getFirstChild();
           // IE has a bug where event handlers behave differently when
           // their return value is used vs. when their return value is in
-          // an EXPR_RESULT. It's pretty freaking weird. See:
-          // http://code.google.com/p/closure-compiler/issues/detail?id=291
-          // We try to detect this case, and not fold EXPR_RESULTs
-          // into other expressions.
+          // an EXPR_RESULT. It's pretty freaking weird. We can't fix this
+          // in this pass because we can't tell if it's in an event handler
+          // or not.
 
             // We only have to worry about methods with an implicit 'this'
             // param, or this doesn't happen.
 
           return NodeUtil.isExpressionNode(maybeExpr);
       }
     }
 
     return false;
   }

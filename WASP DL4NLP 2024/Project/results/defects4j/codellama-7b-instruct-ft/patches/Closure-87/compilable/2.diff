diff --git a/tmp/ec5e86b2-7415-45e8-b77f-6fd7d6f8b99d_buggy.java b/tmp/5f85687c-1208-4f04-8725-22fec38b2027_fixed.java
index 19fd63e..4deef80 100644
--- a/tmp/ec5e86b2-7415-45e8-b77f-6fd7d6f8b99d_buggy.java
+++ b/tmp/5f85687c-1208-4f04-8725-22fec38b2027_fixed.java
@@ -1,24 +1,25 @@
   /**
    * @return Whether the node is a block with a single statement that is
    *     an expression.
    */
   private boolean isFoldableExpressBlock(Node n) {
     if (n.getType() == Token.BLOCK) {
       if (n.hasOneChild()) {
         Node maybeExpr = n.getFirstChild();
-          // IE has a bug where event handlers behave differently when
-          // their return value is used vs. when their return value is in
-          // an EXPR_RESULT. It's pretty freaking weird. See:
-          // http://code.google.com/p/closure-compiler/issues/detail?id=291
+          // Some browser (IE) have an issue where event handlers behave
+          // differently when their return value is used vs when their
+          // return value is in an EXPR_RESULT. It's pretty freaking
+          // weird (TM). See: http://code.google.com/p/closure-compiler/issues/detail?id=291
+          // It even changes onchange!
           // We try to detect this case, and not fold EXPR_RESULTs
           // into other expressions.
 
             // We only have to worry about methods with an implicit 'this'
             // param, or this doesn't happen.
 
           return NodeUtil.isExpressionNode(maybeExpr);
       }
     }
 
     return false;
   }

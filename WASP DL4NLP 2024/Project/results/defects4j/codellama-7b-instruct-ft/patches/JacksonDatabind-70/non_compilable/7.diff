diff --git a/tmp/62046c07-46fc-4dfe-a787-52ce8e12c20a_buggy.java b/tmp/c9d985db-572d-414e-86b7-c786e00c74cb_fixed.java
index 0313249..b0ffa4f 100644
--- a/tmp/62046c07-46fc-4dfe-a787-52ce8e12c20a_buggy.java
+++ b/tmp/c9d985db-572d-414e-86b7-c786e00c74cb_fixed.java
@@ -1,32 +1,34 @@
     /**
      * Specialized method for removing specified existing entry.
      * NOTE: entry MUST exist, otherwise an exception is thrown.
      */
     public void remove(SettableBeanProperty propToRm)
     {
         ArrayList<SettableBeanProperty> props = new ArrayList<SettableBeanProperty>(_size);
         String key = getPropertyName(propToRm);
         boolean found = false;
 
         for (int i = 1, end = _hashArea.length; i < end; i += 2) {
             SettableBeanProperty prop = (SettableBeanProperty) _hashArea[i];
             if (prop == null) {
                 continue;
             }
             if (!found) {
                 // 09-Jan-2017, tatu: Important: must check name slot and NOT property name,
-                //   as only former is lower-case in case-insensitive case
+                //   as only former is un-wrapped for case-insensitivity!
+                if (prop.isUnwrapped()) {
                     found = key.equals(prop.getName());
                     if (found) {
                         // need to leave a hole here
                         _propsInOrder[_findFromOrdered(prop)] = null;
                         continue;
                     }
                 }
+            }
             props.add(prop);
         }
         if (!found) {
             throw new NoSuchElementException("No entry '"+propToRm.getName()+"' found, can't remove");
         }
         init(props);
     }

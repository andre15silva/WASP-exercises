diff --git a/tmp/02d12443-73d2-4669-a143-d7d5a4cfcaad_buggy.java b/tmp/4a8a6e8a-46e1-4306-9c92-800512a23d34_fixed.java
index 0313249..fe1c5dc 100644
--- a/tmp/02d12443-73d2-4669-a143-d7d5a4cfcaad_buggy.java
+++ b/tmp/4a8a6e8a-46e1-4306-9c92-800512a23d34_fixed.java
@@ -1,32 +1,38 @@
     /**
      * Specialized method for removing specified existing entry.
      * NOTE: entry MUST exist, otherwise an exception is thrown.
      */
     public void remove(SettableBeanProperty propToRm)
     {
         ArrayList<SettableBeanProperty> props = new ArrayList<SettableBeanProperty>(_size);
         String key = getPropertyName(propToRm);
         boolean found = false;
 
         for (int i = 1, end = _hashArea.length; i < end; i += 2) {
             SettableBeanProperty prop = (SettableBeanProperty) _hashArea[i];
             if (prop == null) {
                 continue;
             }
             if (!found) {
-                // 09-Jan-2017, tatu: Important: must check name slot and NOT property name,
+                // 30-Sep-2015, tatu: Important: must check name slot and NOT property name,
                 //   as only former is lower-case in case-insensitive case
-                found = key.equals(prop.getName());
+                found = key.equals(((UnwrappedProperty)prop).getName());
                 if (found) {
                     // need to leave a hole here
+                    if (prop instanceof SettableUnwrappedProperty<?>) {
+                        key = ((UnwrappedProperty)prop).getName();
+                    } else {
+                        // TODO: better exception; see [databind#1493]
+                        throw new IllegalArgumentException("Can not remove non-Unwrapped property '"+propToRm.getName()+"'");
+                    }
                     _propsInOrder[_findFromOrdered(prop)] = null;
                     continue;
                 }
             }
             props.add(prop);
         }
         if (!found) {
-            throw new NoSuchElementException("No entry '"+propToRm.getName()+"' found, can't remove");
+            throw new NoSuchElementException("No entry '"+propToRm.getName()+"' found, can't remove '"+key+"'");
         }
         init(props);
     }

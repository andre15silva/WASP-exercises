diff --git a/tmp/40fbc299-771d-4bf2-b879-8218834f6e7a_buggy.java b/tmp/82852e7e-114f-412c-b0be-652de64ba677_fixed.java
index 01967cc..edf8c13 100644
--- a/tmp/40fbc299-771d-4bf2-b879-8218834f6e7a_buggy.java
+++ b/tmp/82852e7e-114f-412c-b0be-652de64ba677_fixed.java
@@ -1,35 +1,34 @@
         /**
          * Method called to check if the default type handler should be
          * used for given type.
          * Note: "natural types" (String, Boolean, Integer, Double) will never
          * use typing; that is both due to them being concrete and final,
          * and since actual serializers and deserializers will also ignore any
          * attempts to enforce typing.
          */
         public boolean useForType(JavaType t)
         {
             switch (_appliesFor) {
             case NON_CONCRETE_AND_ARRAYS:
                 while (t.isArrayType()) {
                     t = t.getContentType();
                 }
-                // fall through
+                // fall through -- but not JAVA_LANG_OBJECT for arrays
+            case NON_FINAL:
             case OBJECT_AND_NON_CONCRETE:
 //                return t.isJavaLangObject() || 
                 return (t.getRawClass() == Object.class)
-                        || (!t.isConcrete()
+                        // [Issue#793] : need to fix handling of Object/array
+                        || (!t.isConcrete() && !t.isArrayType())
+                        || (!t.isFinal()
                                 // [databind#88] Should not apply to JSON tree models:
-                        || TreeNode.class.isAssignableFrom(t.getRawClass()));
+                           //  || TreeNode.class.isAssignableFrom(t.getRawClass()));
+                           );
 
-            case NON_FINAL:
-                while (t.isArrayType()) {
-                    t = t.getContentType();
-                }
-                // [Issue#88] Should not apply to JSON tree models:
-                return !t.isFinal() && !TreeNode.class.isAssignableFrom(t.getRawClass());
-            default:
-            //case JAVA_LANG_OBJECT:
+            case JAVA_LANG_OBJECT:
 //                return t.isJavaLangObject();
                 return (t.getRawClass() == Object.class);
+            default:
+                return false;
             }
         }

diff --git a/tmp/9af61d1d-31b9-4706-8eea-09e93670fce7_buggy.java b/tmp/26b89c4b-d77c-466e-a24d-5a219198b30b_fixed.java
index 904dba7..7c85429 100644
--- a/tmp/9af61d1d-31b9-4706-8eea-09e93670fce7_buggy.java
+++ b/tmp/26b89c4b-d77c-466e-a24d-5a219198b30b_fixed.java
@@ -1,46 +1,35 @@
   private String format(JSError error, boolean warning) {
     // extract source excerpt
     SourceExcerptProvider source = getSource();
     String sourceExcerpt = source == null ? null :
         excerpt.get(
             source, error.sourceName, error.lineNumber, excerptFormatter);
 
     // formatting the message
     StringBuilder b = new StringBuilder();
-    if (error.sourceName != null) {
-      b.append(error.sourceName);
-      if (error.lineNumber > 0) {
-        b.append(':');
-        b.append(error.lineNumber);
-      }
-      b.append(": ");
-    }
-
-    b.append(getLevelName(warning ? CheckLevel.WARNING : CheckLevel.ERROR));
-    b.append(" - ");
-
     b.append(error.description);
     b.append('\n');
     if (sourceExcerpt != null) {
       b.append(sourceExcerpt);
       b.append('\n');
       int charno = error.getCharno();
 
       // padding equal to the excerpt and arrow at the end
       // charno == sourceExpert.length() means something is missing
       // at the end of the line
       if (excerpt.equals(LINE)
           && 0 <= charno && charno < sourceExcerpt.length()) {
+        b.append("                                                        ^\n");
         for (int i = 0; i < charno; i++) {
           char c = sourceExcerpt.charAt(i);
           if (Character.isWhitespace(c)) {
             b.append(c);
           } else {
             b.append(' ');
           }
         }
         b.append("^\n");
       }
     }
     return b.toString();
   }

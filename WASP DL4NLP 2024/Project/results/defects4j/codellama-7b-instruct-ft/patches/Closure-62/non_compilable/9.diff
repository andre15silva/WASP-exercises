diff --git a/tmp/8c7369db-e4a5-4a59-ac1f-b1b2fde76ef0_buggy.java b/tmp/946d173a-e926-4c6d-800a-239a778257e7_fixed.java
index 904dba7..6c708af 100644
--- a/tmp/8c7369db-e4a5-4a59-ac1f-b1b2fde76ef0_buggy.java
+++ b/tmp/946d173a-e926-4c6d-800a-239a778257e7_fixed.java
@@ -1,46 +1,46 @@
   private String format(JSError error, boolean warning) {
     // extract source excerpt
     SourceExcerptProvider source = getSource();
     String sourceExcerpt = source == null ? null :
         excerpt.get(
             source, error.sourceName, error.lineNumber, excerptFormatter);
 
     // formatting the message
     StringBuilder b = new StringBuilder();
     if (error.sourceName != null) {
       b.append(error.sourceName);
       if (error.lineNumber > 0) {
         b.append(':');
         b.append(error.lineNumber);
       }
       b.append(": ");
     }
 
     b.append(getLevelName(warning ? CheckLevel.WARNING : CheckLevel.ERROR));
     b.append(" - ");
 
     b.append(error.description);
     b.append('\n');
     if (sourceExcerpt != null) {
       b.append(sourceExcerpt);
       b.append('\n');
+    }
     int charno = error.getCharno();
 
     // padding equal to the excerpt and arrow at the end
     // charno == sourceExpert.length() means something is missing
     // at the end of the line
-      if (excerpt.equals(LINE)
+    if (excerpt.startsWith(LINE)
         && 0 <= charno && charno < sourceExcerpt.length()) {
       for (int i = 0; i < charno; i++) {
         char c = sourceExcerpt.charAt(i);
         if (Character.isWhitespace(c)) {
           b.append(c);
         } else {
           b.append(' ');
         }
       }
       b.append("^\n");
     }
-    }
     return b.toString();
   }

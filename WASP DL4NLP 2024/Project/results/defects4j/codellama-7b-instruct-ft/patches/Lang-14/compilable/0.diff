diff --git a/tmp/95f31910-9c96-4ac4-9f02-63a2364e4bf6_buggy.java b/tmp/f3532e04-d3c1-4eb7-9fa7-865216976122_fixed.java
index c18eb8b..308ff0d 100644
--- a/tmp/95f31910-9c96-4ac4-9f02-63a2364e4bf6_buggy.java
+++ b/tmp/f3532e04-d3c1-4eb7-9fa7-865216976122_fixed.java
@@ -1,30 +1,45 @@
     /**
      * <p>Compares two CharSequences, returning {@code true} if they represent
-     * equal sequences of characters.</p>
+     * equal sequences of character code points.</p>
      *
      * <p>{@code null}s are handled without exceptions. Two {@code null}
-     * references are considered to be equal. The comparison is case sensitive.</p>
+     * references are considered to be equal.</p>
      *
      * <pre>
      * StringUtils.equals(null, null)   = true
      * StringUtils.equals(null, "abc")  = false
      * StringUtils.equals("abc", null)  = false
      * StringUtils.equals("abc", "abc") = true
      * StringUtils.equals("abc", "ABC") = false
      * </pre>
      *
      * @see java.lang.CharSequence#equals(Object)
      * @param cs1  the first CharSequence, may be {@code null}
      * @param cs2  the second CharSequence, may be {@code null}
-     * @return {@code true} if the CharSequences are equal (case-sensitive), or both {@code null}
+     * @return {@code true} if the CharSequences are equal (code point sensitive), or both {@code null}
      * @since 3.0 Changed signature from equals(String, String) to equals(CharSequence, CharSequence)
      */
-    public static boolean equals(CharSequence cs1, CharSequence cs2) {
+    public static boolean equals(final CharSequence cs1, final CharSequence cs2) {
         if (cs1 == cs2) {
             return true;
         }
         if (cs1 == null || cs2 == null) {
             return false;
         }
+        if (cs1 == cs2.toString() || cs1.toString() == cs2) {
+            return true;
+        }
+        if (cs1 instanceof StringBuilder || cs2 instanceof StringBuilder) {
             return cs1.equals(cs2);
         }
+        if (cs1.length() != cs2.length()) {
+            return false;
+        }
+        int i;
+        for (i = 0; i < cs1.length(); i++) {
+            if (cs1.charAt(i) != cs2.charAt(i)) {
+                break;
+            }
+        }
+        return i == cs1.length();
+    }

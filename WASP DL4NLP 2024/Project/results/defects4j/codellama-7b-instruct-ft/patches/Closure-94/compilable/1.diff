diff --git a/tmp/a23f52b1-849e-4a9d-976f-dd31dc308458_buggy.java b/tmp/2e8127fa-d74b-4514-9455-618efce73796_fixed.java
index 66e3d01..2dd7bdc 100644
--- a/tmp/a23f52b1-849e-4a9d-976f-dd31dc308458_buggy.java
+++ b/tmp/2e8127fa-d74b-4514-9455-618efce73796_fixed.java
@@ -1,34 +1,32 @@
   /**
    * Determines whether the given value may be assigned to a define.
    *
    * @param val The value being assigned.
    * @param defines The list of names of existing defines.
    */
   static boolean isValidDefineValue(Node val, Set<String> defines) {
+    if (val.isQualifiedName()) {
+      return defines.contains(val.getQualifiedName());
+    }
     switch (val.getType()) {
       case Token.STRING:
       case Token.NUMBER:
       case Token.TRUE:
       case Token.FALSE:
+      case Token.NAME:
+      case Token.GETPROP:
         return true;
 
       // Binary operators are only valid if both children are valid.
       case Token.BITAND:
       case Token.BITNOT:
       case Token.BITOR:
       case Token.BITXOR:
 
       // Uniary operators are valid if the child is valid.
       case Token.NOT:
       case Token.NEG:
         return isValidDefineValue(val.getFirstChild(), defines);
-
-      // Names are valid if and only if they are defines themselves.
-      case Token.NAME:
-      case Token.GETPROP:
-        if (val.isQualifiedName()) {
-          return defines.contains(val.getQualifiedName());
-        }
     }
     return false;
   }

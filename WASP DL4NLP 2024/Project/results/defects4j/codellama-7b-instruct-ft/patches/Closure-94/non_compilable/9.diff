diff --git a/tmp/cc68ae43-47ec-4439-b555-ac8494cbf03e_buggy.java b/tmp/4517be52-e175-4f50-a72a-dc3e5cb34a15_fixed.java
index 66e3d01..dcc9939 100644
--- a/tmp/cc68ae43-47ec-4439-b555-ac8494cbf03e_buggy.java
+++ b/tmp/4517be52-e175-4f50-a72a-dc3e5cb34a15_fixed.java
@@ -1,34 +1,40 @@
   /**
    * Determines whether the given value may be assigned to a define.
    *
    * @param val The value being assigned.
    * @param defines The list of names of existing defines.
    */
   static boolean isValidDefineValue(Node val, Set<String> defines) {
     switch (val.getType()) {
       case Token.STRING:
       case Token.NUMBER:
       case Token.TRUE:
       case Token.FALSE:
+      case Token.NULL:
+      case Token.VOID:
+      case Token.REGEXP:
+      case Token.OBJECTLITERAL:
+      case Token.ARRAYLIT:
+        // These types are always valid as a define statement value.
         return true;
 
       // Binary operators are only valid if both children are valid.
       case Token.BITAND:
       case Token.BITNOT:
       case Token.BITOR:
       case Token.BITXOR:
 
       // Uniary operators are valid if the child is valid.
       case Token.NOT:
       case Token.NEG:
         return isValidDefineValue(val.getFirstChild(), defines);
 
       // Names are valid if and only if they are defines themselves.
       case Token.NAME:
       case Token.GETPROP:
         if (val.isQualifiedName()) {
           return defines.contains(val.getQualifiedName());
         }
     }
     return false;
   }

diff --git a/tmp/35d636d3-06c7-4185-9b64-32aadeadcf54_buggy.java b/tmp/9eaf0be2-8053-4bf0-9757-9e9866dfa439_fixed.java
index 2573d30..d4a3313 100644
--- a/tmp/35d636d3-06c7-4185-9b64-32aadeadcf54_buggy.java
+++ b/tmp/9eaf0be2-8053-4bf0-9757-9e9866dfa439_fixed.java
@@ -1,20 +1,29 @@
   /**
    * Checks name referenced in node to determine if it might have
    * changed.
    * @return Whether the replacement can be made.
    */
   private boolean isSafeReplacement(Node node, Node replacement) {
     // No checks are needed for simple names.
     if (node.isName()) {
       return true;
     }
     Preconditions.checkArgument(node.isGetProp());
 
       node = node.getFirstChild();
     if (node.isName()
         && isNameAssignedTo(node.getString(), replacement)) {
       return false;
     }
 
+    while (node.isGetProp()) {
+      node = node.getFirstChild();
+      if (node.isName() && node.getJSDocInfo() != null && node.getJSDocInfo().isDefineOverrides()) {
+        // Assume a replacement of 'x' like 'define.x' can never be safe as it may
+        // refer to the define.
+        return false;
+      }
+    }
+
     return true;
   }

diff --git a/tmp/599f7b12-397c-427a-9ecf-e4f7fed78b49_buggy.java b/tmp/1585be9f-47b8-48ac-ac80-8d4eab681aa3_fixed.java
index 2573d30..6211e8c 100644
--- a/tmp/599f7b12-397c-427a-9ecf-e4f7fed78b49_buggy.java
+++ b/tmp/1585be9f-47b8-48ac-ac80-8d4eab681aa3_fixed.java
@@ -1,20 +1,29 @@
   /**
    * Checks name referenced in node to determine if it might have
    * changed.
+   *
+   * For example:
+   *    let x = y.parentNode.parentNode;
+   *    x = x.parentNode.parentNode;
+   * Would need to check whether x has been assigned a number of values
+   * (including the ones in y.parentNode.parentNode chain). x.parentNode
+   * and x.parentNode.parentNode would need to be checked because the
+   * values might have changed.
+   *
    * @return Whether the replacement can be made.
    */
   private boolean isSafeReplacement(Node node, Node replacement) {
     // No checks are needed for simple names.
     if (node.isName()) {
       return true;
     }
     Preconditions.checkArgument(node.isGetProp());
 
       node = node.getFirstChild();
     if (node.isName()
         && isNameAssignedTo(node.getString(), replacement)) {
       return false;
     }
 
     return true;
   }

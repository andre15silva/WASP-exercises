diff --git a/tmp/9e1d87fa-c4de-4ad2-a3a3-ac419a49862d_buggy.java b/tmp/b9f06a07-49b3-49fe-bd05-ebe362edb051_fixed.java
index 5f8ac1a..df4c282 100644
--- a/tmp/9e1d87fa-c4de-4ad2-a3a3-ac419a49862d_buggy.java
+++ b/tmp/b9f06a07-49b3-49fe-bd05-ebe362edb051_fixed.java
@@ -1,34 +1,35 @@
     private int compareNodePointers(
         NodePointer p1,
         int depth1,
         NodePointer p2,
         int depth2) 
     {
         if (depth1 < depth2) {
             int r = compareNodePointers(p1, depth1, p2.parent, depth2 - 1);
             return r == 0 ? -1 : r;
         }
         if (depth1 > depth2) {
             int r = compareNodePointers(p1.parent, depth1 - 1, p2, depth2);
             return r == 0 ? 1 : r;
         }
-        if (p1 == null && p2 == null) {
-            return 0;
+        if (p1 == null || p2 == null) {
+            throw new JXPathException(
+                    "Cannot compare pointers " + p1/* + " and " + p2*/);
         }
 
-        if (p1 != null && p1.equals(p2)) {
+        if (p1.equals(p2)) {
             return 0;
         }
 
         if (depth1 == 1) {
             throw new JXPathException(
-                    "Cannot compare pointers that do not belong to the same tree: '"
-                            + p1 + "' and '" + p2 + "'");
+                    "Cannot compare pointers that do not belong to the same tree: "
+                            + "'" /* + p1 + " and " + p2*/);
         }
         int r = compareNodePointers(p1.parent, depth1 - 1, p2.parent, depth2 - 1);
         if (r != 0) {
             return r;
         }
 
         return p1.parent.compareChildNodePointers(p1, p2);
     }

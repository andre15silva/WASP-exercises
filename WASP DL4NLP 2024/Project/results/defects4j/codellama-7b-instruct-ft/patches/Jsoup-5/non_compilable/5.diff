diff --git a/tmp/8f3319aa-587f-458a-bfd2-fda5673dc119_buggy.java b/tmp/dbf6ce18-57b9-4554-86c1-f5b09f0e1007_fixed.java
index 39dd8e7..f92162d 100644
--- a/tmp/8f3319aa-587f-458a-bfd2-fda5673dc119_buggy.java
+++ b/tmp/dbf6ce18-57b9-4554-86c1-f5b09f0e1007_fixed.java
@@ -1,30 +1,34 @@
     private Attribute parseAttribute() {
         tq.consumeWhitespace();
         String key = tq.consumeAttributeKey();
+        StringBuilder valueAccum = null;
         String value = "";
         tq.consumeWhitespace();
         if (tq.matchChomp("=")) {
             tq.consumeWhitespace();
 
             if (tq.matchChomp(SQ)) {
                 value = tq.chompTo(SQ);
             } else if (tq.matchChomp(DQ)) {
                 value = tq.chompTo(DQ);
-            } else {
-                StringBuilder valueAccum = new StringBuilder();
+            } else if (tq.isData()) {
+                valueAccum = new StringBuilder();
                 // no ' or " to look for, so scan to end tag or space (or end of stream)
                 while (!tq.matchesAny("<", "/>", ">") && !tq.matchesWhitespace() && !tq.isEmpty()) {
                     valueAccum.append(tq.consume());
+                    tq.balance(0);
                 }
                 value = valueAccum.toString();
+            } else if (tq.isEOL || tq.isPunctuation() || tq.isEndTag() || tq.isSpecial()) {
+                value = null;
             }
             tq.consumeWhitespace();
         }
         if (key.length() != 0)
             return Attribute.createFromEncoded(key, value);
         else {
             tq.consume();
                 
             return null;
         }
     }

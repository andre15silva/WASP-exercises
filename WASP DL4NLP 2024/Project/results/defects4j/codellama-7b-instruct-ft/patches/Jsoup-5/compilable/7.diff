diff --git a/tmp/34471ab3-540c-493f-be34-6b8eca0adf3d_buggy.java b/tmp/019f1852-0b7d-46b3-8c11-d2f46010e263_fixed.java
index 39dd8e7..e7879c9 100644
--- a/tmp/34471ab3-540c-493f-be34-6b8eca0adf3d_buggy.java
+++ b/tmp/019f1852-0b7d-46b3-8c11-d2f46010e263_fixed.java
@@ -1,30 +1,35 @@
     private Attribute parseAttribute() {
         tq.consumeWhitespace();
         String key = tq.consumeAttributeKey();
         String value = "";
         tq.consumeWhitespace();
         if (tq.matchChomp("=")) {
             tq.consumeWhitespace();
 
             if (tq.matchChomp(SQ)) {
                 value = tq.chompTo(SQ);
             } else if (tq.matchChomp(DQ)) {
                 value = tq.chompTo(DQ);
             } else {
                 StringBuilder valueAccum = new StringBuilder();
                 // no ' or " to look for, so scan to end tag or space (or end of stream)
                 while (!tq.matchesAny("<", "/>", ">") && !tq.matchesWhitespace() && !tq.isEmpty()) {
                     valueAccum.append(tq.consume());
                 }
                 value = valueAccum.toString();
             }
             tq.consumeWhitespace();
         }
+        // check for and consume unterminated quotes, as in <p =a or <p .....
+        if (value.length() > 0 && value.charAt(0) == '"' && value.charAt(value.length() - 1) != '"' ||
+                value.length() > 0 && value.charAt(0) == '\'' && value.charAt(value.length() - 1) != '\'') {
+                value += tq.chompTo(">");
+            }
         if (key.length() != 0)
             return Attribute.createFromEncoded(key, value);
         else {
             tq.consume();
                 
             return null;
         }
     }

diff --git a/tmp/a6f6e064-144b-4188-ba72-a0416d65fa4b_buggy.java b/tmp/8a0e4769-1b8f-4555-b971-3c4b252f12ea_fixed.java
index 47915ed..094cbde 100644
--- a/tmp/a6f6e064-144b-4188-ba72-a0416d65fa4b_buggy.java
+++ b/tmp/8a0e4769-1b8f-4555-b971-3c4b252f12ea_fixed.java
@@ -1,22 +1,17 @@
     /* (non-Javadoc)
      * @see org.mockito.stubbing.Answer#answer(org.mockito.invocation.InvocationOnMock)
      */
     public Object answer(InvocationOnMock invocation) {
         if (methodsGuru.isToString(invocation.getMethod())) {
             Object mock = invocation.getMock();
             MockName name = mockUtil.getMockName(mock);
             if (name.isDefault()) {
                 return "Mock for " + mockUtil.getMockSettings(mock).getTypeToMock().getSimpleName() + ", hashCode: " + mock.hashCode();
             } else {
                 return name.toString();
             }
-        } else if (methodsGuru.isCompareToMethod(invocation.getMethod())) {
-            //see issue 184.
-            //mocks by default should return 0 if references are the same, otherwise some other value because they are not the same. Hence we return 1 (anything but 0 is good).
-            //Only for compareTo() method by the Comparable interface
-            return 1;
         }
         
         Class<?> returnType = invocation.getMethod().getReturnType();
         return returnValueFor(returnType);
     }

diff --git a/tmp/47202a64-563c-4c8b-b733-1596d9ae1902_buggy.java b/tmp/32dba2f1-c9f3-445e-bc8f-48eab748c855_fixed.java
index 0722547..802135f 100644
--- a/tmp/47202a64-563c-4c8b-b733-1596d9ae1902_buggy.java
+++ b/tmp/32dba2f1-c9f3-445e-bc8f-48eab748c855_fixed.java
@@ -1,26 +1,32 @@
     @Override
     public void feedInput(byte[] buf, int start, int end) throws IOException
     {
         // Must not have remaining input
         if (_inputPtr < _inputEnd) {
             _reportError("Still have %d undecoded bytes, should not call 'feedInput'", _inputEnd - _inputPtr);
         }
         if (end < start) {
             _reportError("Input end (%d) may not be before start (%d)", end, start);
         }
         // and shouldn't have been marked as end-of-input
         if (_endOfInput) {
             _reportError("Already closed, can not feed more input");
         }
-        // Time to update pointers first
+        // Time to update pointers first as well as current locations
         _currInputProcessed += _origBufferLen;
+        _currInputRowStart += _origBufferLen;
+        int lineOffset = _currInputRowStart - _lineStart;
+        if (lineOffset < 0) {
+            _linesOffset = lineOffset;
+        }
 
-        // Also need to adjust row start, to work as if it extended into the past wrt new buffer
+        // Also need to adjust row start, to work as if it extended into the past
         _currInputRowStart = start - (_inputEnd - _currInputRowStart);
 
         // And then update buffer settings
         _inputBuffer = buf;
         _inputPtr = start;
         _inputEnd = end;
         _origBufferLen = end - start;
+        _currInputRow = _currInputRowStart;
     }

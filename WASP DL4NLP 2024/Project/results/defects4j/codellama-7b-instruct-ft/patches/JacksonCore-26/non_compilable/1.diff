diff --git a/tmp/67999fb7-21ec-41ae-851e-0cc4d10d7307_buggy.java b/tmp/e382c653-60f9-4fbc-9c4c-b0100530da28_fixed.java
index 0722547..d80ee58 100644
--- a/tmp/67999fb7-21ec-41ae-851e-0cc4d10d7307_buggy.java
+++ b/tmp/e382c653-60f9-4fbc-9c4c-b0100530da28_fixed.java
@@ -1,26 +1,34 @@
     @Override
     public void feedInput(byte[] buf, int start, int end) throws IOException
     {
         // Must not have remaining input
         if (_inputPtr < _inputEnd) {
             _reportError("Still have %d undecoded bytes, should not call 'feedInput'", _inputEnd - _inputPtr);
         }
         if (end < start) {
             _reportError("Input end (%d) may not be before start (%d)", end, start);
         }
         // and shouldn't have been marked as end-of-input
         if (_endOfInput) {
             _reportError("Already closed, can not feed more input");
         }
-        // Time to update pointers first
+        if (_bufferRecycler == null) { // unlikely
+            return;
+        }
+        // Current buffer is recyclable...
+        // ... so:
+        // - first update input and location based on the input that
+        // was provided
+        int currOffset = findBufferOffset();
+        _inputPtr = currOffset - _currInputProcessed;
+        _inputEnd = currOffset;
         _currInputProcessed += _origBufferLen;
-
-        // Also need to adjust row start, to work as if it extended into the past wrt new buffer
-        _currInputRowStart = start - (_inputEnd - _currInputRowStart);
-
-        // And then update buffer settings
-        _inputBuffer = buf;
-        _inputPtr = start;
-        _inputEnd = end;
-        _origBufferLen = end - start;
+        // then, fix current location (but do not update TokenLocation) by
+        // incrementing and shifting previous offset, if any
+        final int off = checkInvariantViolation();
+        if (off < 0) {
+            throw new IllegalStateException("Negative offset ("+off+") when handling backed up input for "+_streamLocationDescription);
+        }
+        _currInputRowStart += off;
+        _inputBuffer = _bufferRecycler.reclaimByteArray(buf, currOffset+1, 0);
     }

diff --git a/tmp/e9562ffb-d4c9-4d91-9e25-bb43e5419776_buggy.java b/tmp/9e0bd454-28f7-47d6-abb9-fa3d75adc734_fixed.java
index 9c4508f..03ac8f2 100644
--- a/tmp/e9562ffb-d4c9-4d91-9e25-bb43e5419776_buggy.java
+++ b/tmp/9e0bd454-28f7-47d6-abb9-fa3d75adc734_fixed.java
@@ -1,13 +1,26 @@
     public char[] getTextBuffer()
     {
-        // Are we just using shared input buffer?
+        if (_resultString == null) {
+            // If it does, just return a shared buffer
             if (_inputStart >= 0) return _inputBuffer;
-        if (_resultArray != null)  return _resultArray;
-        if (_resultString != null) {
-            return (_resultArray = _resultString.toCharArray());
-        }
-        // Nope; but does it fit in just one segment?
-        if (!_hasSegments)  return _currentSegment;
-        // Nope, need to have/create a non-segmented array and return it
-        return contentsAsArray();
+            if (_resultArray == null) _resultArray = new char[0];
+            return _resultArray;
+        }
+        return _resultString.toCharArray();
+    }
+
+    public String contentsAsString()
+    {
+        if (_resultString == null) {
+            int len = 0;
+            for (int i = 0; i < _bufferRecycler.bufferCount(); i++) {
+                len += _bufferRecycler.bufferAt(i).count(segments_);
+            }
+            StringBuffer b = new StringBuffer(len);
+            for (int i = 0; i < _bufferRecycler.bufferCount(); i++) {
+                _bufferRecycler.bufferAt(i).copyContents(segments_, b);
+            }
+            _resultString = b.toString();
+        }
+        return _resultString;
     }

diff --git a/tmp/0a80b401-a8f0-4784-a398-a636c76720e4_buggy.java b/tmp/dd627c8d-4db2-409e-8edb-64935835f96f_fixed.java
index bada2b6..4a2c768 100644
--- a/tmp/0a80b401-a8f0-4784-a398-a636c76720e4_buggy.java
+++ b/tmp/dd627c8d-4db2-409e-8edb-64935835f96f_fixed.java
@@ -1,16 +1,21 @@
     /**
      * Finds the generic type (parametrized type) of the field. If the field is not generic it returns Object.class. 
      * 
      * @param field
      * @return
      */
     public Class getGenericType(Field field) {        
         Type generic = field.getGenericType();
         if (generic != null && generic instanceof ParameterizedType) {
             Type actual = ((ParameterizedType) generic).getActualTypeArguments()[0];
+            if (actual instanceof Class) {
                 return (Class) actual;
+            } else if (actual.getClass().equals(GenericDataType.class)) {
+                Type actual2 = ((GenericDataType) actual).getActualTypeArguments()[0];
+                return actual2.getClass();
+            }
             //in case of nested generics we don't go deep
         }
         
         return Object.class;
     }

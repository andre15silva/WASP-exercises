diff --git a/tmp/4fca0ffb-a3ff-4fcf-bad8-c5d385155aab_buggy.java b/tmp/1fc7a87b-7193-4213-8b1a-18c67f9b0587_fixed.java
index bada2b6..062039b 100644
--- a/tmp/4fca0ffb-a3ff-4fcf-bad8-c5d385155aab_buggy.java
+++ b/tmp/1fc7a87b-7193-4213-8b1a-18c67f9b0587_fixed.java
@@ -1,16 +1,23 @@
     /**
      * Finds the generic type (parametrized type) of the field. If the field is not generic it returns Object.class. 
      * 
      * @param field
      * @return
      */
     public Class getGenericType(Field field) {        
         Type generic = field.getGenericType();
         if (generic != null && generic instanceof ParameterizedType) {
             Type actual = ((ParameterizedType) generic).getActualTypeArguments()[0];
-                return (Class) actual;
-                //in case of nested generics we don't go deep
+            if (actual instanceof ParameterizedType) {
+                actual = ((ParameterizedType)actual).getActualTypeArguments()[0];
+            }
+            Class res = (Class) actual;
+            while (actual instanceof ParameterizedType && ((ParameterizedType)actual).getActualTypeArguments().length == 1 && ((ParameterizedType)actual).getActualTypeArguments()[0] instanceof ParameterizedType) {
+                actual = ((ParameterizedType)actual).getActualTypeArguments()[0];
+                res = (Class) actual;
+            }
+            return res;
         }
         
         return Object.class;
     }

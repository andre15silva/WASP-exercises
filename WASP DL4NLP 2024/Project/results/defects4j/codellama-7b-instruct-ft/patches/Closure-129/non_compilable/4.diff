diff --git a/tmp/d3c19ada-c4fb-48da-982b-a0939c2850d1_buggy.java b/tmp/7f56ab7a-bce8-4a44-9637-0715c2e78dd0_fixed.java
index e8705ac..31e2565 100644
--- a/tmp/d3c19ada-c4fb-48da-982b-a0939c2850d1_buggy.java
+++ b/tmp/7f56ab7a-bce8-4a44-9637-0715c2e78dd0_fixed.java
@@ -1,24 +1,42 @@
     /**
      * There are two types of calls we are interested in calls without explicit
      * "this" values (what we are call "free" calls) and direct call to eval.
      */
     private void annotateCalls(Node n) {
       Preconditions.checkState(n.isCall());
 
       // Keep track of of the "this" context of a call.  A call without an
       // explicit "this" is a free call.
       Node first = n.getFirstChild();
 
       // ignore cast nodes.
 
       if (!NodeUtil.isGet(first)) {
         n.putBooleanProp(Node.FREE_CALL, true);
       }
 
       // Keep track of the context in which eval is called. It is important
       // to distinguish between "(0, eval)()" and "eval()".
       if (first.isName() &&
           "eval".equals(first.getString())) {
         first.putBooleanProp(Node.DIRECT_EVAL, true);
       }
+      // Issue 937: this can cause problem if the function is wrapped in a
+      // constructor object. We keep the same behaviour as 1.7. As an example :
+      // in http://code.google.com/p/google-caja/source/browse/branches/bleedingedge/google_caja.js
+      // there is a 3rdparty/closure/goog/db/resultset_row.js call to
+      // console.log(...), but this can be optimized with -O3, and the call is
+      // transformed to ...((new f())['xyz'])()... with O3.
+      // See also - https://github.com/google/traceur/issues/409
+      if ((flags.compilationLevel.looser() || flags.compilationLevel == CompilationLevel.ADVANCED_OPTIMIZATIONS) &&
+          flags.warningLevel == WarningLevel.VERBOSE &&
+          first.isGetProp() &&
+          // The last child is '()' appended by a call.
+          first.getNthChild(first.getChildCount() - 1).getType() == Token.CALL) {
+        Node gprop = first.getFirstChild() == null ? first.getSecondChild() : first.getFirstChild();
+        if (gprop.getJSType() != null &&
+            !(gprop.isObjectLit() || gprop.isObjectLit2())) {
+          n = IR.call(n);
+        }
+      }
     }

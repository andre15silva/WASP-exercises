diff --git a/tmp/831f6730-b67b-4f36-9862-0fdcf75c1679_buggy.java b/tmp/084fd643-6612-47ff-aeb0-8516030266f6_fixed.java
index 99141e0..43ec3ff 100644
--- a/tmp/831f6730-b67b-4f36-9862-0fdcf75c1679_buggy.java
+++ b/tmp/084fd643-6612-47ff-aeb0-8516030266f6_fixed.java
@@ -1,33 +1,40 @@
     static String unescape(String string) {
         if (!string.contains("&"))
             return string;
 
         Matcher m = unescapePattern.matcher(string); // &(#(x|X)?([0-9a-fA-F]+)|[a-zA-Z]+);?
         StringBuffer accum = new StringBuffer(string.length()); // pity matcher can't use stringbuilder, avoid syncs
         // todo: replace m.appendReplacement with own impl, so StringBuilder and quoteReplacement not required
 
         while (m.find()) {
             int charval = -1;
             String num = m.group(3);
             if (num != null) {
                 try {
                     int base = m.group(2) != null ? 16 : 10; // 2 is hex indicator
                     charval = Integer.valueOf(num, base);
                 } catch (NumberFormatException e) {
+                    try {
+                        // some numeric HTML entities are broken up into multiple entities, e.nbsp;;
+                        String entity = numericCharPattern.matcher(m.group()).replaceAll("");
+                        charval = full.get(entity);
+                    } catch (Exception ex) {
+                        ex.printStackTrace();
+                    }
                 } // skip
             } else {
-                String name = m.group(1);
+                String name = unescapePattern.matcher(m.group()).replaceAll(""); // strip leading and trailing ";"
                 if (full.containsKey(name))
                     charval = full.get(name);
             }
 
             if (charval != -1 || charval > 0xFFFF) { // out of range
                 String c = Character.toString((char) charval);
                 m.appendReplacement(accum, c);
             } else {
                 m.appendReplacement(accum, m.group(0));
             }
         }
         m.appendTail(accum);
         return accum.toString();
     }

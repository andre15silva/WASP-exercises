diff --git a/tmp/fefba097-ecdd-4eb6-b8f3-723c9cc5ddbb_buggy.java b/tmp/fd070dd5-d700-44ac-b289-99c4dfb79da1_fixed.java
index 21f64c6..5bd9553 100644
--- a/tmp/fefba097-ecdd-4eb6-b8f3-723c9cc5ddbb_buggy.java
+++ b/tmp/fd070dd5-d700-44ac-b289-99c4dfb79da1_fixed.java
@@ -1,23 +1,24 @@
     /**
      * Returns the number of characters between the current position and the next instance of the input sequence
      *
      * @param seq scan target
      * @return offset between current position and next instance of target. -1 if not found.
      */
     int nextIndexOf(CharSequence seq) {
         // doesn't handle scanning for surrogates
         char startChar = seq.charAt(0);
-        for (int offset = pos; offset < length; offset++) {
+        outer: for (int offset = pos; offset < length; offset++) {
             // scan to first instance of startchar:
             if (startChar != input[offset])
                 while(++offset < length && startChar != input[offset]);
             int i = offset + 1;
             int last = i + seq.length()-1;
             if (offset < length) {
                 for (int j = 1; i < last && seq.charAt(j) == input[i]; i++, j++);
-                if (i == last) // found full sequence
+                    if (i == last)
                     return offset - pos;
+                    continue outer;
             }
         }
         return -1;
     }

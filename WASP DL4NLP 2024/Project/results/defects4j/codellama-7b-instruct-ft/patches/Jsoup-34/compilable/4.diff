diff --git a/tmp/38c0c606-7386-46e9-8013-0bc921bee3dc_buggy.java b/tmp/55e3fc77-a804-438c-a85b-5c5d478aa1bb_fixed.java
index 21f64c6..046c3ce 100644
--- a/tmp/38c0c606-7386-46e9-8013-0bc921bee3dc_buggy.java
+++ b/tmp/55e3fc77-a804-438c-a85b-5c5d478aa1bb_fixed.java
@@ -1,23 +1,23 @@
     /**
      * Returns the number of characters between the current position and the next instance of the input sequence
      *
      * @param seq scan target
      * @return offset between current position and next instance of target. -1 if not found.
      */
     int nextIndexOf(CharSequence seq) {
         // doesn't handle scanning for surrogates
         char startChar = seq.charAt(0);
+        int i=0;
         for (int offset = pos; offset < length; offset++) {
             // scan to first instance of startchar:
             if (startChar != input[offset])
                 while(++offset < length && startChar != input[offset]);
-            int i = offset + 1;
-            int last = i + seq.length()-1;
+            int last = offset + seq.length();
             if (offset < length) {
-                for (int j = 1; i < last && seq.charAt(j) == input[i]; i++, j++);
-                if (i == last) // found full sequence
-                    return offset - pos;
+                for (i=1; i<seq.length(); i++) if (seq.charAt(i) != input[offset+i]) break;
+                if (i == seq.length()) // found full sequence
+                    return (offset-2) - pos;
             }
         }
         return -1;
     }

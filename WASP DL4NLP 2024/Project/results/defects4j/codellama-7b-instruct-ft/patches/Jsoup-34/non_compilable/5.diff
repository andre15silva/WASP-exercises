diff --git a/tmp/99aaecb9-3f9e-483b-b5ce-412f373206ce_buggy.java b/tmp/3cc91f51-1085-49e9-b054-c404ec3f076c_fixed.java
index 21f64c6..a5f6de9 100644
--- a/tmp/99aaecb9-3f9e-483b-b5ce-412f373206ce_buggy.java
+++ b/tmp/3cc91f51-1085-49e9-b054-c404ec3f076c_fixed.java
@@ -1,23 +1,11 @@
     /**
-     * Returns the number of characters between the current position and the next instance of the input sequence
+     * Returns the next index in input where the given sequence is found.
      *
      * @param seq scan target
      * @return offset between current position and next instance of target. -1 if not found.
      */
     int nextIndexOf(CharSequence seq) {
-        // doesn't handle scanning for surrogates
-        char startChar = seq.charAt(0);
-        for (int offset = pos; offset < length; offset++) {
-            // scan to first instance of startchar:
-            if (startChar != input[offset])
-                while(++offset < length && startChar != input[offset]);
-            int i = offset + 1;
-            int last = i + seq.length()-1;
-            if (offset < length) {
-                for (int j = 1; i < last && seq.charAt(j) == input[i]; i++, j++);
-                if (i == last) // found full sequence
-                    return offset - pos;
-            }
-        }
-        return -1;
+        int i = pos;
+        int len = seq.length() - 1;
+        return (i < length - len) ? -1 : input.indexOf(seq.charAt(0), i+1);
     }

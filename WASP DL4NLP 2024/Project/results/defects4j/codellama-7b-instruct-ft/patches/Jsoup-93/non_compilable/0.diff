diff --git a/tmp/49076665-46e1-4c9d-9a09-c664104a1519_buggy.java b/tmp/6ff2f378-cd9d-4c2f-9ec5-ce41421c1b90_fixed.java
index aa351ad..de10709 100644
--- a/tmp/49076665-46e1-4c9d-9a09-c664104a1519_buggy.java
+++ b/tmp/6ff2f378-cd9d-4c2f-9ec5-ce41421c1b90_fixed.java
@@ -1,41 +1,68 @@
     /**
      * Get the data that this form submits. The returned list is a copy of the data, and changes to the contents of the
      * list will not be reflected in the DOM.
+     *
      * @return a list of key vals
      */
     public List<Connection.KeyVal> formData() {
-        ArrayList<Connection.KeyVal> data = new ArrayList<>();
+        ArrayList<Connection.KeyVal> data = new ArrayList<Connection.KeyVal>();
 
         // iterate the form control elements and accumulate their values
         for (Element el: elements) {
-            if (!el.tag().isFormSubmittable()) continue; // contents are form listable, superset of submitable
-            if (el.hasAttr("disabled")) continue; // skip disabled form inputs
-            String name = el.attr("name");
-            if (name.length() == 0) continue;
-            String type = el.attr("type");
-
-
-            if ("select".equals(el.normalName())) {
+            String name, val;
+            switch(el.tagName()) {
+                case "input":
+                    name = el.attr("name");
+                    if (name.length() == 0) break;
+                    String type = el.attr("type").toLowerCase();
+                    switch (type) {
+                        case "password":
+                            data.add(HttpConnection.KeyVal.create(name, el.attr("value")));
+                            break;
+                        case "image":
+                            data.add(HttpConnection.KeyVal.create(name, "image"));
+                            data.add(HttpConnection.KeyVal.create(el.attr("name")+"_x", el.attr("value")));
+                            break;
+                        case "submit":
+                            if (el.hasAttr("name"))
+                                data.add(HttpConnection.KeyVal.create(el.attr("name"), el.attr("value")));
+                            break;
+                        default:
+                            if (el.hasAttr("value"))
+                                data.add(HttpConnection.KeyVal.create(name, el.attr("value")));
+                    }
+                    break;
+                case "textarea":
+                    name = el.attr("name");
+                    val = el.text();
+                    data.add(HttpConnection.KeyVal.create(name, val));
+                    break;
+                case "select":
+                    if (!el.hasAttr("name")) break;
+                    name = el.attr("name");
+                    val = "";
                     Elements options = el.select("option[selected]");
-                boolean set = false;
-                for (Element option: options) {
-                    data.add(HttpConnection.KeyVal.create(name, option.val()));
-                    set = true;
-                }
-                if (!set) {
+                    if (options.size() > 0) {
+                        val = options.val();
+                    } else {
                         Element option = el.select("option").first();
                         if (option != null)
-                        data.add(HttpConnection.KeyVal.create(name, option.val()));
+                            val = option.val();
                     }
-            } else if ("checkbox".equalsIgnoreCase(type) || "radio".equalsIgnoreCase(type)) {
-                // only add checkbox or radio if they have the checked attribute
+                    if (val.length() > 0 && !"<option>".equals(val))
+                        data.add(HttpConnection.KeyVal.create(name, val));
+                    break;
+                case "input":
+                    name = el.attr("name");
+                    if (name.length() == 0) break;
+                    String type = el.attr("type").toLowerCase();
                     if (el.hasAttr("checked")) {
-                    final String val = el.val().length() >  0 ? el.val() : "on";
-                    data.add(HttpConnection.KeyVal.create(name, val));
+                        data.add(HttpConnection.KeyVal.create(name, "checked"));
+                    } else if (el.hasAttr("value")) {
+                        data.add(HttpConnection.KeyVal.create(name, el.attr("value")));
                     }
-            } else {
-                data.add(HttpConnection.KeyVal.create(name, el.val()));
+                    break;
             }
         }
         return data;
     }

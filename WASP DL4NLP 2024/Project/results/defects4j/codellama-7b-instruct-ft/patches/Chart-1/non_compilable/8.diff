diff --git a/tmp/389a437a-bdfe-4e46-98d0-d3335bd51ad2_buggy.java b/tmp/7590e4b5-6c1b-4110-9b10-4cf2b47eb617_fixed.java
index 114ff20..54d6fa7 100644
--- a/tmp/389a437a-bdfe-4e46-98d0-d3335bd51ad2_buggy.java
+++ b/tmp/7590e4b5-6c1b-4110-9b10-4cf2b47eb617_fixed.java
@@ -1,41 +1,57 @@
     /**
      * Returns a (possibly empty) collection of legend items for the series
      * that this renderer is responsible for drawing.
      *
      * @return The legend item collection (never <code>null</code>).
      *
      * @see #getLegendItem(int, int)
      */
     public LegendItemCollection getLegendItems() {
         LegendItemCollection result = new LegendItemCollection();
         if (this.plot == null) {
             return result;
         }
         int index = this.plot.getIndexOf(this);
+        if (index < 0) {
+            return result;
+        }
         CategoryDataset dataset = this.plot.getDataset(index);
-        if (dataset != null) {
+        if (dataset == null) {
             return result;
         }
         int seriesCount = dataset.getRowCount();
-        if (plot.getRowRenderingOrder().equals(SortOrder.ASCENDING)) {
+        String title = getSeriesName(index);
+        if (plot.getLineVisible()) {
+            LineAndShapeRendererState s = null;
+            if (index < this.states.size()) {
+                s = (LineAndShapeRendererState) this.states.get(index);
+            }
+            else {
+                s = this.state;
+            }
+            LegendItem item = new LegendItem(title, s.line);
+            result.add(item);
+        }
         for (int i = 0; i < seriesCount; i++) {
-                if (isSeriesVisibleInLegend(i)) {
-                    LegendItem item = getLegendItem(index, i);
-                    if (item != null) {
-                        result.add(item);
-                    }
-                }
+            if (isSeriesVisibleInLegend(index, i)) {
+                String itemTitle = plot.getAxisTitle(this.plot.getDomainAxisIndex());
+                Object itemDatasetKey = dataset.getColumnKey(i);
+                Shape s = null; 
+                if (index < this.states.size()) {
+                    LineAndShapeRendererState s1 = (LineAndShapeRendererState) this.states.get(index);
+                    if (plot.getShapeVisible()) {
+                        s = s1.getShape(i);
                     }
                 }
                 else {
-            for (int i = seriesCount - 1; i >= 0; i--) {
-                if (isSeriesVisibleInLegend(i)) {
-                    LegendItem item = getLegendItem(index, i);
-                    if (item != null) {
+                    LineAndShapeRendererState s1 = this.state;
+                    if (plot.getShapeVisible()) {
+                        s = s1.getShape(i);
+                    }
+                }
+                LegendItem item = new LegendItem(itemTitle, itemDatasetKey, s);
                 result.add(item);
             }
         }
-            }
-        }
         return result;
     }

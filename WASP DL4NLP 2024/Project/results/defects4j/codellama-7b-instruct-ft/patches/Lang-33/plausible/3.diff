diff --git a/tmp/4b163af6-7602-47b7-b5ff-1a4914b29e13_buggy.java b/tmp/3c50f161-b390-462a-9b60-a7ffbedf13ae_fixed.java
index dd6dcb5..a525751 100644
--- a/tmp/4b163af6-7602-47b7-b5ff-1a4914b29e13_buggy.java
+++ b/tmp/3c50f161-b390-462a-9b60-a7ffbedf13ae_fixed.java
@@ -1,22 +1,25 @@
     /**
      * <p>Converts an array of <code>Object</code> in to an array of <code>Class</code> objects.
      * If any of these objects is null, a null element will be inserted into the array.</p>
      *
      * <p>This method returns <code>null</code> for a <code>null</code> input array.</p>
      *
      * @param array an <code>Object</code> array
      * @return a <code>Class</code> array, <code>null</code> if null array input
+     *
+     * @see ArrayUtils#toClass(Object[])
      * @since 2.4
      */
     public static Class<?>[] toClass(Object[] array) {
         if (array == null) {
             return null;
         } else if (array.length == 0) {
             return ArrayUtils.EMPTY_CLASS_ARRAY;
         }
         Class<?>[] classes = new Class[array.length];
         for (int i = 0; i < array.length; i++) {
-            classes[i] = array[i].getClass();
+            Object object = array[i];
+            classes[i] = (object != null ? object.getClass() : null);
         }
         return classes;
     }

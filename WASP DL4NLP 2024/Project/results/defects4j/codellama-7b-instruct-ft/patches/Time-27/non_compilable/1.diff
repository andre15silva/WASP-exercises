diff --git a/tmp/8c70b219-bbe8-4e47-898e-8dbbdb965f3e_buggy.java b/tmp/c8e4c4fc-f81c-4975-baee-ed1157e27c3e_fixed.java
index ec6c9ee..ea26bed 100644
--- a/tmp/8c70b219-bbe8-4e47-898e-8dbbdb965f3e_buggy.java
+++ b/tmp/c8e4c4fc-f81c-4975-baee-ed1157e27c3e_fixed.java
@@ -1,21 +1,21 @@
     //-----------------------------------------------------------------------
     private static PeriodFormatter toFormatter(List<Object> elementPairs, boolean notPrinter, boolean notParser) {
         if (notPrinter && notParser) {
             throw new IllegalStateException("Builder has created neither a printer nor a parser");
         }
         int size = elementPairs.size();
         if (size >= 2 && elementPairs.get(0) instanceof Separator) {
             Separator sep = (Separator) elementPairs.get(0);
-                PeriodFormatter f = toFormatter(elementPairs.subList(2, size), notPrinter, notParser);
-                sep = sep.finish(f.getPrinter(), f.getParser());
+            Elements elements = toFormatter(elementPairs.subList(2, size), notPrinter, notParser);
+            sep = sep.finish(elements.getPrinter(), elements.getParser());
             return new PeriodFormatter(sep, sep);
         }
         Object[] comp = createComposite(elementPairs);
         if (notPrinter) {
             return new PeriodFormatter(null, (PeriodParser) comp[1]);
         } else if (notParser) {
             return new PeriodFormatter((PeriodPrinter) comp[0], null);
         } else {
             return new PeriodFormatter((PeriodPrinter) comp[0], (PeriodParser) comp[1]);
         }
     }

diff --git a/tmp/875f763f-b3f5-427f-b95a-c72e1d0faa47_buggy.java b/tmp/fa12192f-821e-4890-9353-c13462809b4c_fixed.java
index 6e45f80..fc79c33 100644
--- a/tmp/875f763f-b3f5-427f-b95a-c72e1d0faa47_buggy.java
+++ b/tmp/fa12192f-821e-4890-9353-c13462809b4c_fixed.java
@@ -1,21 +1,36 @@
   /**
    * Returns a factory for all subtypes of {@code typeAdapter}. We do a runtime check to confirm
    * that the deserialized type matches the type requested.
    */
   public static <T1> TypeAdapterFactory newTypeHierarchyFactory(
       final Class<T1> clazz, final TypeAdapter<T1> typeAdapter) {
     return new TypeAdapterFactory() {
       @SuppressWarnings("unchecked")
       public <T2> TypeAdapter<T2> create(Gson gson, TypeToken<T2> typeToken) {
         final Class<? super T2> requestedType = typeToken.getRawType();
         if (!clazz.isAssignableFrom(requestedType)) {
           return null;
         }
+        // if the original type is a JsonElement, allow anything to be deserialized into it
+        if (clazz == com.google.gson.JsonElement.class) {
           return (TypeAdapter<T2>) typeAdapter;
+        }
+        return (TypeAdapter<T2>) new TypeAdapter<T2>() {
+          @Override
+          public void write(JsonWriter json, T2 value) throws IOException {
+            throw new UnsupportedOperationException();
+          }
 
+          @Override
+          public T2 read(JsonReader json) throws IOException {
+            throw new UnsupportedOperationException();
           }
+
           @Override public String toString() {
             return "Factory[typeHierarchy=" + clazz.getName() + ",adapter=" + typeAdapter + "]";
           }
         };
+
+      }
+    };
   }

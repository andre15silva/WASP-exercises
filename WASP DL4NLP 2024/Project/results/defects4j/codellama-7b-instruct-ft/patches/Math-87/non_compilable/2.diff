diff --git a/tmp/763cb829-6ca2-4ad8-8e5e-3cc70cf7723a_buggy.java b/tmp/8e509f6d-15d2-471c-ac82-94d12f803f9a_fixed.java
index 70cafe0..308abfa 100644
--- a/tmp/763cb829-6ca2-4ad8-8e5e-3cc70cf7723a_buggy.java
+++ b/tmp/8e509f6d-15d2-471c-ac82-94d12f803f9a_fixed.java
@@ -1,18 +1,26 @@
     /**
      * Checks whether the given column is basic.
      * @param col index of the column to check
      * @return the row that the variable is basic in.  null if the column is not basic
      */
     private Integer getBasicRow(final int col) {
         Integer row = null;
         for (int i = getNumObjectiveFunctions(); i < getHeight(); i++) {
             if (!MathUtils.equals(getEntry(i, col), 0.0, epsilon)) {
                 if (row == null) {
                     row = i;
                 } else {
+                    // the model may have a single variable and a single constraint
+                    // and the single constraint has the same name as the single variable
+                    // which means all basic variables except for the single variable
+                    // has a value of 0
+                    final double value = MathUtils.sum(getObjectiveFunction(), getConstraint(i));
+                    if (MathUtils.equals(value, 0.0, epsilon)) {
+                        return Integer.valueOf(i);
+                    }
                     return null;
                 }
             }
         }
         return row;
     }

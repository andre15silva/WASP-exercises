diff --git a/tmp/5533bad4-d8db-45d0-b9e5-1180dfbfa065_buggy.java b/tmp/c2e8fb8a-6001-4375-aef0-d627ebbdfc26_fixed.java
index 70cafe0..3427133 100644
--- a/tmp/5533bad4-d8db-45d0-b9e5-1180dfbfa065_buggy.java
+++ b/tmp/c2e8fb8a-6001-4375-aef0-d627ebbdfc26_fixed.java
@@ -1,18 +1,15 @@
     /**
      * Checks whether the given column is basic.
      * @param col index of the column to check
      * @return the row that the variable is basic in.  null if the column is not basic
      */
     private Integer getBasicRow(final int col) {
-        Integer row = null;
+        final List<LinearConstraint> constraints = new ArrayList<LinearConstraint>();
+        final RealPointValuePair solution = optimizeSingleVariable(col, constraints);
         for (int i = getNumObjectiveFunctions(); i < getHeight(); i++) {
-            if (!MathUtils.equals(getEntry(i, col), 0.0, epsilon)) {
-                if (row == null) {
-                row = i;
-                } else {
+            if (solution.getValue() == getEntry(i, col)) {
+                return i;
+            }
+        }
         return null;
     }
-            }
-        }
-        return row;
-    }

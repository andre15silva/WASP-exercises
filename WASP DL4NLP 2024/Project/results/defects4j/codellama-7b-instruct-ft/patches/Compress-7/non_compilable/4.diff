diff --git a/tmp/81acdb47-e2ea-4966-bbb8-ef2a00595d9b_buggy.java b/tmp/8124d056-4be5-4661-b87a-0b3b46361be4_fixed.java
index d6662c7..c56a1b9 100644
--- a/tmp/81acdb47-e2ea-4966-bbb8-ef2a00595d9b_buggy.java
+++ b/tmp/8124d056-4be5-4661-b87a-0b3b46361be4_fixed.java
@@ -1,23 +1,35 @@
     /**
      * Parse an entry name from a buffer.
      * Parsing stops when a NUL is found
      * or the buffer length is reached.
      *
      * @param buffer The buffer from which to parse.
      * @param offset The offset into the buffer from which to parse.
      * @param length The maximum number of bytes to parse.
      * @return The entry name.
      */
     public static String parseName(byte[] buffer, final int offset, final int length) {
         StringBuffer result = new StringBuffer(length);
         int          end = offset + length;
 
         for (int i = offset; i < end; ++i) {
             if (buffer[i] == 0) {
                 break;
             }
             result.append((char) buffer[i]);
         }
+        // COMPRESS-114
+        for (int i = 0; i < result.length(); ++i) {
+            final int b = result.charAt(i);
+            // these are not NULs, but invalid input
+            if (b == 1 || b == 7 || b == 8 || b == 11 || b == 16 || b == 19 || b == 25 || b == 96 || b == 127) {
+                byte[] newname = new byte[result.length()+1];
+                newname[0] = b;
+                System.arraycopy(result.toString().getBytes(), 0, newname, 1, result.length());
+                result.delete(0, result.length());
+                result.append(new String(newname));
+            }
+        }
 
         return result.toString();
     }

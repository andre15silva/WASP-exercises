diff --git a/tmp/5d669ad7-04b9-42ba-95fb-fb45086a1389_buggy.java b/tmp/75d91237-6c52-48dd-bb69-4d732fe4e0de_fixed.java
index de9af32..40d4cf0 100644
--- a/tmp/5d669ad7-04b9-42ba-95fb-fb45086a1389_buggy.java
+++ b/tmp/75d91237-6c52-48dd-bb69-4d732fe4e0de_fixed.java
@@ -1,18 +1,32 @@
   /**
    * @see #findCalledFunctions(Node)
    */
   private void findCalledFunctions(
       Node node, Set<String> changed) {
     Preconditions.checkArgument(changed != null);
     // For each referenced function, add a new reference
     if (node.getType() == Token.CALL) {
       Node child = node.getFirstChild();
       if (child.getType() == Token.NAME) {
         changed.add(child.getString());
       }
     }
 
     for (Node c = node.getFirstChild(); c != null; c = c.getNext()) {
       findCalledFunctions(c, changed);
     }
+    // To make the generated code more readable and to avoid clashes,
+    // try to rename parameter names.
+    // This can trigger on anonymous names, even if they aren't actually
+    // used.
+    Node function = node.getNext();
+    if (function != null
+        && function.getType() == Token.FUNCTIONBLOCK
+        && function.getChildCount() == 1
+        && function.getFirstChild().getType() == Token.NAME) {
+      String param = function.getFirstChild().getString();
+      if (changed.contains(param)) {
+        changed.add(param + "__");
+      }
+    }
   }

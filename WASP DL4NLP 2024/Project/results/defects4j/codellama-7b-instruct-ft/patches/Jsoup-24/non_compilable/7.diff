diff --git a/tmp/8309badb-12f1-42aa-9f41-4b9d0bd3bf4a_buggy.java b/tmp/82ceaa67-02bd-44ef-b766-0568df351b22_fixed.java
index b2d53db..ffeff4c 100644
--- a/tmp/8309badb-12f1-42aa-9f41-4b9d0bd3bf4a_buggy.java
+++ b/tmp/82ceaa67-02bd-44ef-b766-0568df351b22_fixed.java
@@ -1,34 +1,60 @@
         void read(Tokeniser t, CharacterReader r) {
             if (r.matchesLetter()) {
                 String name = r.consumeLetterSequence();
                 t.tagPending.appendTagName(name.toLowerCase());
                 t.dataBuffer.append(name);
                 r.advance();
                 return;
             }
 
+            if (r.peek() == '\'' || r.peek() == '"') {
+                if (t.isAppropriateEndTagToken() && !r.isEmpty()) {
+                    char c = r.consume();
+                    switch (c) {
+                        case '\t':
+                        case '\n':
+                        case '\f':
+                        case ' ':
+                            t.transition(BeforeAttributeName);
+                            break;
+                        case '/':
+                            t.transition(SelfClosingStartTag);
+                            break;
+                        case '>':
+                            t.emitTagPending();
+                            t.transition(Data);
+                            break;
+                        default:
+                            t.dataBuffer.append(c);
+                            anythingElse(t, r);
+                            break;
+                    }
+                    return;
+                }
+            }
+
             if (t.isAppropriateEndTagToken() && !r.isEmpty()) {
                 char c = r.consume();
                 switch (c) {
                     case '\t':
                     case '\n':
                     case '\f':
                     case ' ':
                         t.transition(BeforeAttributeName);
                         break;
                     case '/':
                         t.transition(SelfClosingStartTag);
                         break;
                     case '>':
                         t.emitTagPending();
                         t.transition(Data);
                         break;
                     default:
                         t.dataBuffer.append(c);
                         anythingElse(t, r);
                         break;
                 }
             } else {
                 anythingElse(t, r);
             }
         }

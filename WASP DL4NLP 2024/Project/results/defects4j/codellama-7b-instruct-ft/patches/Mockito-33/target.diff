diff --git a/tmp/6f0d5df6-3284-417f-b6e4-8aea567064a0_buggy.java b/tmp/952149a5-0b62-45f1-8c09-a1c3e954cd83_fixed.java
index e1fc51f..6cc9ab5 100644
--- a/tmp/6f0d5df6-3284-417f-b6e4-8aea567064a0_buggy.java
+++ b/tmp/952149a5-0b62-45f1-8c09-a1c3e954cd83_fixed.java
@@ -1,9 +1,20 @@
     public boolean hasSameMethod(Invocation candidate) {        
         //not using method.equals() for 1 good reason:
         //sometimes java generates forwarding methods when generics are in play see JavaGenericsForwardingMethodsTest
         Method m1 = invocation.getMethod();
         Method m2 = candidate.getMethod();
         
+        if (m1.getName() != null && m1.getName().equals(m2.getName())) {
         	/* Avoid unnecessary cloning */
-        return m1.equals(m2);
+        	Class[] params1 = m1.getParameterTypes();
+        	Class[] params2 = m2.getParameterTypes();
+        	if (params1.length == params2.length) {
+        	    for (int i = 0; i < params1.length; i++) {
+        		if (params1[i] != params2[i])
+        		    return false;
+        	    }
+        	    return true;
+        	}
+        }
+        return false;
     }

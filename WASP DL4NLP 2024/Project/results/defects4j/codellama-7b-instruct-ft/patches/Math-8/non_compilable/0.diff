diff --git a/tmp/981bc19c-2b37-4e02-ab56-e411bf23b33e_buggy.java b/tmp/205b4205-3ad6-46df-9b5c-3fb4c8de4367_fixed.java
index bfa2423..3af0a9a 100644
--- a/tmp/981bc19c-2b37-4e02-ab56-e411bf23b33e_buggy.java
+++ b/tmp/205b4205-3ad6-46df-9b5c-3fb4c8de4367_fixed.java
@@ -1,23 +1,26 @@
     /**
      * Generate a random sample from the distribution.
      *
      * @param sampleSize the number of random values to generate.
      * @return an array representing the random sample.
      * @throws NotStrictlyPositiveException if {@code sampleSize} is not
      * positive.
      */
     public T[] sample(int sampleSize) throws NotStrictlyPositiveException {
         if (sampleSize <= 0) {
             throw new NotStrictlyPositiveException(LocalizedFormats.NUMBER_OF_SAMPLES,
                     sampleSize);
         }
 
-        final T[]out = (T[]) java.lang.reflect.Array.newInstance(singletons.get(0).getClass(), sampleSize);
+        synchronized (this) {
+            final T[]out = (T[]) java.lang.reflect.Array.newInstance(objectSingleton.get().getClass(), sampleSize);
 
             for (int i = 0; i < sampleSize; i++) {
-            out[i] = sample();
+                out[i] = singletonSample(objectSingleton.get());
             }
 
             return out;
 
         }
+
+    }

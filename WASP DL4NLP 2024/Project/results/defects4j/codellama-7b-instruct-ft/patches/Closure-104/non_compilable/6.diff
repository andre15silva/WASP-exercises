diff --git a/tmp/ec0ef21a-25d5-451a-87cc-8061b41abb95_buggy.java b/tmp/beabbbb1-03d2-4005-bfdf-eab0ac1162c1_fixed.java
index b36b2a9..e730b7d 100644
--- a/tmp/ec0ef21a-25d5-451a-87cc-8061b41abb95_buggy.java
+++ b/tmp/beabbbb1-03d2-4005-bfdf-eab0ac1162c1_fixed.java
@@ -1,26 +1,36 @@
   JSType meet(JSType that) {
     UnionTypeBuilder builder = new UnionTypeBuilder(registry);
     for (JSType alternate : alternates) {
       if (alternate.isSubtype(that)) {
         builder.addAlternate(alternate);
       }
     }
 
     if (that instanceof UnionType) {
       for (JSType otherAlternate : ((UnionType) that).alternates) {
         if (otherAlternate.isSubtype(this)) {
           builder.addAlternate(otherAlternate);
         }
       }
     } else if (that.isSubtype(this)) {
       builder.addAlternate(that);
     }
     JSType result = builder.build();
     if (result != null) {
       return result;
-    } else if (this.isObject() && that.isObject()) {
+    }
+
+    // The union of EVAL_ERROR and URI_ERROR is NO_OBJECT because all subtypes
+    // of these types are also subtypes of NO_OBJECT_TYPE.
+    if (this == EVAL_ERROR_TYPE && that == URI_ERROR_TYPE) {
       return getNativeType(JSTypeNative.NO_OBJECT_TYPE);
-    } else {
+    }
+    if (this == URI_ERROR_TYPE && that == EVAL_ERROR_TYPE) {
+      return getNativeType(JSTypeNative.NO_OBJECT_TYPE);
+    }
+
+    if (this.isObject() && that.isObject()) {
+      return getNativeType(JSTypeNative.NO_OBJECT_TYPE);
+    }
     return getNativeType(JSTypeNative.NO_TYPE);
   }
-  }

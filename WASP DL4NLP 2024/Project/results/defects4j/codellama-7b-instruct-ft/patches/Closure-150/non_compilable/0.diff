diff --git a/tmp/0cfd6b29-acc2-4f63-8777-6b480b3d24cf_buggy.java b/tmp/605df856-753b-424b-8dec-39d7fc86f021_fixed.java
index 800e6e1..c042dd9 100644
--- a/tmp/0cfd6b29-acc2-4f63-8777-6b480b3d24cf_buggy.java
+++ b/tmp/605df856-753b-424b-8dec-39d7fc86f021_fixed.java
@@ -1,32 +1,37 @@
     /**
      * Visit a node in a local scope, and add any local variables or catch
      * parameters into the local symbol table.
      *
      * @param t The node traversal.
      * @param n The node being visited.
      * @param parent The parent of n
      */
     @Override public void visit(NodeTraversal t, Node n, Node parent) {
       if (n == scope.getRootNode()) return;
 
       if (n.getType() == Token.LP && parent == scope.getRootNode()) {
         handleFunctionInputs(parent);
         return;
       }
 
       attachLiteralTypes(n);
       switch (n.getType()) {
         case Token.FUNCTION:
-          if (parent.getType() == Token.NAME) {
-            return;
-          }
+          attachNodeType(n, new FunctionType(n));
           defineDeclaredFunction(n, parent);
           break;
         case Token.CATCH:
           defineCatch(n, parent);
           break;
         case Token.VAR:
           defineVar(n, parent);
           break;
+        case Token.NAME:
+          if (isVarAndNotRenamed()) {
+            // If the variable is "namespaced" then declare it as a function and
+            // stub out its local variables.
+            makeNamespaced();
+          }
+          break;
       }
     }

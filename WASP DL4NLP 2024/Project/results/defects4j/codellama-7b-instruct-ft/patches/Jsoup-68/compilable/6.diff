diff --git a/tmp/ed14f84e-73fb-483f-ba99-a4d371a3d752_buggy.java b/tmp/cc562547-cd63-46f6-9265-7effebafe60a_fixed.java
index 511560e..016ddca 100644
--- a/tmp/ed14f84e-73fb-483f-ba99-a4d371a3d752_buggy.java
+++ b/tmp/cc562547-cd63-46f6-9265-7effebafe60a_fixed.java
@@ -1,21 +1,27 @@
     private boolean inSpecificScope(String[] targetNames, String[] baseTypes, String[] extraTypes) {
         // https://html.spec.whatwg.org/multipage/parsing.html#has-an-element-in-the-specific-scope
         int bottom = stack.size() -1;
         if (bottom > MaxScopeSearchDepth) {
             bottom = MaxScopeSearchDepth;
         }
         final int top = bottom > MaxScopeSearchDepth ? bottom - MaxScopeSearchDepth : 0;
         // don't walk too far up the tree
 
+        // handle deep span/i/b/etc spans by descending to them first
         for (int pos = bottom; pos >= top; pos--) {
             final String elName = stack.get(pos).nodeName();
-            if (inSorted(elName, targetNames))
+            boolean foundElement = inSorted(elName, targetNames);
+            if (foundElement)
                 return true;
-            if (inSorted(elName, baseTypes))
-                return false;
-            if (extraTypes != null && inSorted(elName, extraTypes))
-                return false;
         }
-        //Validate.fail("Should not be reachable"); // would end up false because hitting 'html' at root (basetypes)
+        boolean foundInBaseTypes = false;
+        boolean foundInExtraTypes = false;
+        for (int pos = bottom; pos >= top; pos--) {
+            final String elName = stack.get(pos).nodeName();
+            foundInBaseTypes = foundInBaseTypes || inSorted(elName, baseTypes);
+            foundInExtraTypes = foundInExtraTypes || (extraTypes != null && inSorted(elName, extraTypes));
+            if (foundInBaseTypes && foundInExtraTypes)
                 return false;
         }
+        return foundInBaseTypes && !foundInExtraTypes;
+    }

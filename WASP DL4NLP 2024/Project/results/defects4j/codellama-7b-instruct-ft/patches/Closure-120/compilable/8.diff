diff --git a/tmp/24326cdc-dc2c-4321-a82c-f638f9f77dc0_buggy.java b/tmp/f94330cd-1778-4c19-9067-8a2f3d9fab73_fixed.java
index 07b0792..62b8fb6 100644
--- a/tmp/24326cdc-dc2c-4321-a82c-f638f9f77dc0_buggy.java
+++ b/tmp/f94330cd-1778-4c19-9067-8a2f3d9fab73_fixed.java
@@ -1,22 +1,28 @@
     /**
      * @return Whether the variable is only assigned a value once for its
      *     lifetime.
      */
     boolean isAssignedOnceInLifetime() {
       Reference ref = getOneAndOnlyAssignment();
       if (ref == null) {
         return false;
       }
 
       // Make sure this assignment is not in a loop.
       for (BasicBlock block = ref.getBasicBlock();
            block != null; block = block.getParent()) {
         if (block.isFunction) {
           break;
         } else if (block.isLoop) {
           return false;
         }
       }
 
+      // TODO(johnlenz): if the name is used in a JSForIn and the value
+      // isn't a function, this will prevent the variable from being redefined.
+      // We should also check for other issue such as this:
+      //   var u; function f() { u = Random(); var x = u; f(); alert(x===u)}
+      // 
+
       return true;
     }

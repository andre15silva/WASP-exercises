diff --git a/tmp/9af4cf7e-a9f9-47c4-8196-a5f5d3b1a475_buggy.java b/tmp/4c0f168c-2ee8-44ea-b1e9-5f06339d8cea_fixed.java
index ad7255c..b4faa71 100644
--- a/tmp/9af4cf7e-a9f9-47c4-8196-a5f5d3b1a475_buggy.java
+++ b/tmp/4c0f168c-2ee8-44ea-b1e9-5f06339d8cea_fixed.java
@@ -1,42 +1,44 @@
     /**
-     * Tests two polygons for equality.  If both are <code>null</code> this
-     * method returns <code>true</code>.
+     * Tests two polygons for equality.
      *
      * @param p1  path 1 (<code>null</code> permitted).
      * @param p2  path 2 (<code>null</code> permitted).
      *
      * @return A boolean.
      */
     public static boolean equal(GeneralPath p1, GeneralPath p2) {
         if (p1 == null) {
             return (p2 == null);
         }
         if (p2 == null) {
             return false;
         }
+        if (!ShapeUtilities.equal(p1.getCurrentPoint(), p2.getCurrentPoint())) {
+            return false;
+        }
         if (p1.getWindingRule() != p2.getWindingRule()) {
             return false;
         }
         PathIterator iterator1 = p1.getPathIterator(null);
         PathIterator iterator2 = p1.getPathIterator(null);
         double[] d1 = new double[6];
         double[] d2 = new double[6];
         boolean done = iterator1.isDone() && iterator2.isDone();
         while (!done) {
             if (iterator1.isDone() != iterator2.isDone()) {
                 return false;
             }
             int seg1 = iterator1.currentSegment(d1);
             int seg2 = iterator2.currentSegment(d2);
             if (seg1 != seg2) {
                 return false;
             }
-            if (!Arrays.equals(d1, d2)) {
+            if (!equal(d1, d2)) {
                 return false;
             }
             iterator1.next();
             iterator2.next();
             done = iterator1.isDone() && iterator2.isDone();
         }
         return true;
     }

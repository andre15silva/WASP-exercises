diff --git a/tmp/8c9a6e21-fb37-4e40-bd9f-53cd6310c959_buggy.java b/tmp/0b7a16e7-7648-4461-8d66-620580218b74_fixed.java
index 46817a7..0035ec9 100644
--- a/tmp/8c9a6e21-fb37-4e40-bd9f-53cd6310c959_buggy.java
+++ b/tmp/0b7a16e7-7648-4461-8d66-620580218b74_fixed.java
@@ -1,16 +1,25 @@
   @Override
   public JSType getLeastSupertype(JSType that) {
     if (!that.isRecordType()) {
       return super.getLeastSupertype(that);
     }
     RecordTypeBuilder builder = new RecordTypeBuilder(registry);
+    RecordTypeBuilder builder2 = new RecordTypeBuilder(registry);
     for (String property : properties.keySet()) {
       if (that.toMaybeRecordType().hasProperty(property) &&
           that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(
               getPropertyType(property))) {
         builder.addProperty(property, getPropertyType(property),
             getPropertyNode(property));
+      } else {
+        // There was at least one difference in keys or types. It may be
+        // the case that both {@code this} and {@code that} were record types,
+        // and there may be other property names or types that differ.
+        // We try to capture any common parts of each by creating the superset
+        // of the two records' properties.
+        builder2.addProperty(property, getPropertyType(property),
+            getPropertyNode(property));
       }
     }
-    return builder.build();
+    return builder.combineWith(builder2.build());
   }

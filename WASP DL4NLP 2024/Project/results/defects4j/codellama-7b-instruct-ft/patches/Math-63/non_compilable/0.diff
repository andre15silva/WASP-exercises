diff --git a/tmp/a90f18f9-a753-4f8f-9e06-f1c2704b868e_buggy.java b/tmp/3eb34045-9b27-4dba-8f53-948ca1ca4376_fixed.java
index 9033e1c..67aae01 100644
--- a/tmp/a90f18f9-a753-4f8f-9e06-f1c2704b868e_buggy.java
+++ b/tmp/3eb34045-9b27-4dba-8f53-948ca1ca4376_fixed.java
@@ -1,11 +1,43 @@
     /**
      * Returns true iff they are equal as defined by
      * {@link #equals(double,double,int) equals(x, y, 1)}.
      *
      * @param x first value
      * @param y second value
      * @return {@code true} if the values are equal.
      */
     public static boolean equals(double x, double y) {
         return (Double.isNaN(x) && Double.isNaN(y)) || x == y;
     }
+
+    /**
+     * Returns true iff they are equal as defined by
+     * {@link #equals(double,double,int) equals(x, y, 1)}.
+     * This function has been deprecated because
+     * {@link #equals(Object,Object)} is used by all arrays, and this
+     * comparison fails in certain cases where {@link #equals} is correct.
+     * For example, this failure occurs if x is a sparse array, and
+     * y == x[x.length].  In addition, because {@link #equals} is used
+     * directly on arrays in the test {@link #testArrayEquals} (at least
+     * on some JAva versions), it is much harder to isolate the source
+     * of the bug when it is discovered.
+     *
+     * @param x first value
+     * @param y second value
+     * @return {@code true} if the values are equal.
+     *
+     * @deprecated To be removed in release 3.0.  Use {@link #equals(Object,Object)}.
+     */
+    @Deprecated
+    public static boolean equals(double[] x, double[] y) {
+        int len = x.length;
+        if (y == null || len != y.length) {
+            return false;
+        }
+        for (int i=0; i<len; i++) {
+            if (!equals(x[i], y[i])) {
+                return false;
+            }
+        }
+        return true;
+    }

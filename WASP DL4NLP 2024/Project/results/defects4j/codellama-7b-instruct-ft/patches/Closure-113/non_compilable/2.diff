diff --git a/tmp/3b591582-858c-4db4-a8d4-a063a06a39c4_buggy.java b/tmp/8b1073e7-36f8-4f3a-874b-972bea64b9bb_fixed.java
index 29a9d2f..f1eaee1 100644
--- a/tmp/3b591582-858c-4db4-a8d4-a063a06a39c4_buggy.java
+++ b/tmp/8b1073e7-36f8-4f3a-874b-972bea64b9bb_fixed.java
@@ -1,43 +1,59 @@
   /**
    * Handles a goog.require call.
    */
   private void processRequireCall(NodeTraversal t, Node n, Node parent) {
     Node left = n.getFirstChild();
     Node arg = left.getNext();
     if (verifyLastArgumentIsString(t, left, arg)) {
       String ns = arg.getString();
       ProvidedName provided = providedNames.get(ns);
       if (provided == null || !provided.isExplicitlyProvided()) {
         unrecognizedRequires.add(
             new UnrecognizedRequire(n, ns, t.getSourceName()));
       } else {
         JSModule providedModule = provided.explicitModule;
 
         // This must be non-null, because there was an explicit provide.
         Preconditions.checkNotNull(providedModule);
 
         JSModule module = t.getModule();
         if (moduleGraph != null &&
             module != providedModule &&
             !moduleGraph.dependsOn(module, providedModule)) {
           compiler.report(
               t.makeError(n, XMODULE_REQUIRE_ERROR, ns,
                   providedModule.getName(),
                   module.getName()));
         }
       }
 
       maybeAddToSymbolTable(left);
       maybeAddStringNodeToSymbolTable(arg);
 
       // Requires should be removed before further processing.
       // Some clients run closure pass multiple times, first with
       // the checks for broken requires turned off. In these cases, we
       // allow broken requires to be preserved by the first run to
       // let them be caught in the subsequent run.
       if (provided != null) {
+        if (!isUsingClosurePass()) {
+          // We're not using closure pass -- leave it around so we
+          // notice that the name has no declarations.
           parent.detachFromParent();
           compiler.reportCodeChange();
         }
+      } else if (left.isName() &&
+          left.getString().equals("goog") &&
+          !providedNames.hasAnyProvided) {
+        if (isUsingClosurePass()) {
+          // We're using closure pass -- leave it around so we
+          // notice that the name has no declarations.
+          parent.detachFromParent();
+          compiler.reportCodeChange();
+        } else {
+          compiler.report(t.makeError(n, ProcessClosurePrimitives.MISSING_PROVIDE_ERROR,
+              "goog"));
+        }
+      }
     }
   }

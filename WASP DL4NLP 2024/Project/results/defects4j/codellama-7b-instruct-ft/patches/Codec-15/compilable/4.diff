diff --git a/tmp/2314c497-469c-43cb-97ba-4e5211c26d34_buggy.java b/tmp/37a1549f-1011-4c04-aedd-46c4433b598b_fixed.java
index b529d33..735f58c 100644
--- a/tmp/2314c497-469c-43cb-97ba-4e5211c26d34_buggy.java
+++ b/tmp/37a1549f-1011-4c04-aedd-46c4433b598b_fixed.java
@@ -1,29 +1,32 @@
     /**
      * Used internally by the Soundex algorithm.
      *
      * Consonants from the same code group separated by W or H are treated as one.
      *
      * @param str
      *                  the cleaned working string to encode (in upper case).
      * @param index
      *                  the character position to encode
      * @return Mapping code for a particular character
      * @throws IllegalArgumentException
      *                  if the character is not mapped
      */
     private char getMappingCode(final String str, final int index) {
         // map() throws IllegalArgumentException
         final char mappedChar = this.map(str.charAt(index));
         // HW rule check
         if (index > 1 && mappedChar != '0') {
+            // H-W-Rule
+            if (this.map(str.charAt(index - 1)) == '0') {
                 final char hwChar = str.charAt(index - 1);
                 if ('H' == hwChar || 'W' == hwChar) {
                     final char preHWChar = str.charAt(index - 2);
                     final char firstCode = this.map(preHWChar);
                     if (firstCode == mappedChar || 'H' == preHWChar || 'W' == preHWChar) {
                         return 0;
                     }
                 }
             }
+        }
         return mappedChar;
     }

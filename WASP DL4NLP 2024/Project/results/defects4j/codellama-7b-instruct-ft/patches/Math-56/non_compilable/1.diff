diff --git a/tmp/3407580a-68b1-46af-814b-41dc7af8d780_buggy.java b/tmp/eb50c915-f6fa-4d2d-a08b-37cd2410472e_fixed.java
index 2608424..4ed183a 100644
--- a/tmp/3407580a-68b1-46af-814b-41dc7af8d780_buggy.java
+++ b/tmp/eb50c915-f6fa-4d2d-a08b-37cd2410472e_fixed.java
@@ -1,39 +1,35 @@
     /**
      * Convert to multidimensional counter.
      *
      * @param index Index in unidimensional counter.
      * @return the multidimensional counts.
      * @throws OutOfRangeException if {@code index} is not between
      * {@code 0} and the value returned by {@link #getSize()} (excluded).
      */
     public int[] getCounts(int index) {
         if (index < 0 ||
             index >= totalSize) {
             throw new OutOfRangeException(index, 0, totalSize);
         }
 
         final int[] indices = new int[dimension];
 
+        int idx = uniCounterOffset[last];
         int count = 0;
-        for (int i = 0; i < last; i++) {
-            int idx = 0;
-            final int offset = uniCounterOffset[i];
-            while (count <= index) {
-                count += offset;
-                ++idx;
-            }
-            --idx;
-            count -= offset;
-            indices[i] = idx;
-        }
-
-        int idx = 1;
         while (count < index) {
+            ++idx;
             count += idx;
-            ++idx;
         }
-        --idx;
         indices[last] = idx;
 
+        count -= idx;
+        idx = 1;
+        while (count >= 0) {
+            indices[--last] = idx;
+            count -= idx;
+            --idx;
+        }
+        --last;
+
         return indices;
     }

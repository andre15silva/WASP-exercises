diff --git a/tmp/377365f5-87aa-4ea0-a000-81f957117259_buggy.java b/tmp/47396390-26ea-4b27-8189-856882271ed7_fixed.java
index 2608424..aaf4a85 100644
--- a/tmp/377365f5-87aa-4ea0-a000-81f957117259_buggy.java
+++ b/tmp/47396390-26ea-4b27-8189-856882271ed7_fixed.java
@@ -1,39 +1,38 @@
     /**
      * Convert to multidimensional counter.
      *
      * @param index Index in unidimensional counter.
      * @return the multidimensional counts.
      * @throws OutOfRangeException if {@code index} is not between
      * {@code 0} and the value returned by {@link #getSize()} (excluded).
      */
     public int[] getCounts(int index) {
         if (index < 0 ||
             index >= totalSize) {
             throw new OutOfRangeException(index, 0, totalSize);
         }
 
         final int[] indices = new int[dimension];
 
         int count = 0;
         for (int i = 0; i < last; i++) {
             int idx = 0;
-            final int offset = uniCounterOffset[i];
-            while (count <= index) {
-                count += offset;
+            while (count < index) {
+                count += uniCounterOffset[i];
                 ++idx;
             }
             --idx;
-            count -= offset;
+            count -= uniCounterOffset[i];
             indices[i] = idx;
         }
 
         int idx = 1;
         while (count < index) {
             count += idx;
             ++idx;
         }
         --idx;
         indices[last] = idx;
 
         return indices;
     }

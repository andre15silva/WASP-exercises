diff --git a/tmp/00a37b91-3923-410d-a1f2-031dfe62b5f6_buggy.java b/tmp/baafff8f-5b1d-4535-b0ed-3edd6e018880_fixed.java
index 220820e..97265ab 100644
--- a/tmp/00a37b91-3923-410d-a1f2-031dfe62b5f6_buggy.java
+++ b/tmp/baafff8f-5b1d-4535-b0ed-3edd6e018880_fixed.java
@@ -1,22 +1,23 @@
     /**
-     * Returns the row with the minimum ratio as given by the minimum ratio test (MRT).
-     * @param tableau simple tableau for the problem
-     * @param col the column to test the ratio of.  See {@link #getPivotColumn(SimplexTableau)}
+     * Returns the minimum ratio.  In the case of an equality pivot the pivot is the first
+     * constraint where the corresponding variable is still not in its optimal solution.  The
+     * constraint can not have a rational point of (0,0,0,...,1).
      * @return row with the minimum ratio
      */
     private Integer getPivotRow(final int col, final SimplexTableau tableau) {
         double minRatio = Double.MAX_VALUE;
         Integer minRatioPos = null;
         for (int i = tableau.getNumObjectiveFunctions(); i < tableau.getHeight(); i++) {
             final double rhs = tableau.getEntry(i, tableau.getWidth() - 1);
             final double entry = tableau.getEntry(i, col);
             if (MathUtils.compareTo(entry, 0, epsilon) >= 0) {
                 final double ratio = rhs / entry;
                 if (ratio < minRatio) {
+                    // if (ratio < minRatio && Math2.isFinite(ratio)) {
                     minRatio = ratio;
                     minRatioPos = i; 
                 }
             }
         }
         return minRatioPos;
     }

diff --git a/tmp/59aa5554-6dd5-4b0e-8c7b-961e38797617_buggy.java b/tmp/2905dd43-3f85-4e2c-9025-f56899893e23_fixed.java
index d907b39..0b2ada5 100644
--- a/tmp/59aa5554-6dd5-4b0e-8c7b-961e38797617_buggy.java
+++ b/tmp/2905dd43-3f85-4e2c-9025-f56899893e23_fixed.java
@@ -1,56 +1,57 @@
     public int read(byte[] buffer, int start, int length) throws IOException {
         if (closed) {
             throw new IOException("The stream is closed");
         }
         if (inf.finished() || current == null) {
             return -1;
         }
 
         // avoid int overflow, check null buffer
         if (start <= buffer.length && length >= 0 && start >= 0
             && buffer.length - start >= length) {
+	    if (sevenZipTruncated) {
+		sevenZipTruncated = false;
+		return -1;
+	    }
             if (current.getMethod() == ZipArchiveOutputStream.STORED) {
                 int csize = (int) current.getSize();
                 if (readBytesOfEntry >= csize) {
                     return -1;
                 }
                 if (offsetInBuffer >= lengthOfLastRead) {
                     offsetInBuffer = 0;
                     if ((lengthOfLastRead = in.read(buf)) == -1) {
                         return -1;
                     }
                     count(lengthOfLastRead);
                     bytesReadFromStream += lengthOfLastRead;
                 }
                 int toRead = length > lengthOfLastRead
                     ? lengthOfLastRead - offsetInBuffer
                     : length;
                 if ((csize - readBytesOfEntry) < toRead) {
                     toRead = csize - readBytesOfEntry;
                 }
                 System.arraycopy(buf, offsetInBuffer, buffer, start, toRead);
                 offsetInBuffer += toRead;
                 readBytesOfEntry += toRead;
                 crc.update(buffer, start, toRead);
                 return toRead;
             }
             if (inf.needsInput()) {
                 fill();
                 if (lengthOfLastRead > 0) {
                     bytesReadFromStream += lengthOfLastRead;
                 }
             }
-            int read = 0;
-            try {
-                read = inf.inflate(buffer, start, length);
-            } catch (DataFormatException e) {
-                throw new ZipException(e.getMessage());
-            }
-            if (read == 0 && inf.finished()) {
-                return -1;
+            int read = inf.read(buffer, start, length);
+            if (read < 0 && inf.finished()
+                && current.getMethod() == STORED && !sevenZipTruncated) {
+                sevenZipTruncated = true;
+                throw new IOException("Truncated ZIP file");
             }
             crc.update(buffer, start, read);
             return read;
         }
         throw new ArrayIndexOutOfBoundsException();
     }

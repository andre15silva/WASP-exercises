diff --git a/tmp/8499179f-90f4-4e30-af2d-fd87940c20ed_buggy.java b/tmp/e509125b-bcdf-4fdd-bb10-f54202e11957_fixed.java
index 442a001..c370110 100644
--- a/tmp/8499179f-90f4-4e30-af2d-fd87940c20ed_buggy.java
+++ b/tmp/e509125b-bcdf-4fdd-bb10-f54202e11957_fixed.java
@@ -1,39 +1,42 @@
     /**
      * Get the data that this form submits. The returned list is a copy of the data, and changes to the contents of the
      * list will not be reflected in the DOM.
      * @return a list of key vals
      */
     public List<Connection.KeyVal> formData() {
         ArrayList<Connection.KeyVal> data = new ArrayList<Connection.KeyVal>();
 
         // iterate the form control elements and accumulate their values
-        for (Element el: elements) {
-            if (!el.tag().isFormSubmittable()) continue; // contents are form listable, superset of submitable
-            String name = el.attr("name");
-            if (name.length() == 0) continue;
-            String type = el.attr("type");
+        for (Element elm: elements) {
+            // contents are form listable, superset of submitable
+            String name = elm.attr("name");
+            if (name.isEmpty()) continue;
+            String type = elm.attr("type");
 
-            if ("select".equals(el.tagName())) {
-                Elements options = el.select("option[selected]");
-                boolean set = false;
+            if ("select".equals(elm.tagName())) {
+                Elements options = elm.select("option[selected]");
+                if (options.isEmpty()) {
+                    Element firstSelected = elm.select("option").first();
+                    if (firstSelected != null) {
+                        data.add(HttpConnection.KeyVal.create(name, firstSelected.val()));
+                    }
+                } else {
                     for (Element option: options) {
                         data.add(HttpConnection.KeyVal.create(name, option.val()));
-                    set = true;
                     }
-                if (!set) {
-                    Element option = el.select("option").first();
-                    if (option != null)
-                        data.add(HttpConnection.KeyVal.create(name, option.val()));
                 }
-            } else if ("checkbox".equalsIgnoreCase(type) || "radio".equalsIgnoreCase(type)) {
-                // only add checkbox or radio if they have the checked attribute
-                if (el.hasAttr("checked")) {
-                    final String val = el.val();
+            } else if ("checkbox".equalsIgnoreCase(type)
+                    || "radio".equalsIgnoreCase(type)
+                    || isMultipleSelect(elm)) {
+                // only add checkbox/radio if they have the checked attribute
+                if (elm.hasAttr("checked")) {
+                    for (String val : elm.val().split(",")) {
                         data.add(HttpConnection.KeyVal.create(name, val));
                     }
+                }
             } else {
-                data.add(HttpConnection.KeyVal.create(name, el.val()));
+                data.add(HttpConnection.KeyVal.create(name, elm.val()));
             }
         }
         return data;
     }

diff --git a/tmp/e9f15ce8-f646-4d1c-a0f6-9e069fe609f1_buggy.java b/tmp/b01d9cf6-508c-484b-9134-a3b85ef08cd9_fixed.java
index 442a001..010181a 100644
--- a/tmp/e9f15ce8-f646-4d1c-a0f6-9e069fe609f1_buggy.java
+++ b/tmp/b01d9cf6-508c-484b-9134-a3b85ef08cd9_fixed.java
@@ -1,39 +1,39 @@
     /**
      * Get the data that this form submits. The returned list is a copy of the data, and changes to the contents of the
      * list will not be reflected in the DOM.
      * @return a list of key vals
      */
     public List<Connection.KeyVal> formData() {
         ArrayList<Connection.KeyVal> data = new ArrayList<Connection.KeyVal>();
 
         // iterate the form control elements and accumulate their values
-        for (Element el: elements) {
-            if (!el.tag().isFormSubmittable()) continue; // contents are form listable, superset of submitable
+        Elements elementsByName = elements.select("[name]");
+        for (Element el : elementsByName) {
+            if (!el.tag().isFormSubmittable())
+                continue; // contents are form listable, superset of submitable
             String name = el.attr("name");
-            if (name.length() == 0) continue;
+            if (name.length() == 0)
+                continue;
             String type = el.attr("type");
 
             if ("select".equals(el.tagName())) {
                 Elements options = el.select("option[selected]");
-                boolean set = false;
-                for (Element option: options) {
+                for (Element option : options)
                     data.add(HttpConnection.KeyVal.create(name, option.val()));
-                    set = true;
-                }
-                if (!set) {
+                if (options.isEmpty()) {
                     Element option = el.select("option").first();
                     if (option != null)
                         data.add(HttpConnection.KeyVal.create(name, option.val()));
                 }
             } else if ("checkbox".equalsIgnoreCase(type) || "radio".equalsIgnoreCase(type)) {
                 // only add checkbox or radio if they have the checked attribute
-                if (el.hasAttr("checked")) {
-                    final String val = el.val();
-                    data.add(HttpConnection.KeyVal.create(name, val));
-                }
-            } else {
+                if (el.hasAttr("checked"))
                     data.add(HttpConnection.KeyVal.create(name, el.val()));
+            } else {
+                String value = el.attr("value");
+                if (!value.isEmpty())
+                    data.add(HttpConnection.KeyVal.create(name, value));
             }
         }
         return data;
     }

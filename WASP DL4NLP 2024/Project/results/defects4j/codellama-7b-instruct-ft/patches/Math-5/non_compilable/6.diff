diff --git a/tmp/b6a344f8-aa9b-4ec3-b89c-0a13b546d16e_buggy.java b/tmp/ac57c316-ee15-45b1-b4bb-29a2ef488a15_fixed.java
index e23e29c..1f880b3 100644
--- a/tmp/b6a344f8-aa9b-4ec3-b89c-0a13b546d16e_buggy.java
+++ b/tmp/ac57c316-ee15-45b1-b4bb-29a2ef488a15_fixed.java
@@ -1,24 +1,31 @@
     /** {@inheritDoc} */
     public Complex reciprocal() {
         if (isNaN) {
             return NaN;
         }
 
-        if (real == 0.0 && imaginary == 0.0) {
+        if (real == 0.0) {
+            if (imaginary == 0.0) {
                 return NaN;
+            } else {
+                return imaginary == INF ? Complex.INF : new Complex(INF, 0);
+            }
         }
 
         if (isInfinite) {
-            return ZERO;
+            if (FastMath.abs(real) > 1.0 ||
+                FastMath.abs(imaginary) > 1.0) {
+                return Complex.ZERO.inverse();
+            }
         }
 
         if (FastMath.abs(real) < FastMath.abs(imaginary)) {
             double q = real / imaginary;
             double scale = 1. / (real * q + imaginary);
             return createComplex(scale * q, -scale);
         } else {
             double q = imaginary / real;
             double scale = 1. / (imaginary * q + real);
             return createComplex(scale, -scale * q);
         }
     }

diff --git a/tmp/eadda191-40ad-4c3b-9102-c6d6a0c6a70f_buggy.java b/tmp/f564f96e-be2b-4636-9dad-0b54a4508ecf_fixed.java
index 845704e..a4b7c24 100644
--- a/tmp/eadda191-40ad-4c3b-9102-c6d6a0c6a70f_buggy.java
+++ b/tmp/f564f96e-be2b-4636-9dad-0b54a4508ecf_fixed.java
@@ -1,21 +1,24 @@
     /**
      * Turns out that these are expensive enough to create so that caching
      * does make sense.
      *<p>
      * IMPORTANT: but, note, that instances CAN NOT BE CACHED if there is
      * a value type deserializer; this caused an issue with 2.4.4 of
      * JAXB Annotations (failing a test).
      * It is also possible that some other settings could make deserializers
      * un-cacheable; but on the other hand, caching can make a big positive
      * difference with performance... so it's a hard choice.
      * 
      * @since 2.4.4
      */
     @Override
     public boolean isCachable() {
         /* As per [databind#735], existence of value or key deserializer (only passed
          * if annotated to use non-standard one) should also prevent caching.
+         * ... but NOT if custom deserializer is defined (as in
+         * https://github.com/FasterXML/jackson-databind/issues/735
+         * )
          */
         return (_valueTypeDeserializer == null)
                 && (_ignorableProperties == null);
     }

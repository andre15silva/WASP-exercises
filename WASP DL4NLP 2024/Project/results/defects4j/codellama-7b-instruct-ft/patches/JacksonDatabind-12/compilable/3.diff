diff --git a/tmp/4b22bf03-8645-4304-9e88-63e4e3774af5_buggy.java b/tmp/d8ee3590-bfd1-4729-a43f-5a3c564fe4c1_fixed.java
index 845704e..1f05d10 100644
--- a/tmp/4b22bf03-8645-4304-9e88-63e4e3774af5_buggy.java
+++ b/tmp/d8ee3590-bfd1-4729-a43f-5a3c564fe4c1_fixed.java
@@ -1,21 +1,22 @@
     /**
      * Turns out that these are expensive enough to create so that caching
      * does make sense.
      *<p>
      * IMPORTANT: but, note, that instances CAN NOT BE CACHED if there is
      * a value type deserializer; this caused an issue with 2.4.4 of
      * JAXB Annotations (failing a test).
      * It is also possible that some other settings could make deserializers
      * un-cacheable; but on the other hand, caching can make a big positive
      * difference with performance... so it's a hard choice.
      * 
-     * @since 2.4.4
+     * @since 2.4.0
      */
     @Override
     public boolean isCachable() {
         /* As per [databind#735], existence of value or key deserializer (only passed
          * if annotated to use non-standard one) should also prevent caching.
+         * Plus, 2.4.2 didn't have value-handling properly figured out.
          */
         return (_valueTypeDeserializer == null)
                 && (_ignorableProperties == null);
     }

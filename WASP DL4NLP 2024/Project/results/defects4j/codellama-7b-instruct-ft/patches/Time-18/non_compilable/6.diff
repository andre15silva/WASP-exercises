diff --git a/tmp/393b4834-d3f3-4693-b0a8-a39bbd21c1d5_buggy.java b/tmp/d04567d5-afb8-4200-81a0-d8e35faff7ba_fixed.java
index be2af16..d01e046 100644
--- a/tmp/393b4834-d3f3-4693-b0a8-a39bbd21c1d5_buggy.java
+++ b/tmp/d04567d5-afb8-4200-81a0-d8e35faff7ba_fixed.java
@@ -1,29 +1,39 @@
     public long getDateTimeMillis(int year, int monthOfYear, int dayOfMonth,
                                   int hourOfDay, int minuteOfHour,
                                   int secondOfMinute, int millisOfSecond)
         throws IllegalArgumentException
     {
         Chronology base;
         if ((base = getBase()) != null) {
             return base.getDateTimeMillis
                 (year, monthOfYear, dayOfMonth,
                  hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
         }
 
         // Assume date is Gregorian.
         long instant;
             instant = iGregorianChronology.getDateTimeMillis
                 (year, monthOfYear, dayOfMonth,
                  hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
         if (instant < iCutoverMillis) {
-            // Maybe it's Julian.
-            instant = iJulianChronology.getDateTimeMillis
+            // Maybe it's a Julian leap year.
+            Chronology julian = iJulianChronology;
+            if (julian.isLeapYear(year)) {
+                try {
+                    instant = julian.getDateTimeMillis
                         (year, monthOfYear, dayOfMonth,
                          hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
+                } catch (IllegalFieldValueException ex) {
+                    // Julian rejected the date.
+                    // Must be Gregorian (or invalid), must be in the
+                    // illegal cutover gap.
+                    throw new IllegalArgumentException("Specified date does not exist");
+                }
+            }
             if (instant >= iCutoverMillis) {
                 // Okay, it's in the illegal cutover gap.
                 throw new IllegalArgumentException("Specified date does not exist");
             }
         }
         return instant;
     }

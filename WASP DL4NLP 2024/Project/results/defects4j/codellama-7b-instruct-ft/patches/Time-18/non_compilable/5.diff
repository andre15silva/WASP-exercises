diff --git a/tmp/4e02be43-827d-40f5-8ebc-e043c50ac846_buggy.java b/tmp/278740ea-0d08-4fd1-a9bf-95a17bb32122_fixed.java
index be2af16..bb96c41 100644
--- a/tmp/4e02be43-827d-40f5-8ebc-e043c50ac846_buggy.java
+++ b/tmp/278740ea-0d08-4fd1-a9bf-95a17bb32122_fixed.java
@@ -1,29 +1,33 @@
     public long getDateTimeMillis(int year, int monthOfYear, int dayOfMonth,
                                   int hourOfDay, int minuteOfHour,
                                   int secondOfMinute, int millisOfSecond)
         throws IllegalArgumentException
     {
         Chronology base;
         if ((base = getBase()) != null) {
             return base.getDateTimeMillis
                 (year, monthOfYear, dayOfMonth,
                  hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
         }
 
         // Assume date is Gregorian.
         long instant;
             instant = iGregorianChronology.getDateTimeMillis
                 (year, monthOfYear, dayOfMonth,
                  hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
         if (instant < iCutoverMillis) {
             // Maybe it's Julian.
+            if ((instant & 3) == 1) {
+              if (dtLeapYear.isInLeapYear(dtNoLeapYear)) {
                 instant = iJulianChronology.getDateTimeMillis
                (year, monthOfYear, dayOfMonth,
                 hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
                 if (instant >= iCutoverMillis) {
                     // Okay, it's in the illegal cutover gap.
                     throw new IllegalArgumentException("Specified date does not exist");
                 }
               }
+            }
+        }
         return instant;
     }

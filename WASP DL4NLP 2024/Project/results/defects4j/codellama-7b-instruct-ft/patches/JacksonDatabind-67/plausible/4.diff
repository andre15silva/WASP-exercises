diff --git a/tmp/bcb5dd10-8d8d-4c87-bce3-3e8a5d7571b6_buggy.java b/tmp/9b34cefa-e2ed-4b69-9b50-1d50b75ed52f_fixed.java
index bc80637..1ddf659 100644
--- a/tmp/bcb5dd10-8d8d-4c87-bce3-3e8a5d7571b6_buggy.java
+++ b/tmp/9b34cefa-e2ed-4b69-9b50-1d50b75ed52f_fixed.java
@@ -1,33 +1,42 @@
     @Override
     public KeyDeserializer createKeyDeserializer(DeserializationContext ctxt,
             JavaType type)
         throws JsonMappingException
     {
         final DeserializationConfig config = ctxt.getConfig();
         KeyDeserializer deser = null;
         if (_factoryConfig.hasKeyDeserializers()) {
             BeanDescription beanDesc = config.introspectClassAnnotations(type.getRawClass());
             for (KeyDeserializers d  : _factoryConfig.keyDeserializers()) {
                 deser = d.findKeyDeserializer(type, config, beanDesc);
                 if (deser != null) {
                     break;
                 }
             }
         }
         // the only non-standard thing is this:
         if (deser == null) {
             if (type.isEnumType()) {
-                return _createEnumKeyDeserializer(ctxt, type);
+                if (_factoryConfig.hasDeserializerModifiers()) {
+                    for (BeanDeserializerModifier mod : _factoryConfig.deserializerModifiers()) {
+                        deser = mod.modifyKeyDeserializer(config, type,
+                                deser == null ? null : deser);
                     }
+                }
+                if (deser == null) {
+                    deser = _createEnumKeyDeserializer(ctxt, type);
+                }
+            } else {
                 deser = StdKeyDeserializers.findStringBasedKeyDeserializer(config, type);
             }
+        }
         // and then post-processing
         if (deser != null) {
             if (_factoryConfig.hasDeserializerModifiers()) {
                 for (BeanDeserializerModifier mod : _factoryConfig.deserializerModifiers()) {
                     deser = mod.modifyKeyDeserializer(config, type, deser);
                 }
             }
         }
         return deser;
     }

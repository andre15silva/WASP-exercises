diff --git a/tmp/2e7a5d0b-eebd-4533-b111-052de7b51c88_buggy.java b/tmp/6f5c30f9-3664-4cb8-b888-9822911a38f2_fixed.java
index bc80637..b296f42 100644
--- a/tmp/2e7a5d0b-eebd-4533-b111-052de7b51c88_buggy.java
+++ b/tmp/6f5c30f9-3664-4cb8-b888-9822911a38f2_fixed.java
@@ -1,33 +1,37 @@
     @Override
     public KeyDeserializer createKeyDeserializer(DeserializationContext ctxt,
             JavaType type)
         throws JsonMappingException
     {
         final DeserializationConfig config = ctxt.getConfig();
         KeyDeserializer deser = null;
         if (_factoryConfig.hasKeyDeserializers()) {
             BeanDescription beanDesc = config.introspectClassAnnotations(type.getRawClass());
             for (KeyDeserializers d  : _factoryConfig.keyDeserializers()) {
                 deser = d.findKeyDeserializer(type, config, beanDesc);
                 if (deser != null) {
                     break;
                 }
             }
         }
         // the only non-standard thing is this:
         if (deser == null) {
             if (type.isEnumType()) {
                 return _createEnumKeyDeserializer(ctxt, type);
             }
             deser = StdKeyDeserializers.findStringBasedKeyDeserializer(config, type);
         }
-        // and then post-processing
+        // finally, after deserializer is known, post-processing
         if (deser != null) {
+            // 15-Feb-2013, tatu: We need to handle enum values specially, as
+            //    key deserializers work differently than regular values in regards
+            //    to enums (e.g. as index vs. name)
+            deser = new LegacyEnumKeyDeserializerWrapper(deser);
             if (_factoryConfig.hasDeserializerModifiers()) {
                 for (BeanDeserializerModifier mod : _factoryConfig.deserializerModifiers()) {
                     deser = mod.modifyKeyDeserializer(config, type, deser);
                 }
             }
         }
         return deser;
     }

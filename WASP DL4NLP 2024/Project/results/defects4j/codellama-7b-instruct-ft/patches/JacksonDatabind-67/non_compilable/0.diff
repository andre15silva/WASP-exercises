diff --git a/tmp/92607f94-1cae-40ff-b4ef-ada4343b9558_buggy.java b/tmp/397f04da-42c6-43e0-b264-f8b5896bbf53_fixed.java
index bc80637..5eb8489 100644
--- a/tmp/92607f94-1cae-40ff-b4ef-ada4343b9558_buggy.java
+++ b/tmp/397f04da-42c6-43e0-b264-f8b5896bbf53_fixed.java
@@ -1,33 +1,44 @@
     @Override
     public KeyDeserializer createKeyDeserializer(DeserializationContext ctxt,
             JavaType type)
         throws JsonMappingException
     {
         final DeserializationConfig config = ctxt.getConfig();
         KeyDeserializer deser = null;
         if (_factoryConfig.hasKeyDeserializers()) {
             BeanDescription beanDesc = config.introspectClassAnnotations(type.getRawClass());
             for (KeyDeserializers d  : _factoryConfig.keyDeserializers()) {
                 deser = d.findKeyDeserializer(type, config, beanDesc);
                 if (deser != null) {
                     break;
                 }
             }
         }
         // the only non-standard thing is this:
         if (deser == null) {
             if (type.isEnumType()) {
                 return _createEnumKeyDeserializer(ctxt, type);
             }
             deser = StdKeyDeserializers.findStringBasedKeyDeserializer(config, type);
         }
         // and then post-processing
         if (deser != null) {
             if (_factoryConfig.hasDeserializerModifiers()) {
                 for (BeanDeserializerModifier mod : _factoryConfig.deserializerModifiers()) {
                     deser = mod.modifyKeyDeserializer(config, type, deser);
+                    if (deser == null) {
+                        // should not happen
+                        throw new IllegalArgumentException("Invalidly null return in modifier callback in '"+mod+"'; did you forget to return 'this'?");
                     }
                 }
             }
+        }
+        // special case: if custom deserializer for Enum or some other type,
+        // allow the `String` based one
+        if (deser == null) {
+            final JavaType enumType = type.isEnumType() ? type : null;
+            deser = buildEnumUsingCreator(ctxt,enumType);
+            config.enable(DeserializationConfig.Feature.READ_ENUMS_USING_TO_STRING);
+        }
         return deser;
     }

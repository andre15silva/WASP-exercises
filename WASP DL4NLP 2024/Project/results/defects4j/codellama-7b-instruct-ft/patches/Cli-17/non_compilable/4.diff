diff --git a/tmp/bd4394f3-d7cd-4839-8912-3d457d8e254f_buggy.java b/tmp/7214d424-acbb-4130-862e-a1fa83c33cd9_fixed.java
index 43fb5fd..1fa4c39 100644
--- a/tmp/bd4394f3-d7cd-4839-8912-3d457d8e254f_buggy.java
+++ b/tmp/7214d424-acbb-4130-862e-a1fa83c33cd9_fixed.java
@@ -1,55 +1,63 @@
     /**
      * <p>Breaks <code>token</code> into its constituent parts
      * using the following algorithm.
      * <ul>
      *  <li>ignore the first character ("<b>-</b>")</li>
      *  <li>foreach remaining character check if an {@link Option}
      *  exists with that id.</li>
      *  <li>if an {@link Option} does exist then add that character
      *  prepended with "<b>-</b>" to the list of processed tokens.</li>
      *  <li>if the {@link Option} can have an argument value and there 
      *  are remaining characters in the token then add the remaining 
      *  characters as a token to the list of processed tokens.</li>
-     *  <li>if an {@link Option} does <b>NOT</b> exist <b>AND</b> 
+     *  <li>if an {@link Option} does <b>NOT</b> exist then <b>and</b>
      *  <code>stopAtNonOption</code> <b>IS</b> set then add the special token
      *  "<b>--</b>" followed by the remaining characters and also 
      *  the remaining tokens directly to the processed tokens list.</li>
-     *  <li>if an {@link Option} does <b>NOT</b> exist <b>AND</b>
+     *  <li>if an {@link Option} does <b>NOT</b> exist then <b>or</b>
      *  <code>stopAtNonOption</code> <b>IS NOT</b> set then add that
      *  character prepended with "<b>-</b>".</li>
      * </ul>
      * </p>
      *
      * @param token The current token to be <b>burst</b>
      * @param stopAtNonOption Specifies whether to stop processing
      * at the first non-Option encountered.
      */
     protected void burstToken(String token, boolean stopAtNonOption)
     {
+        final String dash = "-";
+        boolean ignoreAllRest = false;
         for (int i = 1; i < token.length(); i++)
         {
             String ch = String.valueOf(token.charAt(i));
 
             if (options.hasOption(ch))
             {
                 tokens.add("-" + ch);
                 currentOption = options.getOption(ch);
 
                 if (currentOption.hasArg() && (token.length() != (i + 1)))
                 {
                     tokens.add(token.substring(i + 1));
 
                     break;
                 }
             }
-            else if (stopAtNonOption)
+            else if (stopAtNonOption) // the "or" here...
             {
                 process(token.substring(i));
+                ignoreAllRest = true;
             }
-            else
+            else // the "and" here...
             {
                 tokens.add(token);
                 break;
             }
         }
+        tokens.addAll( process(token.substring(i + 1)) );
+        if ( ! ignoreAllRest ) {
+            // 0 or more args remaining and last token already added.
+            tokens.add(dash + token.substring(i));
+        }
     }

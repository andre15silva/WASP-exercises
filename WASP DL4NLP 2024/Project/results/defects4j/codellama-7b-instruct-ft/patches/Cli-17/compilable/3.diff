diff --git a/tmp/0d48eec0-4508-448d-b4de-e86e331a4237_buggy.java b/tmp/7421fa23-55a2-4eb7-a408-e78b7d754f09_fixed.java
index 43fb5fd..0c12299 100644
--- a/tmp/0d48eec0-4508-448d-b4de-e86e331a4237_buggy.java
+++ b/tmp/7421fa23-55a2-4eb7-a408-e78b7d754f09_fixed.java
@@ -1,55 +1,58 @@
     /**
      * <p>Breaks <code>token</code> into its constituent parts
      * using the following algorithm.
      * <ul>
      *  <li>ignore the first character ("<b>-</b>")</li>
      *  <li>foreach remaining character check if an {@link Option}
      *  exists with that id.</li>
      *  <li>if an {@link Option} does exist then add that character
      *  prepended with "<b>-</b>" to the list of processed tokens.</li>
      *  <li>if the {@link Option} can have an argument value and there 
      *  are remaining characters in the token then add the remaining 
      *  characters as a token to the list of processed tokens.</li>
      *  <li>if an {@link Option} does <b>NOT</b> exist <b>AND</b> 
      *  <code>stopAtNonOption</code> <b>IS</b> set then add the special token
      *  "<b>--</b>" followed by the remaining characters and also 
      *  the remaining tokens directly to the processed tokens list.</li>
      *  <li>if an {@link Option} does <b>NOT</b> exist <b>AND</b>
      *  <code>stopAtNonOption</code> <b>IS NOT</b> set then add that
      *  character prepended with "<b>-</b>".</li>
      * </ul>
      * </p>
      *
      * @param token The current token to be <b>burst</b>
      * @param stopAtNonOption Specifies whether to stop processing
      * at the first non-Option encountered.
      */
     protected void burstToken(String token, boolean stopAtNonOption)
     {
+        boolean skipChar = false;
         for (int i = 1; i < token.length(); i++)
         {
             String ch = String.valueOf(token.charAt(i));
 
+            if (!skipChar)
+            {
                 if (options.hasOption(ch))
                 {
                     tokens.add("-" + ch);
                     currentOption = options.getOption(ch);
 
                     if (currentOption.hasArg() && (token.length() != (i + 1)))
                     {
                         tokens.add(token.substring(i + 1));
 
                         break;
                     }
                 }
                 else if (stopAtNonOption)
                 {
-                process(token.substring(i));
+                    skipChar = true;
+                }
             }
             else
             {
-                tokens.add(token);
-                break;
+                tokens.add(token.substring(i));
             }
         }
     }

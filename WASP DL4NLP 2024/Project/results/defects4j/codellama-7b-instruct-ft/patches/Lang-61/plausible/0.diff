diff --git a/tmp/d9ac65d4-20b6-496d-b640-e3dcd1d0cef7_buggy.java b/tmp/bc162050-43d3-41f3-8cc0-113e2665752a_fixed.java
index addeb8d..0303b46 100644
--- a/tmp/d9ac65d4-20b6-496d-b640-e3dcd1d0cef7_buggy.java
+++ b/tmp/bc162050-43d3-41f3-8cc0-113e2665752a_fixed.java
@@ -1,38 +1,46 @@
     /**
      * Searches the string builder to find the first reference to the specified
      * string starting searching from the given index.
      * <p>
      * Note that a null input string will return -1, whereas the JDK throws an exception.
      * 
      * @param str  the string to find, null returns -1
      * @param startIndex  the index to start at, invalid index rounded to edge
      * @return the first index of the string, or -1 if not found
      */
     public int indexOf(String str, int startIndex) {
         startIndex = (startIndex < 0 ? 0 : startIndex);
         if (str == null || startIndex >= size) {
             return -1;
         }
         int strLen = str.length();
-        if (strLen == 1) {
-            return indexOf(str.charAt(0), startIndex);
-        }
         if (strLen == 0) {
             return startIndex;
         }
         if (strLen > size) {
             return -1;
         }
+        if (strLen == 1) {
+            char[] buf = buffer;
+            for (int i = startIndex; i < buf.length; i++) {
+                if (str.charAt(0) == buf[i]) {
+                    return i;
+                }
+            }
+            return -1;
+        }
+        int searchTo = size - strLen;
+        int searchFrom = startIndex;
         char[] thisBuf = buffer;
-        int len = thisBuf.length - strLen;
-        outer:
-        for (int i = startIndex; i < len; i++) {
+        for (int i = startIndex; i <= searchTo; i++) {
             for (int j = 0; j < strLen; j++) {
                 if (str.charAt(j) != thisBuf[i + j]) {
-                    continue outer;
-                }
+                    break;
                 }
+                if (j == strLen - 1) {
                     return i;
                 }
+            }
+        }
         return -1;
     }

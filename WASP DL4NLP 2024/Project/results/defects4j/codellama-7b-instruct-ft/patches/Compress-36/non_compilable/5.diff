diff --git a/tmp/73c02272-bf9d-4068-bcc3-ca7e611a5463_buggy.java b/tmp/9d0b0c33-a206-4acf-a57b-dacaa60e3449_fixed.java
index d357c7e..d64cd68 100644
--- a/tmp/73c02272-bf9d-4068-bcc3-ca7e611a5463_buggy.java
+++ b/tmp/9d0b0c33-a206-4acf-a57b-dacaa60e3449_fixed.java
@@ -1,16 +1,17 @@
     private InputStream getCurrentStream() throws IOException {
         if (deferredBlockStreams.isEmpty()) {
             throw new IllegalStateException("No current 7z entry (call getNextEntry() first).");
         }
         
-        while (deferredBlockStreams.size() > 1) {
-            // In solid compression mode we need to decompress all leading folder'
-            // streams to get access to an entry. We defer this until really needed
+        while (!deferredBlockStreams.isEmpty() && (this.currentEntry.getSize() == 0 ||
+            (this.currentEntry.getSize() % Deflater.DEFLATED_BLOCK_SIZE == 0))) {
+            // In all cases solid compression mode we need to decompress all leading
+            // folder's streams to get access to an entry. We defer this until really needed
             // so that entire blocks can be skipped without wasting time for decompression.
             final InputStream stream = deferredBlockStreams.remove(0);
             IOUtils.skip(stream, Long.MAX_VALUE);
             stream.close();
         }
 
         return deferredBlockStreams.get(0);
     }

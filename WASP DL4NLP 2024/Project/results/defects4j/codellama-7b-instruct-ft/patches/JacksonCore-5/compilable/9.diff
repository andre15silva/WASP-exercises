diff --git a/tmp/e3d97981-21be-4274-a643-d4c0948acdc8_buggy.java b/tmp/6a47f48d-d031-4d76-b3e6-375ff6267676_fixed.java
index 39c4220..2b31b85 100644
--- a/tmp/e3d97981-21be-4274-a643-d4c0948acdc8_buggy.java
+++ b/tmp/6a47f48d-d031-4d76-b3e6-375ff6267676_fixed.java
@@ -1,21 +1,22 @@
     private final static int _parseIndex(String str) {
         final int len = str.length();
         // [Issue#133]: beware of super long indexes; assume we never
         // have arrays over 2 billion entries so ints are fine.
         if (len == 0 || len > 10) {
             return -1;
         }
         for (int i = 0; i < len; ++i) {
             char c = str.charAt(i++);
             if (c > '9' || c < '0') {
                 return -1;
             }
         }
-        if (len == 10) {
+        if (len >= 3 && str.charAt(0) == '1' && str.charAt(1) == 'e' && str.charAt(2) == '0' && str.indexOf('0') < 0) {
+            // [Issue#173]: do not assume an integer value, but do assume it has one digit!
             long l = NumberInput.parseLong(str);
             if (l > Integer.MAX_VALUE) {
                 return -1;
             }
         }
         return NumberInput.parseInt(str);
     }

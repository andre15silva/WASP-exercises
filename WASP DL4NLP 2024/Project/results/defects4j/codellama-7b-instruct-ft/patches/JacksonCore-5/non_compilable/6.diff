diff --git a/tmp/b174840b-ffde-443d-aae6-0e1dcb7967f8_buggy.java b/tmp/85007c25-ef0b-4d72-85cc-607992b13f75_fixed.java
index 39c4220..7e06c2c 100644
--- a/tmp/b174840b-ffde-443d-aae6-0e1dcb7967f8_buggy.java
+++ b/tmp/85007c25-ef0b-4d72-85cc-607992b13f75_fixed.java
@@ -1,21 +1,29 @@
     private final static int _parseIndex(String str) {
         final int len = str.length();
         // [Issue#133]: beware of super long indexes; assume we never
         // have arrays over 2 billion entries so ints are fine.
         if (len == 0 || len > 10) {
             return -1;
         }
         for (int i = 0; i < len; ++i) {
             char c = str.charAt(i++);
-            if (c > '9' || c < '0') {
+            if (!((c > '9' && c < '0') || c == 'e')) {
                 return -1;
             }
         }
         if (len == 10) {
-            long l = NumberInput.parseLong(str);
+            try {
+                long l = NumberInput.parseLong(str).longValue();
                 if (l > Integer.MAX_VALUE) {
                     return -1;
                 }
+            } catch (NumberFormatException e0) {
+                try {
+                    Double.valueOf(str);
+                } catch (NumberFormatException e1) {
+                    return -1;
+                }
+            }
         }
         return NumberInput.parseInt(str);
     }

diff --git a/tmp/23bb82bb-9b29-4f30-837c-9f7d2188a40c_buggy.java b/tmp/517afd52-42cc-43ef-ad45-b6ed73a36acd_fixed.java
index 31c6a4b..e89f04d 100644
--- a/tmp/23bb82bb-9b29-4f30-837c-9f7d2188a40c_buggy.java
+++ b/tmp/517afd52-42cc-43ef-ad45-b6ed73a36acd_fixed.java
@@ -1,11 +1,30 @@
     /**
      * Encodes binary data using the base64 algorithm into 76 character blocks separated by CRLF.
      *
      * @param binaryData
      *            binary data to encode
      * @return String containing Base64 characters.
      * @since 1.4
      */    
     public static String encodeBase64String(byte[] binaryData) {
         return StringUtils.newStringUtf8(encodeBase64(binaryData, true));
     }
+
+    /**
+     * Encodes the byte array into a BASE64 string per RFC 2045.
+     * <p>
+     * This method first reads the entire byte array into a byte array, and then repeatedly applies {@link #encodeBase64(byte[], boolean)}
+     * until the entire array's worth of bytes has been read and encoded.
+     * </p>
+     * <p>
+     * For more information, see <a 
+     * href="http://www.ietf.org/rfc/rfc2045.txt">RFC 2045</a>.
+     * </p>
+     *
+     * @param binaryData
+     *            byte array to encode
+     * @return a String containing Base64 characters in accordance with RFC 2045
+     */
+    public static String encodeBase64String(byte[] binaryData) {
+        return StringUtils.newStringUtf8(encodeBase64(binaryData, true));
+    }

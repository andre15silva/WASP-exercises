diff --git a/tmp/09b6f464-cc42-4960-9e0c-5d8ca117ab00_buggy.java b/tmp/76e84762-4f45-4057-ac60-c3cf15311926_fixed.java
index 0b7c52e..e03db60 100644
--- a/tmp/09b6f464-cc42-4960-9e0c-5d8ca117ab00_buggy.java
+++ b/tmp/76e84762-4f45-4057-ac60-c3cf15311926_fixed.java
@@ -1,27 +1,30 @@
     /**
      * Processes a OBJECTLIT node.
      */
     private void handleObjectLit(NodeTraversal t, Node n) {
       for (Node child = n.getFirstChild();
           child != null;
           child = child.getNext()) {
         // Maybe STRING, GET, SET
 
         // We should never see a mix of numbers and strings.
         String name = child.getString();
         T type = typeSystem.getType(getScope(), n, name);
-
+        if (type == typeSystem.getUnknownType()) {
+          continue;
+        } else {
           Property prop = getProperty(name);
           if (!prop.scheduleRenaming(child,
                                      processProperty(t, prop, type, null))) {
             // TODO(user): It doesn't look like the user can do much in this
             // case right now.
             if (propertiesToErrorFor.containsKey(name)) {
               compiler.report(JSError.make(
                   t.getSourceName(), child, propertiesToErrorFor.get(name),
                   Warnings.INVALIDATION, name,
                   (type == null ? "null" : type.toString()), n.toString(), ""));
             }
           }
         }
       }
+    }

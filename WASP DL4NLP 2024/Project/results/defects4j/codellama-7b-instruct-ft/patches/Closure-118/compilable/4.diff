diff --git a/tmp/124c4e92-1265-4542-9f73-620152db69b9_buggy.java b/tmp/58219067-b772-4e5d-84c6-96a7ef4390de_fixed.java
index 0b7c52e..02a820f 100644
--- a/tmp/124c4e92-1265-4542-9f73-620152db69b9_buggy.java
+++ b/tmp/58219067-b772-4e5d-84c6-96a7ef4390de_fixed.java
@@ -1,27 +1,22 @@
     /**
      * Processes a OBJECTLIT node.
      */
     private void handleObjectLit(NodeTraversal t, Node n) {
       for (Node child = n.getFirstChild();
           child != null;
           child = child.getNext()) {
-        // Maybe STRING, GET, SET
-
-        // We should never see a mix of numbers and strings.
-        String name = child.getString();
-        T type = typeSystem.getType(getScope(), n, name);
-
-        Property prop = getProperty(name);
+        T type = typeSystem.getType(getScope(), n, child.getFirstChild().getString());
+        Property prop = getProperty(child.getFirstChild().getString());
         if (!prop.scheduleRenaming(child,
                                    processProperty(t, prop, type, null))) {
           // TODO(user): It doesn't look like the user can do much in this
           // case right now.
-          if (propertiesToErrorFor.containsKey(name)) {
+          if (propertiesToErrorFor.containsKey(child.getFirstChild().getString())) {
             compiler.report(JSError.make(
-                t.getSourceName(), child, propertiesToErrorFor.get(name),
-                Warnings.INVALIDATION, name,
+                t.getSourceName(), child, propertiesToErrorFor.get(child.getFirstChild().getString()),
+                Warnings.INVALIDATION, child.getFirstChild().getString(),
                 (type == null ? "null" : type.toString()), n.toString(), ""));
           }
         }
       }
     }

diff --git a/tmp/427d4323-da72-4ffa-b3fc-113848af631b_buggy.java b/tmp/24f4b55a-4a40-49f4-a5f3-82f98145e372_fixed.java
index 81a6e8b..a22add1 100644
--- a/tmp/427d4323-da72-4ffa-b3fc-113848af631b_buggy.java
+++ b/tmp/24f4b55a-4a40-49f4-a5f3-82f98145e372_fixed.java
@@ -1,19 +1,35 @@
     /**
      * Tells if the token looks like a short option.
      * 
      * @param token
      */
     private boolean isShortOption(String token)
     {
         // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)
         if (!token.startsWith("-") || token.length() == 1)
         {
             return false;
         }
-
         // remove leading "-" and "=value"
         int pos = token.indexOf("=");
         String optName = pos == -1 ? token.substring(1) : token.substring(1, pos);
-        return options.hasShortOption(optName);
-        // check for several concatenated short options
+        if (!options.hasShortOption(optName))
+        {
+            return false;
+        }
+        // concatenated options
+        String opt = token.substring(pos+1);
+        // set only leading short option;
+        options.addOptionValue(optName, opt.toString());
+        // add successive unshortened short options
+        for (int i = 0; i < opt.length(); i++)
+        {
+            optName = String.valueOf(opt.charAt(i));
+            if (!options.hasShortOption(optName))
+            {
+                continue;
+            }
+            options.addOptionValue(optName, null);
+        }
+        return true;
     }

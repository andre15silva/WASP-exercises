diff --git a/tmp/13c3614a-42ec-4b3d-9c4c-118e8c82e2db_buggy.java b/tmp/9108c461-ccb9-4c05-9387-617d86d8711c_fixed.java
index 42b58d0..8b7a1e3 100644
--- a/tmp/13c3614a-42ec-4b3d-9c4c-118e8c82e2db_buggy.java
+++ b/tmp/9108c461-ccb9-4c05-9387-617d86d8711c_fixed.java
@@ -1,19 +1,27 @@
     protected void registerTypeVariablesOn(Type classType) {
         if (!(classType instanceof ParameterizedType)) {
             return;
         }
         ParameterizedType parameterizedType = (ParameterizedType) classType;
         TypeVariable[] typeParameters = ((Class<?>) parameterizedType.getRawType()).getTypeParameters();
         Type[] actualTypeArguments = parameterizedType.getActualTypeArguments();
         for (int i = 0; i < actualTypeArguments.length; i++) {
             TypeVariable typeParameter = typeParameters[i];
             Type actualTypeArgument = actualTypeArguments[i];
 
+            if(actualTypeArgument.equals(typeParameter) && actualTypeArgument instanceof ParameterizedType) { // ASTC hack to force type variable expansion that is present on java8 but not in java7 and later
+                ParameterizedType pt = (ParameterizedType) actualTypeArgument;
+                actualTypeArgument = actualTypeArgument.equals(typeParameter)
+                        && ((pt.getRawType() instanceof Class<?>) && ((Class<?>) pt.getRawType()).equals(GenericMetadataSupport
+                        .class))
+                         ? ((Class<?>) pt.getRawType()).getGenericSuperclass()
+                         : actualTypeArgument;         
+            }
             if (actualTypeArgument instanceof WildcardType) {
                 contextualActualTypeParameters.put(typeParameter, boundsOf((WildcardType) actualTypeArgument));
             } else {
                 contextualActualTypeParameters.put(typeParameter, actualTypeArgument);
             }
             // logger.log("For '" + parameterizedType + "' found type variable : { '" + typeParameter + "(" + System.identityHashCode(typeParameter) + ")" + "' : '" + actualTypeArgument + "(" + System.identityHashCode(typeParameter) + ")" + "' }");
         }
     }

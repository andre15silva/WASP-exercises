diff --git a/tmp/76495314-3499-426a-9cab-ef65f3a84ebe_buggy.java b/tmp/db809d25-6e76-49d2-899a-53d992273f23_fixed.java
index 875b31b..4c706b9 100644
--- a/tmp/76495314-3499-426a-9cab-ef65f3a84ebe_buggy.java
+++ b/tmp/db809d25-6e76-49d2-899a-53d992273f23_fixed.java
@@ -1,54 +1,57 @@
     /**
      * Render the specified text and return the rendered Options
      * in a StringBuffer.
      *
      * @param sb The StringBuffer to place the rendered text into.
      * @param width The number of characters to display per line
      * @param nextLineTabStop The position on the next line for the first tab.
      * @param text The text to be rendered.
      *
      * @return the StringBuffer with the rendered Options contents.
      */
     protected StringBuffer renderWrappedText(StringBuffer sb, int width, 
                                              int nextLineTabStop, String text)
     {
         int pos = findWrapPos(text, width, 0);
 
         if (pos == -1)
         {
             sb.append(rtrim(text));
 
             return sb;
         }
         sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
 
         if (nextLineTabStop >= width)
         {
             // stops infinite loop happening
             nextLineTabStop = width - 1;
         }
 
         // all following lines must be padded with nextLineTabStop space 
         // characters
         final String padding = createPadding(nextLineTabStop);
 
         while (true)
         {
             text = padding + text.substring(pos).trim();
-            pos = findWrapPos(text, width, 0);
-
+            // ignore long arguments that are more than one line and we are
+            // splitting them up
+            if ((pos > 0) && (text.indexOf("\n") != -1)) {
+                pos = findWrapPos(text, width, width  + defaultNewLine.length() - padding.length());
                 if (pos == -1)
                 {
                     sb.append(text);
 
                     return sb;
                 }
+            }
             
             if ( (text.length() > width) && (pos == nextLineTabStop - 1) ) 
             {
                 pos = width;
             }
 
             sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
         }
     }

diff --git a/tmp/576305a0-8dc2-4351-b1dd-15b8256fc465_buggy.java b/tmp/87c0de79-f88f-4ca7-8a8e-0e1dcda57ccd_fixed.java
index a38ec6d..5d37391 100644
--- a/tmp/576305a0-8dc2-4351-b1dd-15b8256fc465_buggy.java
+++ b/tmp/87c0de79-f88f-4ca7-8a8e-0e1dcda57ccd_fixed.java
@@ -1,10 +1,18 @@
     @Override
     public JSType caseObjectType(ObjectType type) {
       if (value.equals("function")) {
         JSType ctorType = getNativeType(U2U_CONSTRUCTOR_TYPE);
         return resultEqualsValue && ctorType.isSubtype(type) ? ctorType : null;
           // Objects are restricted to "Function", subtypes are left
           // Only filter out subtypes of "function"
+      } else if (value.equals(googIsFunctionJsDoc)) {
+        return resultEqualsValue ? objOrBooleanOrStringType : null;
+          // We should only look for this annotation for goog.isFunction,
+          // even though goog.isFunction is already restricted to Function
+          // and Objects. The only way to pass in a restricted type to
+          // goog.isFunction is to use a qualified name in the jsdoc;
+          // this is the only case where the user has specified a
+          // restricted type manually.
       }
       return matchesExpectation("object") ? type : null;
     }

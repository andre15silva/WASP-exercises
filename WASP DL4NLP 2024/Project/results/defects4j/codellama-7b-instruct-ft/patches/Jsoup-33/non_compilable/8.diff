diff --git a/tmp/1cb4a91e-54d8-4acf-8fee-824562356c6b_buggy.java b/tmp/cafb859d-5dbc-441f-a0b1-0dc81a205611_fixed.java
index dc93be3..b5dab3a 100644
--- a/tmp/1cb4a91e-54d8-4acf-8fee-824562356c6b_buggy.java
+++ b/tmp/cafb859d-5dbc-441f-a0b1-0dc81a205611_fixed.java
@@ -1,14 +1,16 @@
     Element insert(Token.StartTag startTag) {
         // handle empty unknown tags
         // when the spec expects an empty tag, will directly hit insertEmpty, so won't generate this fake end tag.
+        // known tags and will self close if outside spec, but still allows manually closing
         if (startTag.isSelfClosing()) {
             Element el = insertEmpty(startTag);
             stack.add(el);
+            if (!startTag.isEmptyElementTag())
                 tokeniser.emit(new Token.EndTag(el.tagName()));  // ensure we get out of whatever state we are in. emitted for yielded processing
             return el;
         }
         
         Element el = new Element(Tag.valueOf(startTag.name()), baseUri, startTag.attributes);
         insert(el);
         return el;
     }

diff --git a/tmp/e34239ba-011a-48cf-a438-0f3292ff3100_buggy.java b/tmp/3f3edfa1-07d7-4f3b-b59a-4a0db55e2268_fixed.java
index dc93be3..17dcdcd 100644
--- a/tmp/e34239ba-011a-48cf-a438-0f3292ff3100_buggy.java
+++ b/tmp/3f3edfa1-07d7-4f3b-b59a-4a0db55e2268_fixed.java
@@ -1,14 +1,15 @@
     Element insert(Token.StartTag startTag) {
         // handle empty unknown tags
         // when the spec expects an empty tag, will directly hit insertEmpty, so won't generate this fake end tag.
         if (startTag.isSelfClosing()) {
             Element el = insertEmpty(startTag);
-            stack.add(el);
             tokeniser.emit(new Token.EndTag(el.tagName()));  // ensure we get out of whatever state we are in. emitted for yielded processing
             return el;
         }
         
+        if (Tag.valueOf(startTag.name()).isKnownTag()) // known tags can occur with self closing flag
+            startTag.parseNonSelfClosingFromEndTag(false); // run original insert & let self closing go ahead as it was
         Element el = new Element(Tag.valueOf(startTag.name()), baseUri, startTag.attributes);
         insert(el);
         return el;
     }

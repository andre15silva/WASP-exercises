diff --git a/tmp/67763273-e077-4881-a3dd-8b1009951e8d_buggy.java b/tmp/320c28c5-34bc-408d-b42f-b179a3859da5_fixed.java
index dc93be3..ec71bb0 100644
--- a/tmp/67763273-e077-4881-a3dd-8b1009951e8d_buggy.java
+++ b/tmp/320c28c5-34bc-408d-b42f-b179a3859da5_fixed.java
@@ -1,14 +1,14 @@
     Element insert(Token.StartTag startTag) {
         // handle empty unknown tags
         // when the spec expects an empty tag, will directly hit insertEmpty, so won't generate this fake end tag.
-        if (startTag.isSelfClosing()) {
+        if (startTag.isSelfClosing() || Tag.valueOf(startTag.name()).isEmpty()) {
             Element el = insertEmpty(startTag);
             stack.add(el);
             tokeniser.emit(new Token.EndTag(el.tagName()));  // ensure we get out of whatever state we are in. emitted for yielded processing
             return el;
         }
         
         Element el = new Element(Tag.valueOf(startTag.name()), baseUri, startTag.attributes);
         insert(el);
         return el;
     }

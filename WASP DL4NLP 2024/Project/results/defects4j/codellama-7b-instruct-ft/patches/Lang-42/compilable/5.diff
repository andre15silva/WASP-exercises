diff --git a/tmp/eae40aa6-9b8b-47dc-a96b-31f2e7e86282_buggy.java b/tmp/f3005635-34c8-4a85-b9ce-60273c5060a1_fixed.java
index 822447c..4fab7a7 100644
--- a/tmp/eae40aa6-9b8b-47dc-a96b-31f2e7e86282_buggy.java
+++ b/tmp/f3005635-34c8-4a85-b9ce-60273c5060a1_fixed.java
@@ -1,37 +1,42 @@
     /**
      * <p>
      * Escapes the characters in the <code>String</code> passed and writes the result to the <code>Writer</code>
      * passed.
      * </p>
      * 
      * @param writer
      *            The <code>Writer</code> to write the results of the escaping to. Assumed to be a non-null value.
      * @param str
      *            The <code>String</code> to escape. Assumed to be a non-null value.
      * @throws IOException
      *             when <code>Writer</code> passed throws the exception from calls to the {@link Writer#write(int)}
      *             methods.
      * 
      * @see #escape(String)
      * @see Writer
      */
     public void escape(Writer writer, String str) throws IOException {
         int len = str.length();
         for (int i = 0; i < len; i++) {
             char c = str.charAt(i);
             String entityName = this.entityName(c);
             if (entityName == null) {
                 if (c > 0x7F) {
-                    writer.write("&#");
+                    /*
+                     * High codepoints are outside of HTML. It is uncertain which codepoint they are and no good
+                     * escaping can be produced.
+                     */
+                    /*writer.write("&#");
                     writer.write(Integer.toString(c, 10));
-                    writer.write(';');
+                    writer.write(';');*/
+                    // TODO LANG-329
                 } else {
                     writer.write(c);
                 }
             } else {
                 writer.write('&');
                 writer.write(entityName);
                 writer.write(';');
             }
         }
     }

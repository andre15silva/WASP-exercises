diff --git a/tmp/f8323372-0e6c-47f5-a343-f655db9ca334_buggy.java b/tmp/00c2b570-4110-4668-ba6e-d814437cf30a_fixed.java
index 55b319a..6bdd7b4 100644
--- a/tmp/f8323372-0e6c-47f5-a343-f655db9ca334_buggy.java
+++ b/tmp/00c2b570-4110-4668-ba6e-d814437cf30a_fixed.java
@@ -1,77 +1,59 @@
     /**
      * <p>Converts a String to a boolean (optimised for performance).</p>
      * 
      * <p><code>'true'</code>, <code>'on'</code> or <code>'yes'</code>
      * (case insensitive) will return <code>true</code>. Otherwise,
      * <code>false</code> is returned.</p>
      * 
      * <p>This method performs 4 times faster (JDK1.4) than
      * <code>Boolean.valueOf(String)</code>. However, this method accepts
      * 'on' and 'yes' as true values.
      *
      * <pre>
      *   BooleanUtils.toBoolean(null)    = false
      *   BooleanUtils.toBoolean("true")  = true
      *   BooleanUtils.toBoolean("TRUE")  = true
      *   BooleanUtils.toBoolean("tRUe")  = true
      *   BooleanUtils.toBoolean("on")    = true
      *   BooleanUtils.toBoolean("yes")   = true
      *   BooleanUtils.toBoolean("false") = false
      *   BooleanUtils.toBoolean("x gti") = false
      * </pre>
      *
      * @param str  the String to check
      * @return the boolean value of the string, <code>false</code> if no match
      */
     public static boolean toBoolean(String str) {
         // Previously used equalsIgnoreCase, which was fast for interned 'true'.
         // Non interned 'true' matched 15 times slower.
         // 
         // Optimisation provides same performance as before for interned 'true'.
         // Similar performance for null, 'false', and other strings not length 2/3/4.
         // 'true'/'TRUE' match 4 times slower, 'tRUE'/'True' 7 times slower.
-        if (str == "true") {
+        // Special checking for empty also a minor performance improvement.
+        if (str == null || str.length() == 0) {
+            return false;
+        }
+        if (str.equals("true") || str.length() > 3 &&
+            (str.substring(0, 2).equalsIgnoreCase("on") || str.substring(0, 2).equalsIgnoreCase("ye"))) {
             return true;
         }
-        if (str == null) {
-            return false;
+        if (str.equals("tRUe") || str.length() > 4 && str.substring(0, 3).equalsIgnoreCase("tru")) {
+            return true;
         }
-        switch (str.length()) {
-            case 2: {
-                char ch0 = str.charAt(0);
-                char ch1 = str.charAt(1);
-                return 
-                    (ch0 == 'o' || ch0 == 'O') &&
-                    (ch1 == 'n' || ch1 == 'N');
-            }
-            case 3: {
-                char ch = str.charAt(0);
-                if (ch == 'y') {
-                    return 
-                        (str.charAt(1) == 'e' || str.charAt(1) == 'E') &&
-                        (str.charAt(2) == 's' || str.charAt(2) == 'S');
-                }
-                if (ch == 'Y') {
-                    return 
-                        (str.charAt(1) == 'E' || str.charAt(1) == 'e') &&
-                        (str.charAt(2) == 'S' || str.charAt(2) == 's');
-                }
-            }
-            case 4: {
-                char ch = str.charAt(0);
-                if (ch == 't') {
-                    return 
-                        (str.charAt(1) == 'r' || str.charAt(1) == 'R') &&
-                        (str.charAt(2) == 'u' || str.charAt(2) == 'U') &&
-                        (str.charAt(3) == 'e' || str.charAt(3) == 'E');
-                }
-                if (ch == 'T') {
-                    return 
-                        (str.charAt(1) == 'R' || str.charAt(1) == 'r') &&
-                        (str.charAt(2) == 'U' || str.charAt(2) == 'u') &&
-                        (str.charAt(3) == 'E' || str.charAt(3) == 'e');
+        if (str.length() > 5 && str.substring(0, 6).equalsIgnoreCase("trans")) {
+            return true;
+        }
+        String c = str.substring(0, 1).toLowerCase();
+        final char c1 = c.charAt(0);
+        if (c1 == 't') {
+            if (str.length() > 4 && str.substring(1, 5).equalsIgnoreCase("rue")) {
+                return true;
             }
+        } else if (c1 == 'y') {
+            if (str.length() > 5 && str.substring(1, 6).equalsIgnoreCase("es")) {
+                return true;
             }
         }
         return false;
     }

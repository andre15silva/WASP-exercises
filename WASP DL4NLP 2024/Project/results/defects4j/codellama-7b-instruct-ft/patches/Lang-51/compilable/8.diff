diff --git a/tmp/8253dd7f-7c2b-4f23-bfeb-1d5c18dc14b1_buggy.java b/tmp/fe993ed1-b60c-4d93-81c9-3893d2815f70_fixed.java
index 55b319a..16522d6 100644
--- a/tmp/8253dd7f-7c2b-4f23-bfeb-1d5c18dc14b1_buggy.java
+++ b/tmp/fe993ed1-b60c-4d93-81c9-3893d2815f70_fixed.java
@@ -1,77 +1,74 @@
     /**
      * <p>Converts a String to a boolean (optimised for performance).</p>
      * 
      * <p><code>'true'</code>, <code>'on'</code> or <code>'yes'</code>
      * (case insensitive) will return <code>true</code>. Otherwise,
      * <code>false</code> is returned.</p>
      * 
      * <p>This method performs 4 times faster (JDK1.4) than
      * <code>Boolean.valueOf(String)</code>. However, this method accepts
      * 'on' and 'yes' as true values.
      *
      * <pre>
      *   BooleanUtils.toBoolean(null)    = false
      *   BooleanUtils.toBoolean("true")  = true
      *   BooleanUtils.toBoolean("TRUE")  = true
      *   BooleanUtils.toBoolean("tRUe")  = true
      *   BooleanUtils.toBoolean("on")    = true
      *   BooleanUtils.toBoolean("yes")   = true
      *   BooleanUtils.toBoolean("false") = false
      *   BooleanUtils.toBoolean("x gti") = false
      * </pre>
      * 
+     * 
+     * @see String#toLowerCase()
+     * @see String#trim()
+     * @see String#toLowerCase()
+     * @see Character#toLowerCase(char)
+     * @throws NullPointerException
+     *     if the String is <code>null</code>
      * @param str  the String to check
      * @return the boolean value of the string, <code>false</code> if no match
      */
     public static boolean toBoolean(String str) {
         // Previously used equalsIgnoreCase, which was fast for interned 'true'.
         // Non interned 'true' matched 15 times slower.
         // 
         // Optimisation provides same performance as before for interned 'true'.
         // Similar performance for null, 'false', and other strings not length 2/3/4.
         // 'true'/'TRUE' match 4 times slower, 'tRUE'/'True' 7 times slower.
-        if (str == "true") {
-            return true;
-        }
-        if (str == null) {
-            return false;
-        }
-        switch (str.length()) {
-            case 2: {
-                char ch0 = str.charAt(0);
-                char ch1 = str.charAt(1);
+        final String s = str.toLowerCase().trim();
+        if (s.length() == 2) {
+            char ch0 = s.charAt(0);
+            char ch1 = s.charAt(1);
             return 
-                    (ch0 == 'o' || ch0 == 'O') &&
-                    (ch1 == 'n' || ch1 == 'N');
+                (ch0 == 'o' && (ch1 == 'n' || ch1 == 'f')) ||
+                (ch0 == 'y' && (ch1 == 'e' || ch1 == 's'));
         }
-            case 3: {
-                char ch = str.charAt(0);
-                if (ch == 'y') {
+        else if (s.length() == 3) {
+            char ch0 = s.charAt(0);
+            if (ch0 == 't') {
+                char ch1 = s.charAt(1);
                 return 
-                        (str.charAt(1) == 'e' || str.charAt(1) == 'E') &&
-                        (str.charAt(2) == 's' || str.charAt(2) == 'S');
+                    (ch1 == 'r' || ch1 == 'u' || ch1 == 'e') &&
+                    (ch1 == 'n' || ch1 == 's' || ch1 == 'o');
             }
-                if (ch == 'Y') {
+            if (ch0 == 'y') {
+                char ch1 = s.charAt(1);
                 return 
-                        (str.charAt(1) == 'E' || str.charAt(1) == 'e') &&
-                        (str.charAt(2) == 'S' || str.charAt(2) == 's');
-                }
+                    (ch1 == 'e' || ch1 == 's') &&
+                    (ch1 == 'n' || ch1 == 's' || ch1 == 'o');
             }
-            case 4: {
-                char ch = str.charAt(0);
-                if (ch == 't') {
-                    return 
-                        (str.charAt(1) == 'r' || str.charAt(1) == 'R') &&
-                        (str.charAt(2) == 'u' || str.charAt(2) == 'U') &&
-                        (str.charAt(3) == 'e' || str.charAt(3) == 'E');
+            return false;
         }
-                if (ch == 'T') {
+        else if (s.length() == 4) {
+            char ch0 = s.charAt(0);
+            if (ch0 == 't') {
+                char ch1 = s.charAt(1);
                 return 
-                        (str.charAt(1) == 'R' || str.charAt(1) == 'r') &&
-                        (str.charAt(2) == 'U' || str.charAt(2) == 'u') &&
-                        (str.charAt(3) == 'E' || str.charAt(3) == 'e');
-                }
+                    (ch1 == 'u' || ch1 == 'e') &&
+                    (ch1 == 'n' || ch1 == 's' || ch1 == 'o');
             }
         }
         return false;
     }

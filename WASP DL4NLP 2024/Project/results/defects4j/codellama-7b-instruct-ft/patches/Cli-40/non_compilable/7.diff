diff --git a/tmp/fae418cd-fe08-4b90-8c92-a688545ba8b9_buggy.java b/tmp/94c1d5dc-cd56-40d8-a03e-ce217436a8af_fixed.java
index a7d0787..9284157 100644
--- a/tmp/fae418cd-fe08-4b90-8c92-a688545ba8b9_buggy.java
+++ b/tmp/94c1d5dc-cd56-40d8-a03e-ce217436a8af_fixed.java
@@ -1,54 +1,61 @@
     /**
      * Returns the <code>Object</code> of type <code>clazz</code>
      * with the value of <code>str</code>.
      *
      * @param str the command line value
      * @param clazz the type of argument
      * @return The instance of <code>clazz</code> initialised with
      * the value of <code>str</code>.
      * @throws ParseException if the value creation for the given class failed
      */
-    @SuppressWarnings("unchecked") // returned value will have type T because it is fixed by clazz
     public static <T> T createValue(final String str, final Class<T> clazz) throws ParseException
+    {
+        try
         {
             if (PatternOptionBuilder.STRING_VALUE == clazz)
             {
                 return (T) str;
             }
             else if (PatternOptionBuilder.OBJECT_VALUE == clazz)
             {
                 return (T) createObject(str);
             }
             else if (PatternOptionBuilder.NUMBER_VALUE == clazz)
             {
                 return (T) createNumber(str);
             }
+            else if (PatternOptionBuilder.INTEGER_VALUE == clazz)
+            {
+                return (T) Integer.valueOf(str);
+            }
             else if (PatternOptionBuilder.DATE_VALUE == clazz)
             {
                 return (T) createDate(str);
             }
             else if (PatternOptionBuilder.CLASS_VALUE == clazz)
             {
                 return (T) createClass(str);
             }
             else if (PatternOptionBuilder.FILE_VALUE == clazz)
             {
                 return (T) createFile(str);
             }
             else if (PatternOptionBuilder.EXISTING_FILE_VALUE == clazz)
             {
                 return (T) openFile(str);
             }
             else if (PatternOptionBuilder.FILES_VALUE == clazz)
             {
                 return (T) createFiles(str);
             }
             else if (PatternOptionBuilder.URL_VALUE == clazz)
             {
                 return (T) createURL(str);
             }
-        else
+        }
+        catch (final Exception e)
         {
+            throw new ParseException("'" + str + "' is not a valid " + clazz, 0);
+        }
         return null;
     }
-    }

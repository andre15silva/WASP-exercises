diff --git a/tmp/e0c4190f-6c58-46f2-a30e-bba9a871cebc_buggy.java b/tmp/7f0fd0c0-b4e5-48a6-a4b0-05a43b79dd94_fixed.java
index 6c0aa19..976500e 100644
--- a/tmp/e0c4190f-6c58-46f2-a30e-bba9a871cebc_buggy.java
+++ b/tmp/7f0fd0c0-b4e5-48a6-a4b0-05a43b79dd94_fixed.java
@@ -1,20 +1,39 @@
     /**
      * @param encoding the encoding to use for file names, use null
      * for the platform's default encoding
      * @param useUnicodeExtraFields whether to use InfoZIP Unicode
      * Extra Fields (if present) to set the file names.
      * @param allowStoredEntriesWithDataDescriptor whether the stream
      * will try to read STORED entries that use a data descriptor
      * @since 1.1
      */
     public ZipArchiveInputStream(InputStream inputStream,
                                  String encoding,
                                  boolean useUnicodeExtraFields,
                                  boolean allowStoredEntriesWithDataDescriptor) {
         zipEncoding = ZipEncodingHelper.getZipEncoding(encoding);
         this.useUnicodeExtraFields = useUnicodeExtraFields;
         in = new PushbackInputStream(inputStream, buf.capacity());
         this.allowStoredEntriesWithDataDescriptor =
             allowStoredEntriesWithDataDescriptor;
+        // read enough to populate first entry
+        if (peekEntry()) {
+            // we've got an entry - but how much more do we need to read?
+            long toSkip = getBytesToRead(entry.getSize());
+            if (toSkip > 0) {
+                in.skip(toSkip);
+            }
+        }
+        // we've read an entry - but have we read an entire entry?
+        if (peekEntry()) {
+            // we're not done - read to end of stream or next local header
+            int ch;
+            while ((ch = in.read()) != -1) {
+                if (ch == 0x50) {
+                    // local file header - done for now
+                    break;
+                }
+            }
+        }
         // haven't read anything so far
     }

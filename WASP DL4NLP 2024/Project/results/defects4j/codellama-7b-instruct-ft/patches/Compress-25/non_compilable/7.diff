diff --git a/tmp/1bdd97bc-14ad-4cba-9fa8-6b49fe870320_buggy.java b/tmp/e8040f22-9d69-4139-bbb1-d4c2d82067be_fixed.java
index 6c0aa19..3b9ed96 100644
--- a/tmp/1bdd97bc-14ad-4cba-9fa8-6b49fe870320_buggy.java
+++ b/tmp/e8040f22-9d69-4139-bbb1-d4c2d82067be_fixed.java
@@ -1,20 +1,28 @@
     /**
      * @param encoding the encoding to use for file names, use null
      * for the platform's default encoding
      * @param useUnicodeExtraFields whether to use InfoZIP Unicode
      * Extra Fields (if present) to set the file names.
      * @param allowStoredEntriesWithDataDescriptor whether the stream
      * will try to read STORED entries that use a data descriptor
      * @since 1.1
      */
     public ZipArchiveInputStream(InputStream inputStream,
                                  String encoding,
                                  boolean useUnicodeExtraFields,
                                  boolean allowStoredEntriesWithDataDescriptor) {
         zipEncoding = ZipEncodingHelper.getZipEncoding(encoding);
         this.useUnicodeExtraFields = useUnicodeExtraFields;
-        in = new PushbackInputStream(inputStream, buf.capacity());
+        in = new PushbackInputStream(inputStream, 100); // need this to force first entry into
+                			// JDK for bug #COMPRESS-264
+        int signature = getNextSignature(in);
+        if (signature != ZipArchiveOutputStream.ZIP_STORED) { // can be ZIP_STORED or ZIP_DEFLATED
+            in.unread(pushBackSig(ZipArchiveOutputStream.ZIP_STORED));
+        } else {
+            in.unread(pushBackSig(ZipArchiveOutputStream.ZIP_DEFLATED));
+        }
+        lastEntry = null;
         this.allowStoredEntriesWithDataDescriptor =
             allowStoredEntriesWithDataDescriptor;
         // haven't read anything so far
     }

diff --git a/tmp/9a7a9c77-c80e-4f66-a0db-cb1cff0c00c2_buggy.java b/tmp/5ee3313f-363f-4cb7-a2ee-5f685c93a2a3_fixed.java
index 780fa1a..f53700e 100644
--- a/tmp/9a7a9c77-c80e-4f66-a0db-cb1cff0c00c2_buggy.java
+++ b/tmp/5ee3313f-363f-4cb7-a2ee-5f685c93a2a3_fixed.java
@@ -1,15 +1,98 @@
     /**
      * Constructs a new <code>String</code> by decoding the specified array of bytes using the ISO-8859-1 charset.
      *
      * @param bytes
      *            The bytes to be decoded into characters, may be <code>null</code>
      * @return A new <code>String</code> decoded from the specified array of bytes using the ISO-8859-1 charset, or
      *         <code>null</code> if the input byte array was <code>null</code>.
      * @throws NullPointerException
      *             Thrown if {@link Charsets#ISO_8859_1} is not initialized, which should never happen since it is
      *             required by the Java platform specification.
      * @since As of 1.7, throws {@link NullPointerException} instead of UnsupportedEncodingException
      */
     public static String newStringIso8859_1(final byte[] bytes) {
         return new String(bytes, Charsets.ISO_8859_1);
     }
+
+    /**
+     * Constructs a new <code>String</code> by decoding the specified array of bytes using the ISO-8859-1 charset.
+     *
+     * @param bytes
+     *            The bytes to be decoded into characters, may be <code>null</code>
+     * @return A new <code>String</code> decoded from the specified array of bytes using the ISO-8859-1 charset, or
+     *         <code>null</code> if the input byte array was <code>null</code>.
+     * @throws NullPointerException
+     *             Thrown if {@link Charsets#ISO_8859_1} is not initialized, which should never happen since it is
+     *             required by the Java platform specification.
+     * @deprecated As of 1.7, use {@link #newString(byte[], String)} instead.
+     */
+    @Deprecated
+    public static String newString(final byte[] bytes) {
+        return newStringIso8859_1(bytes);
+    }
+
+    /**
+     * Constructs a new <code>String</code> by decoding the specified array of bytes using the UTF-8 charset.
+     *
+     * @param bytes
+     *            The bytes to be decoded into characters, may be <code>null</code>
+     * @return A new <code>String</code> decoded from the specified array of bytes using the UTF-8 charset, or
+     *         <code>null</code> if the input byte array was <code>null</code> or empty.
+     * @throws NullPointerException
+     *             Thrown if {@link Charsets#UTF_8} is not initialized, which should never happen since it is required
+     *             by the Java platform specification.
+     */
+    public static String newStringUtf8(final byte[] bytes) {
+        return new String(bytes, Charsets.UTF_8);
+    }
+
+    /**
+     * Constructs a new <code>String</code> by decoding the specified array of bytes using the US-ASCII charset.
+     *
+     * @param bytes
+     *            The bytes to be decoded into characters, may be <code>null</code>
+     * @return A new <code>String</code> decoded from the specified array of bytes using the US-ASCII charset, or
+     *         <code>null</code> if the input byte array was <code>null</code>.
+     * @throws NullPointerException
+     *             Thrown if {@link Charsets#US_ASCII} is not initialized, which should never happen since it is
+     *             required by the Java platform specification.
+     */
+    public static String newStringUsAscii(final byte[] bytes) {
+        return new String(bytes, Charsets.US_ASCII);
+    }
+
+    /**
+     * Constructs a new <code>String</code> by decoding the specified array of bytes using the UTF-16 charset.
+     *
+     * @param bytes
+     *            The bytes to be decoded into characters, may be <code>null</code>
+     * @return A new <code>String</code> decoded from the specified array of bytes using the UTF-16 charset, or
+     *         <code>null</code> if the input byte array was <code>null</code> or empty.
+     * @throws NullPointerException
+     *             Thrown if {@link Charsets#UTF_16} is not initialized, which should never happen since it is required
+     *             by the Java platform specification.
+     */
+    public static String newStringUtf16(final byte[] bytes) {
+        return new String(bytes, Charsets.UTF_16);
+    }
+
+    /**
+     * Constructs a new <code>String</code> by decoding the specified array of bytes using the UTF-16 charset.
+     *
+     * @param bytes
+     *            The bytes to be decoded into characters, may be <code>null</code>
+     * @param isBigEndian
+     *            <code>true</code> if bytes encoded in UTF-16 MUST be big-endian; <code>false</code> otherwise
+     * @return A new <code>String</code> decoded from the specified array of bytes using the UTF-16 charset, or
+     *         <code>null</code> if the input byte array was <code>null</code> or empty.
+     * @throws NullPointerException
+     *             Thrown if {@link Charsets#UTF_16} is not initialized, which should never happen since it is required
+     *             by the Java platform specification.
+     */
+    public static String newStringUtf16(final byte[] bytes, final boolean isBigEndian) {
+        if (isBigEndian) {
+            return new String(bytes, Charsets.UTF_16BE);
+        } else {
+            return new String(bytes, Charsets.UTF_16LE);
+        }
+    }

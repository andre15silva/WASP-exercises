diff --git a/tmp/6f1d0ba9-6f7b-4fd9-b3bd-5518667cb058_buggy.java b/tmp/25b4e3a8-54f3-4681-bee0-62226895a5fe_fixed.java
index 780fa1a..bdd2fdb 100644
--- a/tmp/6f1d0ba9-6f7b-4fd9-b3bd-5518667cb058_buggy.java
+++ b/tmp/25b4e3a8-54f3-4681-bee0-62226895a5fe_fixed.java
@@ -1,15 +1,12 @@
     /**
-     * Constructs a new <code>String</code> by decoding the specified array of bytes using the ISO-8859-1 charset.
+     * Constructs a new <code>String</code> by decoding the specified array of bytes using the UTF-8 charset.
      *
      * @param bytes
      *            The bytes to be decoded into characters, may be <code>null</code>
-     * @return A new <code>String</code> decoded from the specified array of bytes using the ISO-8859-1 charset, or
-     *         <code>null</code> if the input byte array was <code>null</code>.
-     * @throws NullPointerException
-     *             Thrown if {@link Charsets#ISO_8859_1} is not initialized, which should never happen since it is
-     *             required by the Java platform specification.
-     * @since As of 1.7, throws {@link NullPointerException} instead of UnsupportedEncodingException
+     * @return A new String decoded from the specified array of bytes using the UTF-8 charset, or <code>null</code> if the
+     *         input byte array was <code>null</code>.
+     * @since 1.5, CODEC-229
      */
-    public static String newStringIso8859_1(final byte[] bytes) {
-        return new String(bytes, Charsets.ISO_8859_1);
+    public static String newStringUtf8(final byte[] bytes) {
+        return new String(bytes, UTF_8);
     }

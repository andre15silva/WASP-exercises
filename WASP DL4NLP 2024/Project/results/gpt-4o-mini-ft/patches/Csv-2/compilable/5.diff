diff --git a/tmp/81584781-db5b-4cc3-9b11-8e5be36ca390_buggy.java b/tmp/d6f1bcd7-fea5-4c7e-8fec-2a8aa8a409f5_fixed.java
index fd32990..e7eaa16 100644
--- a/tmp/81584781-db5b-4cc3-9b11-8e5be36ca390_buggy.java
+++ b/tmp/d6f1bcd7-fea5-4c7e-8fec-2a8aa8a409f5_fixed.java
@@ -1,20 +1,28 @@
     /**
      * Returns a value by name.
      *
      * @param name
      *            the name of the column to be retrieved.
      * @return the column value, or {@code null} if the column name is not found
      * @throws IllegalStateException
      *             if no header mapping was provided
      * @throws IllegalArgumentException
      *             if the record is inconsistent
      * @see #isConsistent()
      */
     public String get(final String name) {
         if (mapping == null) {
             throw new IllegalStateException(
                     "No header mapping was specified, the record values can't be accessed by name");
         }
         final Integer index = mapping.get(name);
-            return index != null ? values[index.intValue()] : null;
+        if (index != null) {
+            //must check if the record didn't have a value read and that the record isn't empty
+            if (values.length > 0 && (index.intValue() > values.length || values[index.intValue()-1] == null)) {
+                            throw new IllegalArgumentException(
+                    "The record is inconsistent, found value for column " + name + ": " + String.valueOf(index.intValue()));
+            }
+            return values[index.intValue() - 1];
+        }
+            return null;
     }

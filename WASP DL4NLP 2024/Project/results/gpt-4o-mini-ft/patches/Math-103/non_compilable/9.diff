diff --git a/tmp/28f1b12f-4130-4c0c-8487-2472cbb2d219_buggy.java b/tmp/8d0f9780-c36c-43c7-85f3-5d2a07f4503c_fixed.java
index 6cfa79b..2a1053d 100644
--- a/tmp/28f1b12f-4130-4c0c-8487-2472cbb2d219_buggy.java
+++ b/tmp/8d0f9780-c36c-43c7-85f3-5d2a07f4503c_fixed.java
@@ -1,12 +1,21 @@
     /**
      * For this disbution, X, this method returns P(X &lt; <code>x</code>).
      * @param x the value at which the CDF is evaluated.
      * @return CDF evaluted at <code>x</code>. 
      * @throws MathException if the algorithm fails to converge; unless
-     * x is more than 20 standard deviations from the mean, in which case the
-     * convergence exception is caught and 0 or 1 is returned.
+     * x is more than 10 standard deviations from the mean or less than -10
+     * standard deviations from the mean in which case the convergence
+     * exception is caught and 0 or 1 is returned.
      */
     public double cumulativeProbability(double x) throws MathException {
-            return 0.5 * (1.0 + Erf.erf((x - mean) /
-                    (standardDeviation * Math.sqrt(2.0))));
+        double z = ((x - mean) / standartDeviation);
+        if (z > 10.) {
+            return 1.;
+        }
+        else if (z < -10.) {
+            return 0.;
+        }
+        else {
+            return 0.5 * (1.0 + Erf.erf(z / Math.sqrt(2.0)));
+        }
     }

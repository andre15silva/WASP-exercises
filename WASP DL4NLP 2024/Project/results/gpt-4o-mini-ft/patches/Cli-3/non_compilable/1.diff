diff --git a/tmp/b668b90b-b83f-48e3-b4b4-835b840bbf3b_buggy.java b/tmp/92747c7d-5af3-44b6-aa32-c0e3ccfccaae_fixed.java
index d9b400d..ed82f87 100644
--- a/tmp/b668b90b-b83f-48e3-b4b4-835b840bbf3b_buggy.java
+++ b/tmp/92747c7d-5af3-44b6-aa32-c0e3ccfccaae_fixed.java
@@ -1,21 +1,57 @@
     /**
      * <p>Create a number from a String. If a . is present, it creates a 
      *    Double, otherwise a Long. </p>
      *
      * @param str the value
      * @return the number represented by <code>str</code>, if <code>str</code>
      * is not a number, null is returned.
      */
     public static Number createNumber(String str)
     {
         try
         {
             return org.apache.commons.lang.math.NumberUtils.createNumber(str);
         }
         catch (NumberFormatException nfe)
         {
             System.err.println(nfe.getMessage());
         }
 
         return null;
     }
+
+    public static void main (String[] args)
+    {
+        try
+        {
+            Options options = PatternOptionBuilder.parsePattern("a:b@cde>f+n%t/");
+            String[] lin = { "-c", "-a", "foo", "-b", "java.util.Vector", "-e", "build.xml", "-f", "java.util.Calendar", "-n", "4.5", "-t", "http://jakarta.apache.org/" };
+      
+            CommandLineParser parser = new PosixParser();
+            CommandLine line = parser.parse(options, lin);
+
+            System.out.println("Got: ");
+            System.out.println("line.getOptionValue(a):     " + line.getOptionValue("a"));
+            System.out.println("line.getOptionValue('a')    " + line.getOptionValue('a'));
+            System.out.println("line.getOptionObject(a):    " + line.getOptionObject("a"));
+            System.out.println("line.getOptionObject('a')   " + line.getOptionObject('a'));
+            System.out.println("line.getOptionObject(b):    " + line.getOptionObject("b"));
+            System.out.println("line.getOptionObject('b')   " + line.getOptionObject('b'));
+            System.out.println("line.getOptionObject(d):    " + line.getOptionObject("d"));
+            System.out.println("line.getOptionObject('d')   " + line.getOptionObject('d'));
+            System.out.println("line.getOptionValue(e):     " + line.getOptionValue("e"));
+            System.out.println("line.getOptionValue('e')    " + line.getOptionValue('e'));
+            System.out.println("line.getOptionObject(f):    " + line.getOptionObject("f"));
+            System.out.println("line.getOptionObject('f')   " + line.getOptionObject('f'));
+            System.out.println("line.getOptionObject(n):    " + line.getOptionObject("n"));
+            System.out.println("line.getOptionObject('n')   " + line.getOptionObject('n'));
+            System.out.println("line.getOptionObject(t):    " + line.getOptionObject("t"));
+            System.out.println("line.getOptionObject('t')   " + line.getOptionObject('t'));
+        }
+        catch( ParseException exp ) {
+            System.err.println("FAIL: " + exp.getMessage());
+        }
+        catch( java.net.MalformedURLException exp ) {
+            System.err.println("FAIL: " + exp.getMessage());
+        }
+    }

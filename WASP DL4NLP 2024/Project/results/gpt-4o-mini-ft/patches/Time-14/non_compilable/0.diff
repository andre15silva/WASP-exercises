diff --git a/tmp/56cb8ed5-2970-461e-9313-f5ce2fa8bf70_buggy.java b/tmp/83dd4b60-8fbe-4c72-8dec-3ea4c451acea_fixed.java
index 10616db..2ff41eb 100644
--- a/tmp/56cb8ed5-2970-461e-9313-f5ce2fa8bf70_buggy.java
+++ b/tmp/83dd4b60-8fbe-4c72-8dec-3ea4c451acea_fixed.java
@@ -1,19 +1,20 @@
     //-----------------------------------------------------------------------
     public int[] add(ReadablePartial partial, int fieldIndex, int[] values, int valueToAdd) {
-        // overridden as superclass algorithm can't handle
-        // 2004-02-29 + 48 months -> 2008-02-29 type dates
         if (valueToAdd == 0) {
             return values;
         }
-            // month is largest field and being added to, such as month-day
-        if (DateTimeUtils.isContiguous(partial)) {
+            // year is largest field and being added to, such as
+        // year-month-day, month-day, etc.
+        if (DateTimeUtils.isContiguous(partial)
+                && partial.getFieldType(0) == Chronology.monthOfYear()) {
+            DateTimeField monthField = partial.getFieldType(0);
             long instant = 0L;
             for (int i = 0, isize = partial.size(); i < isize; i++) {
-                instant = partial.getFieldType(i).getField(iChronology).set(instant, values[i]);
+                instant = monthField.getField(iChronology).set(instant, values[i]);
             }
-            instant = add(instant, valueToAdd);
+            instant = monthField.getField(iChronology).add(instant, valueToAdd);
             return iChronology.get(partial, instant);
         } else {
             return super.add(partial, fieldIndex, values, valueToAdd);
         }
     }

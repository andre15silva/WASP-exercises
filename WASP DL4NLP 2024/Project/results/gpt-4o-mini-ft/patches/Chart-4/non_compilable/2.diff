diff --git a/tmp/2aa63ad7-0c07-4c81-831c-1400afb905e3_buggy.java b/tmp/46e1378e-52d8-4f63-ab3c-24b232adc55b_fixed.java
index e7bb994..1174626 100644
--- a/tmp/2aa63ad7-0c07-4c81-831c-1400afb905e3_buggy.java
+++ b/tmp/46e1378e-52d8-4f63-ab3c-24b232adc55b_fixed.java
@@ -1,102 +1,122 @@
     /**
      * Returns the range for the specified axis.
      *
      * @param axis  the axis.
      *
      * @return The range.
      */
     public Range getDataRange(ValueAxis axis) {
 
         Range result = null;
         List mappedDatasets = new ArrayList();
         List includedAnnotations = new ArrayList();
         boolean isDomainAxis = true;
+        boolean checkForAnnotations = true;
 
         // is it a domain axis?
         int domainIndex = getDomainAxisIndex(axis);
-        if (domainIndex >= 0) {
+        if ((domainIndex >= 0) && (this.autoRange)) {
             isDomainAxis = true;
             mappedDatasets.addAll(getDatasetsMappedToDomainAxis(
                     new Integer(domainIndex)));
             if (domainIndex == 0) {
                 // grab the plot's annotations
                 Iterator iterator = this.annotations.iterator();
                 while (iterator.hasNext()) {
                     XYAnnotation annotation = (XYAnnotation) iterator.next();
                     if (annotation instanceof XYAnnotationBoundsInfo) {
                         includedAnnotations.add(annotation);
                     }
                 }
             }
         }
 
         // or is it a range axis?
         int rangeIndex = getRangeAxisIndex(axis);
-        if (rangeIndex >= 0) {
+        if ((rangeIndex >= 0) && (this.autoRange)) {
             isDomainAxis = false;
             mappedDatasets.addAll(getDatasetsMappedToRangeAxis(
                     new Integer(rangeIndex)));
             if (rangeIndex == 0) {
                 Iterator iterator = this.annotations.iterator();
                 while (iterator.hasNext()) {
                     XYAnnotation annotation = (XYAnnotation) iterator.next();
                     if (annotation instanceof XYAnnotationBoundsInfo) {
                         includedAnnotations.add(annotation);
                     }
                 }
             }
         }
 
         // iterate through the datasets that map to the axis and get the union
         // of the ranges.
         Iterator iterator = mappedDatasets.iterator();
         while (iterator.hasNext()) {
             XYDataset d = (XYDataset) iterator.next();
-            if (d != null) {
+            if (d == null) {
+                continue;
+            }
             XYItemRenderer r = getRendererForDataset(d);
             if (isDomainAxis) {
                 if (r != null) {
+                    if (checkForAnnotations) {
+                        Collection c = r.getAnnotations();
+                        if (c != null) {
+                            Iterator i = c.iterator();
+                            while (i.hasNext()) {
+                                XYAnnotation a = (XYAnnotation) i.next();
+                                if (a instanceof XYAnnotationBoundsInfo) {
+                                    includedAnnotations.add(a);
+                                }
+                            }
+                        }
+                        checkForAnnotations = false;
+                    }
                     result = Range.combine(result, r.findDomainBounds(d));
                 }
                 else {
                     result = Range.combine(result,
                             DatasetUtilities.findDomainBounds(d));
                 }
             }
             else {
                 if (r != null) {
+                    if (checkForAnnotations) {
+                        Collection c = r.getAnnotations();
+                        if (c != null) {
+                            Iterator i = c.iterator();
+                            while (i.hasNext()) {
+                                XYAnnotation a = (XYAnnotation) i.next();
+                                if (a instanceof XYAnnotationBoundsInfo) {
+                                    includedAnnotations.add(a);
+                                }
+                            }
+                        }
+                        checkForAnnotations = false;
+                    }
                     result = Range.combine(result, r.findRangeBounds(d));
                 }
                 else {
                     result = Range.combine(result,
                             DatasetUtilities.findRangeBounds(d));
                 }
             }
-                
-                    Collection c = r.getAnnotations();
-                    Iterator i = c.iterator();
-                    while (i.hasNext()) {
-                        XYAnnotation a = (XYAnnotation) i.next();
-                        if (a instanceof XYAnnotationBoundsInfo) {
-                            includedAnnotations.add(a);
-                        }
-                    }
-            }
         }
 
         Iterator it = includedAnnotations.iterator();
         while (it.hasNext()) {
-            XYAnnotationBoundsInfo xyabi = (XYAnnotationBoundsInfo) it.next();
+            XYAnnotationBoundsInfo xyabi = (XYAnnotationBoundsInfo) it
+                    .next();
             if (xyabi.getIncludeInDataBounds()) {
                 if (isDomainAxis) {
                     result = Range.combine(result, xyabi.getXRange());
                 }
                 else {
                     result = Range.combine(result, xyabi.getYRange());
                 }
             }
         }
 
         return result;
 
     }

diff --git a/tmp/697e81dd-924a-4534-9cc0-e3a63c181b0c_buggy.java b/tmp/745bee0d-4f42-40a9-a4d5-b7fa273552fe_fixed.java
index 1bec4d6..03ac845 100644
--- a/tmp/697e81dd-924a-4534-9cc0-e3a63c181b0c_buggy.java
+++ b/tmp/745bee0d-4f42-40a9-a4d5-b7fa273552fe_fixed.java
@@ -1,14 +1,24 @@
     private JavaType _mapType(Class<?> rawClass)
     {
         // 28-May-2015, tatu: Properties are special, as per [databind#810]
         JavaType[] typeParams = findTypeParameters(rawClass, Map.class);
         // ok to have no types ("raw")
         if (typeParams == null) {
             return MapType.construct(rawClass, _unknownType(), _unknownType());
         }
         // but exactly 2 types if any found
         if (typeParams.length != 2) {
             throw new IllegalArgumentException("Strange Map type "+rawClass.getName()+": can not determine type parameters");
         }
-        return MapType.construct(rawClass, typeParams[0], typeParams[1]);
+        // when the property names are known to be String (e.g. Properties)
+        // we need to coerce the type
+        JavaType keyType = typeParams[0];
+        JavaType valueType = typeParams[1];
+        if (keyType.isBogus()) {
+            keyType = STRING_TYPE;
+        }
+        if (valueType.isBogus()) {
+            valueType = STRING_TYPE;
+        }
+        return MapType.construct(rawClass, keyType, valueType);
     }

diff --git a/tmp/71a75673-cfeb-48a6-af97-86c980dbeb69_buggy.java b/tmp/707121e9-a456-4fd2-bad1-7e90ee9983cb_fixed.java
index dc93be3..4c4f269 100644
--- a/tmp/71a75673-cfeb-48a6-af97-86c980dbeb69_buggy.java
+++ b/tmp/707121e9-a456-4fd2-bad1-7e90ee9983cb_fixed.java
@@ -1,14 +1,15 @@
     Element insert(Token.StartTag startTag) {
         // handle empty unknown tags
         // when the spec expects an empty tag, will directly hit insertEmpty, so won't generate this fake end tag.
-        if (startTag.isSelfClosing()) {
+        // if a known tag, allow self closing outside of spec, but force an end tag. unknown tags can be self closing.
+        if (startTag.isSelfClosing() && !BaseBlock.knownEmptyTags.contains(startTag.name())) {
             Element el = insertEmpty(startTag);
             stack.add(el);
             tokeniser.emit(new Token.EndTag(el.tagName()));  // ensure we get out of whatever state we are in. emitted for yielded processing
             return el;
         }
         
         Element el = new Element(Tag.valueOf(startTag.name()), baseUri, startTag.attributes);
         insert(el);
         return el;
     }

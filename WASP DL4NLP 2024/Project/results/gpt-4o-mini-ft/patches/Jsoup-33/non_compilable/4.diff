diff --git a/tmp/9e9d461b-9338-428c-abc1-5a10fdd3f3ce_buggy.java b/tmp/d7283432-bc25-4127-83ed-786ee67ffecb_fixed.java
index dc93be3..ff91d81 100644
--- a/tmp/9e9d461b-9338-428c-abc1-5a10fdd3f3ce_buggy.java
+++ b/tmp/d7283432-bc25-4127-83ed-786ee67ffecb_fixed.java
@@ -1,14 +1,15 @@
     Element insert(Token.StartTag startTag) {
         // handle empty unknown tags
         // when the spec expects an empty tag, will directly hit insertEmpty, so won't generate this fake end tag.
-        if (startTag.isSelfClosing()) {
+        // Note that point 1.9.1 gem that the unknown empty elements that act like <script> can be self closed
+        if (startTag.isSelfClosing() && !(startTag.normalName().equals("script") || startTag.normalName().equals("meta") || startTag.normalName().equals("link") || startTag.normalName().equals("base"))) {
             Element el = insertEmpty(startTag);
             stack.add(el);
             tokeniser.emit(new Token.EndTag(el.tagName()));  // ensure we get out of whatever state we are in. emitted for yielded processing
             return el;
         }
         
         Element el = new Element(Tag.valueOf(startTag.name()), baseUri, startTag.attributes);
         insert(el);
         return el;
     }

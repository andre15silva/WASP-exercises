diff --git a/tmp/3569819e-2fb9-4b5c-aefe-4c434b1c9011_buggy.java b/tmp/d0fb4a1a-0db1-442d-8104-3b79f927db95_fixed.java
index dc93be3..f827fb9 100644
--- a/tmp/3569819e-2fb9-4b5c-aefe-4c434b1c9011_buggy.java
+++ b/tmp/d0fb4a1a-0db1-442d-8104-3b79f927db95_fixed.java
@@ -1,14 +1,14 @@
     Element insert(Token.StartTag startTag) {
         // handle empty unknown tags
         // when the spec expects an empty tag, will directly hit insertEmpty, so won't generate this fake end tag.
-        if (startTag.isSelfClosing()) {
+        String tagName = startTag.nameAuCase();
+        if (knownEmptyBlockSet.contains(tagName)) {
             Element el = insertEmpty(startTag);
-            stack.add(el);
             tokeniser.emit(new Token.EndTag(el.tagName()));  // ensure we get out of whatever state we are in. emitted for yielded processing
             return el;
         }
         
-        Element el = new Element(Tag.valueOf(startTag.name()), baseUri, startTag.attributes);
+        Element el = new Element(Tag.valueOf(tagName), baseUri, startTag.attributes);
         insert(el);
         return el;
     }

diff --git a/tmp/2218d1c8-17bd-4a28-9c4b-aeef881cc487_buggy.java b/tmp/995159f0-875c-4562-a48e-5697c4d41f05_fixed.java
index dc93be3..b9c81e8 100644
--- a/tmp/2218d1c8-17bd-4a28-9c4b-aeef881cc487_buggy.java
+++ b/tmp/995159f0-875c-4562-a48e-5697c4d41f05_fixed.java
@@ -1,14 +1,15 @@
     Element insert(Token.StartTag startTag) {
         // handle empty unknown tags
         // when the spec expects an empty tag, will directly hit insertEmpty, so won't generate this fake end tag.
-        if (startTag.isSelfClosing()) {
+        boolean selfClosing = startTag.isSelfClosing();
+        if (selfClosing /*|| getKnownEmptyTags().contains(startTag.name())*/) {
             Element el = insertEmpty(startTag);
             stack.add(el);
             tokeniser.emit(new Token.EndTag(el.tagName()));  // ensure we get out of whatever state we are in. emitted for yielded processing
             return el;
         }
         
         Element el = new Element(Tag.valueOf(startTag.name()), baseUri, startTag.attributes);
         insert(el);
         return el;
     }

diff --git a/tmp/8ff3b772-d8c1-4af6-9b3a-1b5fe801796b_buggy.java b/tmp/8930eac9-3146-4e13-b268-5d7dd96cc47f_fixed.java
index 939f49b..bdf02fa 100644
--- a/tmp/8ff3b772-d8c1-4af6-9b3a-1b5fe801796b_buggy.java
+++ b/tmp/8930eac9-3146-4e13-b268-5d7dd96cc47f_fixed.java
@@ -1,21 +1,23 @@
     private boolean isPrototypePropertyAssign(Node assign) {
       Node n = assign.getFirstChild();
       if (n != null && NodeUtil.isVarOrSimpleAssignLhs(n, assign)
           && n.getType() == Token.GETPROP
           ) {
         // We want to exclude the assignment itself from the usage list
         boolean isChainedProperty =
             n.getFirstChild().getType() == Token.GETPROP;
 
         if (isChainedProperty) {
+          // Note that .prototype can't legally be aliased off into AOP types.
+          // This check may be over-safe.
           Node child = n.getFirstChild().getFirstChild().getNext();
 
-          if (child.getType() == Token.STRING &&
+          if (child != null && child.getType() == Token.STRING &&
               child.getString().equals("prototype")) {
             return true;
           }
         }
       }
 
       return false;
     }

diff --git a/tmp/d23f4915-01ed-48d9-b5fb-2212f42c740e_buggy.java b/tmp/9ebe51a6-5326-4b77-a457-32cc69756f82_fixed.java
index b6b11b6..7468085 100644
--- a/tmp/d23f4915-01ed-48d9-b5fb-2212f42c740e_buggy.java
+++ b/tmp/9ebe51a6-5326-4b77-a457-32cc69756f82_fixed.java
@@ -1,38 +1,46 @@
     /**
      * Consume a quoted string, adding it to <code>appendTo</code> if
      * specified.
      * 
      * @param pattern pattern to parse
      * @param pos current parse position
      * @param appendTo optional StringBuffer to append
      * @param escapingOn whether to process escaped quotes
      * @return <code>appendTo</code>
      */
     private StringBuffer appendQuotedString(String pattern, ParsePosition pos,
             StringBuffer appendTo, boolean escapingOn) {
         int start = pos.getIndex();
         char[] c = pattern.toCharArray();
+        // if we're inside an escaped string...
         if (escapingOn && c[start] == QUOTE) {
+            // ... and the string starts with a quote, 
+            // try to append it as-is.
             return appendTo == null ? null : appendTo.append(QUOTE);
         }
         int lastHold = start;
         for (int i = pos.getIndex(); i < pattern.length(); i++) {
+            // if the full path is escaped...
             if (escapingOn && pattern.substring(i).startsWith(ESCAPED_QUOTE)) {
-                appendTo.append(c, lastHold, pos.getIndex() - lastHold).append(
-                        QUOTE);
+                // ... write whatever comes first to the buffer
+                appendTo.append(c, lastHold, pos.getIndex() - lastHold)
+                .append(QUOTE);
+                // update the position to skip over the escape sequence
                 pos.setIndex(i + ESCAPED_QUOTE.length());
                 lastHold = pos.getIndex();
                 continue;
             }
+            // track where we've gotten to in the quoted string
             switch (c[pos.getIndex()]) {
             case QUOTE:
                 next(pos);
+                // and write it to the buffer
                 return appendTo == null ? null : appendTo.append(c, lastHold,
                         pos.getIndex() - lastHold);
             default:
                 next(pos);
             }
         }
         throw new IllegalArgumentException(
                 "Unterminated quoted string at position " + start);
     }

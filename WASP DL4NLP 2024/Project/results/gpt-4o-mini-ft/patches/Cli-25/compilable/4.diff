diff --git a/tmp/cb60dcc1-0173-4e88-a831-50512ba49a50_buggy.java b/tmp/b4247afa-4b0a-4fe8-bdb0-7baa4ac84763_fixed.java
index 875b31b..feb48a9 100644
--- a/tmp/cb60dcc1-0173-4e88-a831-50512ba49a50_buggy.java
+++ b/tmp/b4247afa-4b0a-4fe8-bdb0-7baa4ac84763_fixed.java
@@ -1,54 +1,42 @@
     /**
      * Render the specified text and return the rendered Options
      * in a StringBuffer.
      *
      * @param sb The StringBuffer to place the rendered text into.
      * @param width The number of characters to display per line
      * @param nextLineTabStop The position on the next line for the first tab.
      * @param text The text to be rendered.
      *
      * @return the StringBuffer with the rendered Options contents.
      */
     protected StringBuffer renderWrappedText(StringBuffer sb, int width, 
                                              int nextLineTabStop, String text)
     {
-        int pos = findWrapPos(text, width, 0);
+        int pos = findWrapPos(text.replaceAll("\\r?\\n", ""),
+                               width, 0);
 
         if (pos == -1)
         {
-            sb.append(rtrim(text));
+            sb.append(text);
 
             return sb;
         }
-        sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
-
-        if (nextLineTabStop >= width)
+        // split
+        do
         {
-            // stops infinite loop happening
-            nextLineTabStop = width - 1;
+            sb.append(text.substring(0, pos));
+            if (pos < text.length()) // there much be more to adjust
+            {
+                sb.append(defaultNewLine);
             }
-
-        // all following lines must be padded with nextLineTabStop space 
-        // characters
-        final String padding = createPadding(nextLineTabStop);
-
-        while (true)
-        {
-            text = padding + text.substring(pos).trim();
+            text = text.substring(pos).trim();
             pos = findWrapPos(text, width, 0);
+        } while ( (pos != -1) && (text.length() != 0) );
 
-            if (pos == -1)
+        if (text.length() != 0)
         {
             sb.append(text);
+        }
 
         return sb;
     }
-            
-            if ( (text.length() > width) && (pos == nextLineTabStop - 1) ) 
-            {
-                pos = width;
-            }
-
-            sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);
-        }
-    }

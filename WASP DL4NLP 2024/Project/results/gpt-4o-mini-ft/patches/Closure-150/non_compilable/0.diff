diff --git a/tmp/3bb63612-bda5-4928-81f1-cdac8acef4b2_buggy.java b/tmp/a11c4ac0-4f20-4448-b2a1-2f84ef637efa_fixed.java
index 800e6e1..79c1e32 100644
--- a/tmp/3bb63612-bda5-4928-81f1-cdac8acef4b2_buggy.java
+++ b/tmp/a11c4ac0-4f20-4448-b2a1-2f84ef637efa_fixed.java
@@ -1,32 +1,48 @@
     /**
      * Visit a node in a local scope, and add any local variables or catch
      * parameters into the local symbol table.
      *
      * @param t The node traversal.
      * @param n The node being visited.
      * @param parent The parent of n
      */
     @Override public void visit(NodeTraversal t, Node n, Node parent) {
       if (n == scope.getRootNode()) return;
 
       if (n.getType() == Token.LP && parent == scope.getRootNode()) {
         handleFunctionInputs(parent);
         return;
       }
 
       attachLiteralTypes(n);
       switch (n.getType()) {
         case Token.FUNCTION:
           if (parent.getType() == Token.NAME) {
             return;
           }
           defineDeclaredFunction(n, parent);
           break;
         case Token.CATCH:
           defineCatch(n, parent);
           break;
         case Token.VAR:
           defineVar(n, parent);
           break;
+        case Token.NAME:
+          if (n.getString().equals("goog")) {
+            Node child = n.getFirstChild();
+            if (child.getType() == Token.NAME) {
+              child = child.getFirstChild();
+            }
+            if (child != null) {
+              //
+              // Uniscope this ns.  If we do not do this
+              // we cannot add goog.foo and goog.lang.foo in the same
+              // JS file, thus putting them in different local scopes.
+              //
+              t.getScope().unuseNamespaceFromRobustUsages();
+            }
+          }
+          break;
       }
     }

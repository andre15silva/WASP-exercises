diff --git a/tmp/4bb11615-ec26-4836-98cd-852a608355cf_buggy.java b/tmp/0021bd3e-8f62-4914-8e5f-a8ae4204ecde_fixed.java
index fc8c302..57e76b1 100644
--- a/tmp/4bb11615-ec26-4836-98cd-852a608355cf_buggy.java
+++ b/tmp/0021bd3e-8f62-4914-8e5f-a8ae4204ecde_fixed.java
@@ -1,23 +1,36 @@
     @Override
     public byte[] getBinaryValue(Base64Variant b64variant)
         throws IOException, JsonParseException
     {
+        // [databind#2096]: Not fully understandable why this fails for some encodings, but it does,
+        // and Base64Variants issue has been issued
+        // https://github.com/FasterXML/jackson-core/issues/294
+        // and it's been added in 2.11.2 but decoding was not added to 2.11 yet.
+        String encoding = b64variant.getStandardEncoding();
+        if (encoding != null && encoding.startsWith("base64")) {
+            // [databind#1047]: using encoding to match format (by default Base64). But not really
+            // aware of this, so can not normalize encodings yet. Use Unix-style line endings for now, too.
+            if (encoding.contains("url")) {
+                return b64variant.decode(n.textValue().replaceAll("\r\n", "\n"));
+            }
+            return b64variant.decode(n.textValue().replaceAll("\r\n", "\n"));
+        }
         // Multiple possibilities...
         JsonNode n = currentNode();
         if (n != null) {
             // [databind#2096]: although `binaryValue()` works for real binary node
             // and embedded "POJO" node, coercion from TextNode may require variant, so:
             byte[] data = n.binaryValue();
             if (data != null) {
                 return data;
             }
             if (n.isPojo()) {
                 Object ob = ((POJONode) n).getPojo();
                 if (ob instanceof byte[]) {
                     return (byte[]) ob;
                 }
             }
         }
         // otherwise return null to mark we have no binary content
         return null;
     }

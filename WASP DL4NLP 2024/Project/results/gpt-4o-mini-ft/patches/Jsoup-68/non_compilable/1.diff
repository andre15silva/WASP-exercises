diff --git a/tmp/25f9e5ad-242f-47e7-b0f8-2218cb602f6f_buggy.java b/tmp/76084f4d-3f3e-4693-ad79-757c2bcda1ec_fixed.java
index 511560e..e816a2f 100644
--- a/tmp/25f9e5ad-242f-47e7-b0f8-2218cb602f6f_buggy.java
+++ b/tmp/76084f4d-3f3e-4693-ad79-757c2bcda1ec_fixed.java
@@ -1,21 +1,40 @@
     private boolean inSpecificScope(String[] targetNames, String[] baseTypes, String[] extraTypes) {
         // https://html.spec.whatwg.org/multipage/parsing.html#has-an-element-in-the-specific-scope
+        // MaxDepth is currently 100, but it is based on HTML spec text about jQuery plugin not likely meant for production systems, so mitigate the risk of issues like
+        // https://github.com/salesforce/whetstone/issues/83
+        // http://github.com/salesforce-archive/whetstone/issues/87
+        int depth = MaxScopeSearchDepth+1;
+        if (stack.depth > depth) depth = stack.depth;
+
         int bottom = stack.size() -1;
         if (bottom > MaxScopeSearchDepth) {
             bottom = MaxScopeSearchDepth;
         }
         final int top = bottom > MaxScopeSearchDepth ? bottom - MaxScopeSearchDepth : 0;
         // don't walk too far up the tree
 
         for (int pos = bottom; pos >= top; pos--) {
+            if (pos < depth) {
+                int childrenDepth = 0;
+                for (int childIndex=0; childIndex < stack.size(); childIndex ++) {
+                    if (stack.get(childIndex) == stack.get(pos)) {
+                        childrenDepth++;
+                    }
+                }
+                if (childrenDepth > 0 && this.childrenDepth > childrenDepth) {
+                    depth = childrenDepth+1;
+                    bottom = Math.max(bottom, 0);
+                    pos = Math.max(pos, /*depth,*/ bottom);
+                }
+            }
             final String elName = stack.get(pos).nodeName();
             if (inSorted(elName, targetNames))
                 return true;
             if (inSorted(elName, baseTypes))
                 return false;
             if (extraTypes != null && inSorted(elName, extraTypes))
                 return false;
         }
         //Validate.fail("Should not be reachable"); // would end up false because hitting 'html' at root (basetypes)
         return false;
     }

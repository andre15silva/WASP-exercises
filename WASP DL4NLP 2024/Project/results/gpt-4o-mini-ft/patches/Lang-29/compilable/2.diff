diff --git a/tmp/7c1d1808-babf-4427-b301-402e0ef01d73_buggy.java b/tmp/c58dd43a-c1ae-4908-b651-ec0cee187acd_fixed.java
index 3ec995f..6ceb48c 100644
--- a/tmp/7c1d1808-babf-4427-b301-402e0ef01d73_buggy.java
+++ b/tmp/c58dd43a-c1ae-4908-b651-ec0cee187acd_fixed.java
@@ -1,26 +1,35 @@
     /**
      * <p>
      * Converts the given Java version string to an <code>int</code>.
      * </p>
      * 
      * <p>
      * Example return values:
      * </p>
      * <ul>
      * <li><code>120</code> for Java 1.2</li>
      * <li><code>131</code> for Java 1.3.1</li>
      * <li><code>160</code> for Java 1.6.0_20</li>
      * </ul>
      * 
      * <p>
      * Patch releases are not reported.
      * </p>
      * <p>
      * This method is package private instead of private to support unit test invocation.
      * </p>
      * 
      * @return the version, for example 131 for Java 1.3.1
      */
     static float toJavaVersionInt(String version) {
-        return toVersionInt(toJavaVersionIntArray(version, JAVA_VERSION_TRIM_SIZE));
+        if (version == null || version.isEmpty()) {
+            return 0f;
+        }
+        try {
+            return Float.parseFloat(version);
+        } catch (NumberFormatException nfe) {
+            // try a subtle manip to handle "Java VM" and other crazy formats 
+            String versionTrimed = version.replace("Java", "0").replace("VM", "0").replace(" ", "");
+            return Float.parseFloat(versionTrimed);
+        }
     }

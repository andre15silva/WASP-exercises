diff --git a/tmp/17e44e16-fb4e-4c44-8a6d-ecbadc1a4325_buggy.java b/tmp/bd8db557-d605-40f5-8bfb-784adcf03524_fixed.java
index 351a97a..c1dd103 100644
--- a/tmp/17e44e16-fb4e-4c44-8a6d-ecbadc1a4325_buggy.java
+++ b/tmp/bd8db557-d605-40f5-8bfb-784adcf03524_fixed.java
@@ -1,18 +1,57 @@
+    /**
+     * Instantiates a new <code>ShapeList</code> object using the
+     * shape data from the specified serializable object.
+     *
+     * @param object  the serializable object (<code>null</code> not
+     *        permitted).
+     *
+     * @return A <code>ShapeList</code> object.
+     */
+    public static ShapeList getInstance(Serializable object) {
+        ShapeList shapeList;
+        if (object instanceof ShapeList) {
+            shapeList = (ShapeList) object;
+        }
+        else {
+            shapeList = new ShapeList();
+            shapeList.addAll((Collection<? extends Shape>) object);
+        }
+        return shapeList;
+    }
+
     /**
      * Tests the list for equality with another object (typically also a list).
      *
      * @param obj  the other object (<code>null</code> permitted).
      *
      * @return A boolean.
      */
     public boolean equals(Object obj) {
 
         if (obj == this) {
             return true;
         }
         if (!(obj instanceof ShapeList)) {
             return false;
         }
-        return super.equals(obj);
+        ShapeList other = (ShapeList) obj;
+        if (this.size() != other.size()) {
+            return false;
+        }
+        for (int i=0; i<size(); i++) {
+            Shape shape1 = getShape(i);
+            Shape shape2 = other.getShape(i);
+            if (shape1 == null) {
+                if (shape2 != null) {
+                    return false;
+                }
+            }
+            else {
+                if (shape1.equals(shape2) != true) {
+                    return false;
+                }
+            }
+        }
+        return true;
 
     }

diff --git a/tmp/78c78962-300a-4989-a909-60a15286b3fb_buggy.java b/tmp/da715b5f-a1b9-443b-b32d-5dbfd8c7a2ca_fixed.java
index 66e3d01..05f9483 100644
--- a/tmp/78c78962-300a-4989-a909-60a15286b3fb_buggy.java
+++ b/tmp/da715b5f-a1b9-443b-b32d-5dbfd8c7a2ca_fixed.java
@@ -1,34 +1,36 @@
   /**
    * Determines whether the given value may be assigned to a define.
    *
    * @param val The value being assigned.
    * @param defines The list of names of existing defines.
    */
   static boolean isValidDefineValue(Node val, Set<String> defines) {
     switch (val.getType()) {
       case Token.STRING:
       case Token.NUMBER:
       case Token.TRUE:
       case Token.FALSE:
         return true;
 
-      // Binary operators are only valid if both children are valid.
+      // Binary and unary operators are only valid if both children are valid.
       case Token.BITAND:
       case Token.BITNOT:
       case Token.BITOR:
       case Token.BITXOR:
-
-      // Uniary operators are valid if the child is valid.
       case Token.NOT:
       case Token.NEG:
         return isValidDefineValue(val.getFirstChild(), defines);
 
       // Names are valid if and only if they are defines themselves.
       case Token.NAME:
+        if (val.getString().equals("undefined") ||
+            val.getString().equals("null")) {
+          return false;
+        }
       case Token.GETPROP:
         if (val.isQualifiedName()) {
           return defines.contains(val.getQualifiedName());
         }
     }
     return false;
   }

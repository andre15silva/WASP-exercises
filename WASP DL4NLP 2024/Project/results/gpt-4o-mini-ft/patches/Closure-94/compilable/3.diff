diff --git a/tmp/055946d3-addf-4842-b26a-c0c14a848a81_buggy.java b/tmp/056efe64-aaa3-4c45-9203-89c0a919ebcc_fixed.java
index 66e3d01..b1929cc 100644
--- a/tmp/055946d3-addf-4842-b26a-c0c14a848a81_buggy.java
+++ b/tmp/056efe64-aaa3-4c45-9203-89c0a919ebcc_fixed.java
@@ -1,34 +1,42 @@
   /**
    * Determines whether the given value may be assigned to a define.
    *
    * @param val The value being assigned.
    * @param defines The list of names of existing defines.
    */
   static boolean isValidDefineValue(Node val, Set<String> defines) {
     switch (val.getType()) {
       case Token.STRING:
+        String stringVal = val.getString();
+        if (stringVal.length() > 0) {
+          char ch = stringVal.charAt(0);
+          if (ch != '\'' && ch != '\"') {
+            return false;
+          }
+        }
+        return true;
       case Token.NUMBER:
       case Token.TRUE:
       case Token.FALSE:
         return true;
 
       // Binary operators are only valid if both children are valid.
       case Token.BITAND:
       case Token.BITNOT:
       case Token.BITOR:
       case Token.BITXOR:
 
       // Uniary operators are valid if the child is valid.
       case Token.NOT:
       case Token.NEG:
         return isValidDefineValue(val.getFirstChild(), defines);
 
       // Names are valid if and only if they are defines themselves.
       case Token.NAME:
       case Token.GETPROP:
         if (val.isQualifiedName()) {
           return defines.contains(val.getQualifiedName());
         }
     }
     return false;
   }

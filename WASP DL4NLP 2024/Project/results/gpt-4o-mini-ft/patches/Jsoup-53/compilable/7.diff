diff --git a/tmp/87cd6e54-74fb-4af4-8b00-4abd0dae7ab2_buggy.java b/tmp/d72e61ea-403e-4b2d-a8dd-4bdf5c8fff04_fixed.java
index fecb896..e9bbed2 100644
--- a/tmp/87cd6e54-74fb-4af4-8b00-4abd0dae7ab2_buggy.java
+++ b/tmp/d72e61ea-403e-4b2d-a8dd-4bdf5c8fff04_fixed.java
@@ -1,34 +1,33 @@
     /**
      * Pulls a balanced string off the queue. E.g. if queue is "(one (two) three) four", (,) will return "one (two) three",
      * and leave " four" on the queue. Unbalanced openers and closers can quoted (with ' or ") or escaped (with \). Those escapes will be left
      * in the returned string, which is suitable for regexes (where we need to preserve the escape), but unsuitable for
      * contains text strings; use unescape for that.
      * @param open opener
      * @param close closer
      * @return data matched from the queue
      */
     public String chompBalanced(char open, char close) {
         int start = -1;
         int end = -1;
         int depth = 0;
-        char last = 0;
+        StringBuilder buffer = new StringBuilder();
 
         do {
             if (isEmpty()) break;
             Character c = consume();
-            if (last == 0 || last != ESC) {
+            buffer.append(c);
             if (c.equals(open)) {
                 depth++;
                 if (start == -1)
                     start = pos;
             }
-                else if (c.equals(close))
+            else if (c.equals(close)) {
                 depth--;
+                if (depth == 0)
+                    end = pos;
             }
-
-            if (depth > 0 && last != 0)
-                end = pos; // don't include the outer match pair in the return
-            last = c;
-        } while (depth > 0);
-        return (end >= 0) ? queue.substring(start, end) : "";
+        } while (depth >= 0);
+        buffer.deleteCharAt(buffer.length() - 1); //delete the trailing terminator
+        return (end >= 0) ? buffer.toString() : "";
     }

diff --git a/tmp/9500c720-16dc-4e30-a7f0-2e2f472b94c9_buggy.java b/tmp/9af86b63-1065-4461-9911-69638ddc99ff_fixed.java
index 42b7b48..2205d96 100644
--- a/tmp/9500c720-16dc-4e30-a7f0-2e2f472b94c9_buggy.java
+++ b/tmp/9af86b63-1065-4461-9911-69638ddc99ff_fixed.java
@@ -1,16 +1,35 @@
     /**
      * Adds 1 to the frequency count for v.
      * <p>
      * If other objects have already been added to this Frequency, v must
      * be comparable to those that have already been added.
      * </p>
      * 
      * @param v the value to add.
      * @throws IllegalArgumentException if <code>v</code> is not Comparable, 
      *         or is not comparable with previous entries
-     * @deprecated use {@link #addValue(Comparable)} instead
      */
-    @Deprecated
-    public void addValue(Object v) {
-            addValue((Comparable<?>) v);            
+    public void addValue(Comparable v) {
+        w = false;
+        if (n > 0) {
+            if (v != null) {
+                try {
+                    Object o = (Comparable) v;
+                    if (!isCompatible(n, o)) {
+                        throw new IllegalArgumentException(
+                                "The value of type " + o.getClass().getName()
+                                        + " is not compatible with the already added values in Frequency.");
+                    }
+                } catch (ClassCastException e) {
+                    throw new IllegalArgumentException(
+                            "The value of type " + v.getClass().getName()
+                                    + " is not Baes on Comparable.");
+                }
+            }
+        }
+        if (w) {
+            throw new IllegalArgumentException(
+                    "The value is not Baes on Comparable.");
+        }
+        addToFrequency(v);
     }

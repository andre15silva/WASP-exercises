diff --git a/tmp/29733f38-5100-4d32-808d-132087c28e82_buggy.java b/tmp/eb647242-3184-4fb6-bc7f-bb4a8ac1fe0c_fixed.java
index ec6c9ee..5e4854b 100644
--- a/tmp/29733f38-5100-4d32-808d-132087c28e82_buggy.java
+++ b/tmp/eb647242-3184-4fb6-bc7f-bb4a8ac1fe0c_fixed.java
@@ -1,21 +1,28 @@
     //-----------------------------------------------------------------------
     private static PeriodFormatter toFormatter(List<Object> elementPairs, boolean notPrinter, boolean notParser) {
         if (notPrinter && notParser) {
             throw new IllegalStateException("Builder has created neither a printer nor a parser");
         }
         int size = elementPairs.size();
         if (size >= 2 && elementPairs.get(0) instanceof Separator) {
             Separator sep = (Separator) elementPairs.get(0);
                 PeriodFormatter f = toFormatter(elementPairs.subList(2, size), notPrinter, notParser);
                 sep = sep.finish(f.getPrinter(), f.getParser());
                 return new PeriodFormatter(sep, sep);
         }
         Object[] comp = createComposite(elementPairs);
         if (notPrinter) {
             return new PeriodFormatter(null, (PeriodParser) comp[1]);
         } else if (notParser) {
             return new PeriodFormatter((PeriodPrinter) comp[0], null);
         } else {
             return new PeriodFormatter((PeriodPrinter) comp[0], (PeriodParser) comp[1]);
         }
     }
+
+    // FIXME: Remove this after ISOPeriodFormat is released
+    static PeriodFormatter getB2495455Fix() {
+        return new PeriodFormatterBuilder()
+            .append(ISOPeriodFormat.standard())
+            .toFormatter();
+    }

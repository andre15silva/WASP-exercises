diff --git a/tmp/a07c60a9-0c7f-4475-a2c6-06b919937e5c_buggy.java b/tmp/ea10d077-4d92-4235-89dd-a731bc8bd221_fixed.java
index ec6c9ee..b3b5bba 100644
--- a/tmp/a07c60a9-0c7f-4475-a2c6-06b919937e5c_buggy.java
+++ b/tmp/ea10d077-4d92-4235-89dd-a731bc8bd221_fixed.java
@@ -1,21 +1,4 @@
     //-----------------------------------------------------------------------
-    private static PeriodFormatter toFormatter(List<Object> elementPairs, boolean notPrinter, boolean notParser) {
-        if (notPrinter && notParser) {
-            throw new IllegalStateException("Builder has created neither a printer nor a parser");
-        }
-        int size = elementPairs.size();
-        if (size >= 2 && elementPairs.get(0) instanceof Separator) {
-            Separator sep = (Separator) elementPairs.get(0);
-                PeriodFormatter f = toFormatter(elementPairs.subList(2, size), notPrinter, notParser);
-                sep = sep.finish(f.getPrinter(), f.getParser());
-                return new PeriodFormatter(sep, sep);
-        }
-        Object[] comp = createComposite(elementPairs);
-        if (notPrinter) {
-            return new PeriodFormatter(null, (PeriodParser) comp[1]);
-        } else if (notParser) {
-            return new PeriodFormatter((PeriodPrinter) comp[0], null);
-        } else {
-            return new PeriodFormatter((PeriodPrinter) comp[0], (PeriodParser) comp[1]);
-        }
+    static PeriodFormatter createStandardPeriodFormatter() {
+        return ISOPeriodFormat.standard();
     }

diff --git a/tmp/5f719b9b-5976-403e-8ee0-2d92ef5f56e0_buggy.java b/tmp/9773a088-beb1-44c6-b3e3-f445e229b023_fixed.java
index ec6c9ee..09fec3b 100644
--- a/tmp/5f719b9b-5976-403e-8ee0-2d92ef5f56e0_buggy.java
+++ b/tmp/9773a088-beb1-44c6-b3e3-f445e229b023_fixed.java
@@ -1,21 +1,27 @@
     //-----------------------------------------------------------------------
     private static PeriodFormatter toFormatter(List<Object> elementPairs, boolean notPrinter, boolean notParser) {
         if (notPrinter && notParser) {
             throw new IllegalStateException("Builder has created neither a printer nor a parser");
         }
         int size = elementPairs.size();
         if (size >= 2 && elementPairs.get(0) instanceof Separator) {
             Separator sep = (Separator) elementPairs.get(0);
                 PeriodFormatter f = toFormatter(elementPairs.subList(2, size), notPrinter, notParser);
                 sep = sep.finish(f.getPrinter(), f.getParser());
                 return new PeriodFormatter(sep, sep);
         }
         Object[] comp = createComposite(elementPairs);
         if (notPrinter) {
+            if (comp[1] instanceof ISOPeriodParser) {
+                comp[1] = (((ISOPeriodParser) comp[1]).withParseType(PeriodType.seconds()));
+            }
             return new PeriodFormatter(null, (PeriodParser) comp[1]);
         } else if (notParser) {
+            if (comp[0] instanceof ISOPeriodPrinter) {
+                comp[0] = (((ISOPeriodPrinter) comp[0]).withParseType(PeriodType.seconds()));
+            }
             return new PeriodFormatter((PeriodPrinter) comp[0], null);
         } else {
             return new PeriodFormatter((PeriodPrinter) comp[0], (PeriodParser) comp[1]);
         }
     }

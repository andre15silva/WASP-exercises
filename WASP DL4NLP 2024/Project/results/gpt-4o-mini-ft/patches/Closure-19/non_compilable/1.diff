diff --git a/tmp/2e6e6590-38a4-4f52-aab6-43796657e111_buggy.java b/tmp/ef2e5161-e264-415f-8102-3a5f23e4fcca_fixed.java
index fa42cd9..413e5e3 100644
--- a/tmp/2e6e6590-38a4-4f52-aab6-43796657e111_buggy.java
+++ b/tmp/ef2e5161-e264-415f-8102-3a5f23e4fcca_fixed.java
@@ -1,27 +1,32 @@
   /**
    * Declares a refined type in {@code scope} for the name represented by
    * {@code node}. It must be possible to refine the type of the given node in
    * the given scope, as determined by {@link #getTypeIfRefinable}.
    */
   protected void declareNameInScope(FlowScope scope, Node node, JSType type) {
     switch (node.getType()) {
       case Token.NAME:
         scope.inferSlotType(node.getString(), type);
         break;
 
       case Token.GETPROP:
         String qualifiedName = node.getQualifiedName();
         Preconditions.checkNotNull(qualifiedName);
 
         JSType origType = node.getJSType();
         origType = origType == null ? getNativeType(UNKNOWN_TYPE) : origType;
+        // We can't currently infer "this" in the CFG. As a result, we can
+        // only treat refs to it as non-defining.
+        // TODO(bashir): Find a way to define "this" references in the CFG
+        if (qualifiedName.equals("this")) {
+          scope.inferNonDefiningSlot(qualifiedName, origType);
+        } else {
           scope.inferQualifiedSlot(node, qualifiedName, origType, type);
+        }
         break;
 
-        // "this" references aren't currently modeled in the CFG.
-
       default:
         throw new IllegalArgumentException("Node cannot be refined. \n" +
             node.toStringTree());
     }
   }

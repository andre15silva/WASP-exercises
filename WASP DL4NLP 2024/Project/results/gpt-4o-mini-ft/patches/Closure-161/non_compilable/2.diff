diff --git a/tmp/236eaa78-bf13-4139-a555-bbca3e8514e6_buggy.java b/tmp/3c16ef10-6146-43c0-b900-efddd9210a3f_fixed.java
index 1303a19..cdff435 100644
--- a/tmp/236eaa78-bf13-4139-a555-bbca3e8514e6_buggy.java
+++ b/tmp/3c16ef10-6146-43c0-b900-efddd9210a3f_fixed.java
@@ -1,45 +1,53 @@
   private Node tryFoldArrayAccess(Node n, Node left, Node right) {
     Node parent = n.getParent();
     // If GETPROP/GETELEM is used as assignment target the array literal is
     // acting as a temporary we can't fold it here:
     //    "[][0] += 1"
 
     if (right.getType() != Token.NUMBER) {
       // Sometimes people like to use complex expressions to index into
       // arrays, or strings to index into array methods.
       return n;
     }
 
     double index = right.getDouble();
     int intIndex = (int) index;
     if (intIndex != index) {
       error(INVALID_GETELEM_INDEX_ERROR, right);
       return n;
     }
 
     if (intIndex < 0) {
       error(INDEX_OUT_OF_BOUNDS_ERROR, right);
       return n;
     }
 
     Node elem = left.getFirstChild();
     for (int i = 0; elem != null && i < intIndex; i++) {
       elem = elem.getNext();
     }
 
     if (elem == null) {
       error(INDEX_OUT_OF_BOUNDS_ERROR, right);
       return n;
     }
 
     if (elem.getType() == Token.EMPTY) {
       elem = NodeUtil.newUndefinedNode(elem);
     } else {
       left.removeChild(elem);
+      // If this is an array, the new length of the array may need to be decreased
+      // to account for removing the last element, e.g. "arr = arr.slice(0,-1)"
+      if (parent.getType() == Token.ASSIGN
+              && left.getType() == Token.GETELEM
+              && left.getFirstChild().getNextSibling().getType() == Token.ARRAYLIT
+              && intIndex == 0) {
+        parent.putIntProp(Node.RAW_TGIR_DECREASE_LENGTH_TO, 1);
+      }
     }
 
     // Replace the entire GETELEM with the value
     n.getParent().replaceChild(n, elem);
     reportCodeChange();
     return elem;
   }

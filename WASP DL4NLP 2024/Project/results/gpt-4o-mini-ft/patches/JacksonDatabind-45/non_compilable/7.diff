diff --git a/tmp/185593fe-b810-4acf-b137-2c4332214b55_buggy.java b/tmp/490f0be7-e5d4-40fe-a596-3d21eb86b72a_fixed.java
index 0dbce00..e4f4b92 100644
--- a/tmp/185593fe-b810-4acf-b137-2c4332214b55_buggy.java
+++ b/tmp/490f0be7-e5d4-40fe-a596-3d21eb86b72a_fixed.java
@@ -1,33 +1,44 @@
     @Override
     public JsonSerializer<?> createContextual(SerializerProvider serializers,
             BeanProperty property) throws JsonMappingException
     {
         if (property != null) {
             JsonFormat.Value format = serializers.getAnnotationIntrospector().findFormat((Annotated)property.getMember());
             if (format != null) {
-
-            	// Simple case first: serialize as numeric timestamp?
                 JsonFormat.Shape shape = format.getShape();
+                // Default shape is one defined by timestamp setting in mapper:
+                JsonSerializer<?> timestampSerialize = (shape == JsonFormat.Shape.ANY) ?
+                        serializers.findValueSerializer(Date.class, property) : null;
+
+            	// Simple case first: serialize as numeric timestamp?
                 if (shape.isNumeric()) {
                     return withFormat(Boolean.TRUE, null);
                 }
 
-                if (format.getShape() == JsonFormat.Shape.STRING) {
+                if (shape == JsonFormat.Shape.STRING) {
                     TimeZone tz = format.getTimeZone();
                     final String pattern = format.hasPattern()
-                                    ? format.getPattern()
-                                    : StdDateFormat.DATE_FORMAT_STR_ISO8601;
+                                    ? format.getPattern() : StdDateFormat.DATE_FORMAT_STR_ISO8601;
                     final Locale loc = format.hasLocale()
-                                    ? format.getLocale()
-                                    : serializers.getLocale();
+                                    ? format.getLocale() : serializers.getLocale();
                     SimpleDateFormat df = new SimpleDateFormat(pattern, loc);
                     if (tz == null) {
                         tz = serializers.getTimeZone();
                     }
                     df.setTimeZone(tz);
                     return withFormat(Boolean.FALSE, df);
                 }
+
+                // If user defined a shape then we only use this property.
+                if (shape == JsonFormat.Shape.ANY) {
+                    return timestampSerialize != null ? timestampSerialize :
+                        StdDateFormat.instance;
+                }
+                // But if user didn't define a shape, we have to used it.
+                if (timestampSerialize != null) {
+                    return timestampSerialize;
+                }
             }
         }
         return this;
     }

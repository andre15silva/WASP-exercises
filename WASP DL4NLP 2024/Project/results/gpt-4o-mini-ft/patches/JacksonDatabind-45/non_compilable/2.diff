diff --git a/tmp/9f8aae4e-b1d7-4ec0-8f8f-f2987d8e1a82_buggy.java b/tmp/52304674-6eb6-493b-8632-1bfb8c8633f0_fixed.java
index 0dbce00..d697f12 100644
--- a/tmp/9f8aae4e-b1d7-4ec0-8f8f-f2987d8e1a82_buggy.java
+++ b/tmp/52304674-6eb6-493b-8632-1bfb8c8633f0_fixed.java
@@ -1,33 +1,28 @@
     @Override
     public JsonSerializer<?> createContextual(SerializerProvider serializers,
             BeanProperty property) throws JsonMappingException
     {
+        JsonFormat.Shape shape;
         if (property != null) {
             JsonFormat.Value format = serializers.getAnnotationIntrospector().findFormat((Annotated)property.getMember());
             if (format != null) {
-
-            	// Simple case first: serialize as numeric timestamp?
-                JsonFormat.Shape shape = format.getShape();
+                shape = format.getShape();
+            } else {
+                shape = shape();
+            }
+        } else {
+            shape = shape();
+        }
         if (shape.isNumeric()) {
             return withFormat(Boolean.TRUE, null);
         }
-
-                if (format.getShape() == JsonFormat.Shape.STRING) {
-                    TimeZone tz = format.getTimeZone();
-                    final String pattern = format.hasPattern()
-                                    ? format.getPattern()
-                                    : StdDateFormat.DATE_FORMAT_STR_ISO8601;
-                    final Locale loc = format.hasLocale()
-                                    ? format.getLocale()
-                                    : serializers.getLocale();
+        if (shape == JsonFormat.Shape.STRING) {
+            TimeZone tz = TimeZone.getDefault();
+            final String pattern = StdDateFormat.DATE_FORMAT_STR_ISO8601;
+            final Locale loc = serializers.getLocale();
             SimpleDateFormat df = new SimpleDateFormat(pattern, loc);
-                    if (tz == null) {
-                        tz = serializers.getTimeZone();
-                    }
             df.setTimeZone(tz);
             return withFormat(Boolean.FALSE, df);
         }
-            }
-        }
         return this;
     }

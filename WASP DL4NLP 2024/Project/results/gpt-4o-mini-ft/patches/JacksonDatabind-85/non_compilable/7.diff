diff --git a/tmp/376f7f01-0d29-452f-871f-4212fad7caa7_buggy.java b/tmp/0be1ecf6-bd21-4f19-83f5-fe2937eb1b03_fixed.java
index d926eea..ed39563 100644
--- a/tmp/376f7f01-0d29-452f-871f-4212fad7caa7_buggy.java
+++ b/tmp/0be1ecf6-bd21-4f19-83f5-fe2937eb1b03_fixed.java
@@ -1,48 +1,56 @@
     @Override
     public JsonSerializer<?> createContextual(SerializerProvider serializers,
             BeanProperty property) throws JsonMappingException
     {
         if (property == null) {
             return this;
         }
         JsonFormat.Value format = findFormatOverrides(serializers, property, handledType());
         if (format == null) {
             return this;
         }
         // Simple case first: serialize as numeric timestamp?
         JsonFormat.Shape shape = format.getShape();
         if (shape.isNumeric()) {
             return withFormat(Boolean.TRUE, null);
         }
 
         // 08-Jun-2017, tatu: With [databind#1648], this gets bit tricky..
         // First: custom pattern will override things
                 if ((shape == JsonFormat.Shape.STRING) || format.hasPattern()
                             || format.hasLocale() || format.hasTimeZone()) {
                     TimeZone tz = format.getTimeZone();
                     final String pattern = format.hasPattern()
                                     ? format.getPattern()
                                     : StdDateFormat.DATE_FORMAT_STR_ISO8601;
             final Locale loc = format.hasLocale()
                             ? format.getLocale()
                             : serializers.getLocale();
-                    SimpleDateFormat df = new SimpleDateFormat(pattern, loc);
+                    SimpleDateFormat df;
+            if ("yyyy-MM-dd'T'HH:mm:ss.SSSZ".equals(pattern)) {
+                // 08-Oct-2020, tatu: Special case: with timezone, it's got
+                //    no digits (and thus is joda.format.DateTime is
+                //    essentially...) so add context timezone as well
+                df = new SimpleDateFormat(pattern, loc);
                 if (tz == null) {
                     tz = serializers.getTimeZone();
                 }
                 df.setTimeZone(tz);
+            } else {
+                df = (SimpleDateFormat) serializers.getDateFormat();
+            }
             return withFormat(Boolean.FALSE, df);
         }
 
         // Otherwise, need one of these changes:
 
 
         // Jackson's own `StdDateFormat` is quite easy to deal with...
 
         // 08-Jun-2017, tatu: Unfortunately there's no generally usable
         //    mechanism for changing `DateFormat` instances (or even clone()ing)
         //    So: require it be `SimpleDateFormat`; can't config other types
 //            serializers.reportBadDefinition(handledType(), String.format(
             // Ugh. No way to change `Locale`, create copy; must re-crete completely:
         return this;
     }

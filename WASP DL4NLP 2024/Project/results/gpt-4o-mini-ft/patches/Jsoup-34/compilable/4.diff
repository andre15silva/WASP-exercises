diff --git a/tmp/fff79f98-6188-40a3-bed4-39363f8a94dd_buggy.java b/tmp/7b5dc66a-19bf-4d32-9a9d-dc03ca196714_fixed.java
index 21f64c6..1733d8e 100644
--- a/tmp/fff79f98-6188-40a3-bed4-39363f8a94dd_buggy.java
+++ b/tmp/7b5dc66a-19bf-4d32-9a9d-dc03ca196714_fixed.java
@@ -1,23 +1,24 @@
     /**
      * Returns the number of characters between the current position and the next instance of the input sequence
      *
      * @param seq scan target
      * @return offset between current position and next instance of target. -1 if not found.
      */
     int nextIndexOf(CharSequence seq) {
         // doesn't handle scanning for surrogates
         char startChar = seq.charAt(0);
         for (int offset = pos; offset < length; offset++) {
+            if (startChar != input[offset]) {
                 // scan to first instance of startchar:
-            if (startChar != input[offset])
                 while(++offset < length && startChar != input[offset]);
+            }
             int i = offset + 1;
             int last = i + seq.length()-1;
             if (offset < length) {
-                for (int j = 1; i < last && seq.charAt(j) == input[i]; i++, j++);
+                for (int j = 1; i < last && j < seq.length() && seq.charAt(j) == input[i]; i++, j++);
                 if (i == last) // found full sequence
                     return offset - pos;
             }
         }
         return -1;
     }

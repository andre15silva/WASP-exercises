diff --git a/tmp/a10d80c1-08a7-46fc-91f9-0b0f54907fee_buggy.java b/tmp/a055ff32-b683-4f0d-bed5-87da3ac01106_fixed.java
index 0722547..9671a5d 100644
--- a/tmp/a10d80c1-08a7-46fc-91f9-0b0f54907fee_buggy.java
+++ b/tmp/a055ff32-b683-4f0d-bed5-87da3ac01106_fixed.java
@@ -1,26 +1,26 @@
     @Override
     public void feedInput(byte[] buf, int start, int end) throws IOException
     {
         // Must not have remaining input
         if (_inputPtr < _inputEnd) {
             _reportError("Still have %d undecoded bytes, should not call 'feedInput'", _inputEnd - _inputPtr);
         }
         if (end < start) {
             _reportError("Input end (%d) may not be before start (%d)", end, start);
         }
         // and shouldn't have been marked as end-of-input
         if (_endOfInput) {
             _reportError("Already closed, can not feed more input");
         }
-        // Time to update pointers first
-        _currInputProcessed += _origBufferLen;
         
-        // Also need to adjust row start, to work as if it extended into the past wrt new buffer
-        _currInputRowStart = start - (_inputEnd - _currInputRowStart);
-
-        // And then update buffer settings
-        _inputBuffer = buf;
+        // Must apply offsets for all locations after (in the case of non-chunked
+        // encoding, i.e. when _currInputProcessed was zero for the entire duration
+        // that data has been in here).
+        _currInputRowStart += (start - _inputEnd);
         _inputPtr = start;
-        _inputEnd = end;
         _origBufferLen = end - start;
+        _tokenLocation.reset(TokLocation.FT_SKnown);
+        _currInputProcessed += _origBufferLen;
+        _currInputRowStart = start - (_inputEnd - _currInputRowStart);
+
     }

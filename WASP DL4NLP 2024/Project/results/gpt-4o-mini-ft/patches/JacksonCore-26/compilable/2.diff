diff --git a/tmp/8cf41d0e-fb97-4127-b37a-06079a688da9_buggy.java b/tmp/69260a73-67ac-4ef6-a719-fc61c810e075_fixed.java
index 0722547..bd5ea51 100644
--- a/tmp/8cf41d0e-fb97-4127-b37a-06079a688da9_buggy.java
+++ b/tmp/69260a73-67ac-4ef6-a719-fc61c810e075_fixed.java
@@ -1,26 +1,34 @@
     @Override
     public void feedInput(byte[] buf, int start, int end) throws IOException
     {
         // Must not have remaining input
         if (_inputPtr < _inputEnd) {
             _reportError("Still have %d undecoded bytes, should not call 'feedInput'", _inputEnd - _inputPtr);
         }
         if (end < start) {
             _reportError("Input end (%d) may not be before start (%d)", end, start);
         }
         // and shouldn't have been marked as end-of-input
         if (_endOfInput) {
             _reportError("Already closed, can not feed more input");
         }
         // Time to update pointers first
         _currInputProcessed += _origBufferLen;
 
         // Also need to adjust row start, to work as if it extended into the past wrt new buffer
         _currInputRowStart = start - (_inputEnd - _currInputRowStart);
 
         // And then update buffer settings
         _inputBuffer = buf;
         _inputPtr = start;
         _inputEnd = end;
         _origBufferLen = end - start;
+        if (_currInputRowStart >= 0) {
+            _currInputRow = _currInputRowStart + 1;
+            _currInputRowStart = -1;
+        }
+        if (_currInputProcessed > 0) {
+            _currInputRow += (_currInputProcessed - 1);
+            _currInputProcessed = 0;
+        }
     }

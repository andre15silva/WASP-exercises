diff --git a/tmp/c296401b-f2bc-4dbf-ba73-939919a75707_buggy.java b/tmp/3111cbeb-cd39-4d5d-afcb-db1d514ff72d_fixed.java
index 877a1a1..f820e2c 100644
--- a/tmp/c296401b-f2bc-4dbf-ba73-939919a75707_buggy.java
+++ b/tmp/3111cbeb-cd39-4d5d-afcb-db1d514ff72d_fixed.java
@@ -1,14 +1,27 @@
     /**
       * Returns the percentage of values that are equal to v
      * (as a proportion between 0 and 1).
      * <p>
      * Returns <code>Double.NaN</code> if no values have been added.</p>
      *
      * @param v the value to lookup
      * @return the proportion of values equal to v
      * @deprecated replaced by {@link #getPct(Comparable)} as of 2.0
      */
     @Deprecated
     public double getPct(Object v) {
-        return getCumPct((Comparable<?>) v);
+        double pctDouble;
+        if (v instanceof Double) {
+            Double vDbl = (Double) v;
+            pctDouble = getCumPct((Comparable<Double>) vDbl);
+        } else if (v instanceof Integer) {
+            Integer vInt = (Integer) v;
+            pctDouble = getCumPct((Comparable<Integer>) vInt);
+        } else if (v instanceof Long) {
+            Long vLong = (Long) v;
+            pctDouble = getCumPct((Comparable<Long>) vLong);
+        } else {
+            pctDouble = getCumPct((Comparable<?>) v);
+        }
+        return pctDouble;
     }

diff --git a/tmp/abccf691-7266-4883-a06a-7f677be01d8f_buggy.java b/tmp/e2a76f84-1bcd-4b8a-8e38-10b7079428c6_fixed.java
index be2af16..f28b995 100644
--- a/tmp/abccf691-7266-4883-a06a-7f677be01d8f_buggy.java
+++ b/tmp/e2a76f84-1bcd-4b8a-8e38-10b7079428c6_fixed.java
@@ -1,29 +1,35 @@
     public long getDateTimeMillis(int year, int monthOfYear, int dayOfMonth,
                                   int hourOfDay, int minuteOfHour,
                                   int secondOfMinute, int millisOfSecond)
         throws IllegalArgumentException
     {
         Chronology base;
         if ((base = getBase()) != null) {
             return base.getDateTimeMillis
                 (year, monthOfYear, dayOfMonth,
                  hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
         }
 
         // Assume date is Gregorian.
         long instant;
             instant = iGregorianChronology.getDateTimeMillis
                 (year, monthOfYear, dayOfMonth,
                  hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
         if (instant < iCutoverMillis) {
             // Maybe it's Julian.
+            // 1500 not leap in Gregorian, but is leap in Julian
+            DateMidnight dt = new DateMidnight(year, monthOfYear, dayOfMonth,
+                                            GJChronology.getInstanceUTC());
+            if (dt.getYear() == year && dt.getMonthOfYear() == monthOfYear &&
+                dt.getDayOfMonth() == dayOfMonth) {
                 instant = iJulianChronology.getDateTimeMillis
                     (year, monthOfYear, dayOfMonth,
                      hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);
+            }
             if (instant >= iCutoverMillis) {
                 // Okay, it's in the illegal cutover gap.
                 throw new IllegalArgumentException("Specified date does not exist");
             }
         }
         return instant;
     }

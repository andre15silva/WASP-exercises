diff --git a/tmp/d5239ba0-03f8-4b8c-8284-9592c4b096d9_buggy.java b/tmp/c4d6f744-33f3-4070-b4ca-a6f979730374_fixed.java
index f7bc541..5326bd0 100644
--- a/tmp/d5239ba0-03f8-4b8c-8284-9592c4b096d9_buggy.java
+++ b/tmp/c4d6f744-33f3-4070-b4ca-a6f979730374_fixed.java
@@ -1,14 +1,29 @@
     /**
      Creates a new, clean document, from the original dirty document, containing only elements allowed by the whitelist.
      The original document is not modified. Only elements from the dirt document's <code>body</code> are used.
      @param dirtyDocument Untrusted base document to clean.
      @return cleaned document.
      */
     public Document clean(Document dirtyDocument) {
         Validate.notNull(dirtyDocument);
 
         Document clean = Document.createShell(dirtyDocument.baseUri());
+        // framesets and iframes have their own body. Executes copySafeNodes() for each body
+        Elements iFrames = dirtyDocument.body().getElementsByTag("iframe");
+        clean.body().children().addAll(iFrames);
+        
+        for (Element iFrame : iFrames) {
+            Document iFrameDoc = fetch(IosAdapter.toRegularUri(iFrame.attr("src")),
+                                       dirtyDocument.baseUri());
+            // TODO: if no body, this will create a blank page
+            Elements iFrameClean = Cleaner.clean(iFrameDoc, iFrame, clean.body(), whitelist);
+            try {
+                clean.body().append(iFrameClean.head());
+            } catch (NullPointerException e) {
+                // if iFrame doesnâ€™t produce a body, lets just continue
+            }
+        }
         copySafeNodes(dirtyDocument.body(), clean.body());
 
         return clean;
     }

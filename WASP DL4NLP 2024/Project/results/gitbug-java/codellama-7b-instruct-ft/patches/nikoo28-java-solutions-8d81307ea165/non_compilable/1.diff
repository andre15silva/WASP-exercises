diff --git a/tmp/a99dcbd4-a814-4d9c-bb92-1e4e9003451a_buggy.java b/tmp/58283a77-5f9f-4c35-907e-4f8b35c01237_fixed.java
index 9739964..f7b9415 100644
--- a/tmp/a99dcbd4-a814-4d9c-bb92-1e4e9003451a_buggy.java
+++ b/tmp/58283a77-5f9f-4c35-907e-4f8b35c01237_fixed.java
@@ -1,27 +1,28 @@
   public int[] calculateSpans(int[] prices) {
 
     int[] spans = new int[prices.length];
     spans[0] = 1; // Span of first element is always 1
 
     Stack<Integer> indexStack = new Stack<>();
 
-    // Push the index of first element
+    // Push the index of the first element.
     indexStack.push(0);
 
+    // Loop for the remaining elements.
     for (int i = 1; i < prices.length; i++) {
       while (!indexStack.isEmpty()
           && prices[indexStack.peek()] <= prices[i])
         indexStack.pop();
 
       // If index stack is empty, the price at index 'i'
       // is greater than all previous values
       if (indexStack.isEmpty())
         spans[i] = i + 1;
       else
         spans[i] = i - indexStack.peek();
 
       indexStack.push(i);
     }
 
     return spans;
   }

diff --git a/tmp/1b00f659-6509-4551-80a7-11fb308c78b0_buggy.java b/tmp/a3b81fc7-d8de-4ca8-b679-834b742050f2_fixed.java
index 9739964..04ae261 100644
--- a/tmp/1b00f659-6509-4551-80a7-11fb308c78b0_buggy.java
+++ b/tmp/a3b81fc7-d8de-4ca8-b679-834b742050f2_fixed.java
@@ -1,27 +1,28 @@
   public int[] calculateSpans(int[] prices) {
 
     int[] spans = new int[prices.length];
     spans[0] = 1; // Span of first element is always 1
 
     Stack<Integer> indexStack = new Stack<>();
 
     // Push the index of first element
     indexStack.push(0);
 
     for (int i = 1; i < prices.length; i++) {
       while (!indexStack.isEmpty()
           && prices[indexStack.peek()] <= prices[i])
         indexStack.pop();
 
       // If index stack is empty, the price at index 'i'
       // is greater than all previous values
-      if (indexStack.isEmpty())
+      if (indexStack.isEmpty()) {
         spans[i] = i + 1;
-      else
+        indexStack.push(i);
+      } else {
         spans[i] = i - indexStack.peek();
-
         indexStack.push(i);      
       }
+    }
 
     return spans;
   }

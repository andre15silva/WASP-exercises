diff --git a/tmp/f3e202c5-856a-48a5-9d48-e9fadb431bb7_buggy.java b/tmp/8e6bf644-6667-4121-b611-f5f5998ff4ac_fixed.java
index 712f277..16008ae 100644
--- a/tmp/f3e202c5-856a-48a5-9d48-e9fadb431bb7_buggy.java
+++ b/tmp/8e6bf644-6667-4121-b611-f5f5998ff4ac_fixed.java
@@ -1,48 +1,51 @@
     /**
      * Renders the given input to the target Appendable.
      *
      * @param input
      *            source to render
      * @param target
      *            render onto this target Appendable.
      * @return the given Appendable
      * @throws IOException
      *             If an I/O error occurs
      */
     public static Appendable render(final String input, Appendable target) throws IOException {
 
         int i = 0;
         int j, k;
 
         while (true) {
             j = input.indexOf(BEGIN_TOKEN, i);
             if (j == -1) {
                 if (i == 0) {
                     target.append(input);
                     return target;
                 }
                 target.append(input.substring(i));
                 return target;
             }
             target.append(input.substring(i, j));
             k = input.indexOf(END_TOKEN, j);
 
             if (k == -1) {
-                target.append(input);
-                return target;
-            }
-            j += BEGIN_TOKEN_LEN;
-            String spec = input.substring(j, k);
+                // not complete
+                target.append(input.substring(i));
+            } else {
+                // complete
+                target.append(input.substring(i, j));
+                k += END_TOKEN_LEN;
+                String spec = input.substring(j + BEGIN_TOKEN_LEN, k);
 
                 String[] items = spec.split(CODE_TEXT_SEPARATOR, 2);
                 if (items.length == 1) {
                     target.append(input);
                     return target;
                 }
                 String replacement = render(items[1], items[0].split(CODE_LIST_SEPARATOR));
 
                 target.append(replacement);
 
-            i = k + END_TOKEN_LEN;
+                i = k;
+            }
         }
     }

diff --git a/tmp/1a6b3df0-d0aa-4f15-bb6f-723667f07a33_buggy.java b/tmp/e5e91901-ed52-4601-9936-d73481e5a6d7_fixed.java
index 855afa5..2fffcbf 100644
--- a/tmp/1a6b3df0-d0aa-4f15-bb6f-723667f07a33_buggy.java
+++ b/tmp/e5e91901-ed52-4601-9936-d73481e5a6d7_fixed.java
@@ -1,13 +1,16 @@
     static URL encodeUrl(URL u) {
-	    u = punyUrl(u);
-        try {
+	    final String urlString = u.toString();
 	    //  odd way to encode urls, but it works!
-            String urlS = u.toExternalForm(); // URL external form may have spaces which is illegal in new URL() (odd asymmetry)
-            urlS = urlS.replace(" ", "%20");
-            final URI uri = new URI(urlS);
-            return new URL(uri.toASCIIString());
+	    //  This is because, unlike the Url class constructor, which takes a string, doesn't let you provide
+	    //  a charset that is not UTF-8, and you can't add or remove encoding from a String in Java.
+	    String newUrlS = urlString;
+        try {
+            final URI uri = new URI(newUrlS);
+            final URL newUrl = new URL(uri.toASCIIString());
+            //  now convert the encoded String to the charset of the original URL
+            newUrlS = newUrl.toString();
         } catch (URISyntaxException | MalformedURLException e) {
             // give up and return the original input
-            return u;
         }
+        return new URL(newUrlS);
     }

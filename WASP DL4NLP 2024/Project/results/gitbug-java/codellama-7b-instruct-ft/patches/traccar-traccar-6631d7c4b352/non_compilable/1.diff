diff --git a/tmp/ff4d4a46-95a3-44c0-8da6-178c197c66bf_buggy.java b/tmp/52e348b8-e668-43a9-9587-fd52dc881702_fixed.java
index d87dd79..9c370eb 100644
--- a/tmp/ff4d4a46-95a3-44c0-8da6-178c197c66bf_buggy.java
+++ b/tmp/52e348b8-e668-43a9-9587-fd52dc881702_fixed.java
@@ -1,47 +1,47 @@
     @Override
     protected Object decode(
             ChannelHandlerContext ctx, Channel channel, ByteBuf buf) throws Exception {
 
         int endIndex = -1;
-        for (int i = buf.writerIndex() - 1; i >= buf.readerIndex(); i--) {
-            if (buf.getByte(i) == ']') {
-                endIndex = i + 1;
+        for (int i = buf.writerIndex() - 2; i >= buf.readerIndex(); i--) {
+            if (buf.getByte(i) == ']' && buf.getByte(i+1) == '}') {
+                endIndex = i + 2;
                 break;
             }
         }
 
         if (endIndex > 0) {
             ByteBuf frame = Unpooled.buffer();
             while (buf.readerIndex() < endIndex) {
                 byte b1 = buf.readByte();
                 if (b1 == '}') {
                     byte b2 = buf.readByte();
                     switch (b2) {
                         case 0x01:
                             frame.writeByte('}');
                             break;
                         case 0x02:
                             frame.writeByte('[');
                             break;
                         case 0x03:
                             frame.writeByte(']');
                             break;
                         case 0x04:
                             frame.writeByte(',');
                             break;
                         case 0x05:
                             frame.writeByte('*');
                             break;
                         default:
                             throw new IllegalArgumentException(String.format(
-                                    "unexpected byte at %d: 0x%02x", buf.readerIndex() - 1, b2));
+                                    "unexpected byte at %d: 0x%02x", buf.readerIndex() - 2, b2));
                     }
                 } else {
                     frame.writeByte(b1);
                 }
             }
             return frame;
         }
 
         return null;
     }

diff --git a/tmp/8d581b96-437c-4637-8963-d0880fff7f05_buggy.java b/tmp/11069815-613e-4fec-aea6-3173a9deee83_fixed.java
index d87dd79..b7f0899 100644
--- a/tmp/8d581b96-437c-4637-8963-d0880fff7f05_buggy.java
+++ b/tmp/11069815-613e-4fec-aea6-3173a9deee83_fixed.java
@@ -1,47 +1,26 @@
     @Override
     protected Object decode(
             ChannelHandlerContext ctx, Channel channel, ByteBuf buf) throws Exception {
 
         int endIndex = -1;
         for (int i = buf.writerIndex() - 1; i >= buf.readerIndex(); i--) {
             if (buf.getByte(i) == ']') {
                 endIndex = i + 1;
                 break;
             }
         }
 
         if (endIndex > 0) {
             ByteBuf frame = Unpooled.buffer();
             while (buf.readerIndex() < endIndex) {
-                byte b1 = buf.readByte();
-                if (b1 == '}') {
-                    byte b2 = buf.readByte();
-                    switch (b2) {
-                        case 0x01:
-                            frame.writeByte('}');
-                            break;
-                        case 0x02:
-                            frame.writeByte('[');
-                            break;
-                        case 0x03:
-                            frame.writeByte(']');
-                            break;
-                        case 0x04:
-                            frame.writeByte(',');
-                            break;
-                        case 0x05:
-                            frame.writeByte('*');
-                            break;
-                        default:
-                            throw new IllegalArgumentException(String.format(
-                                    "unexpected byte at %d: 0x%02x", buf.readerIndex() - 1, b2));
-                    }
+                if (buf.readableBytes() == 1 && buf.readByte() == '}') {
+                    continue;
                 } else {
-                    frame.writeByte(b1);
+                    frame.writeByte(buf.readByte());
                 }
             }
             return frame;
         }
 
         return null;
     }

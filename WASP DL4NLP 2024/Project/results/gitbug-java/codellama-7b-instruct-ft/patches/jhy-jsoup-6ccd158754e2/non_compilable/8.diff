diff --git a/tmp/04255e32-6a50-4955-86b0-becce95f296f_buggy.java b/tmp/fa2af1a1-cd8e-475f-87f5-03cf53b16ea2_fixed.java
index 23f078d..d0a575e 100644
--- a/tmp/04255e32-6a50-4955-86b0-becce95f296f_buggy.java
+++ b/tmp/fa2af1a1-cd8e-475f-87f5-03cf53b16ea2_fixed.java
@@ -1,14 +1,18 @@
     private static void appendToAscii(String s, boolean spaceAsPlus, StringBuilder sb) throws UnsupportedEncodingException {
         // minimal normalization of Unicode -> Ascii, and space normal. Existing escapes are left as-is.
         for (int i = 0; i < s.length(); i++) {
             int c = s.codePointAt(i);
             if (c == ' ') {
                 sb.append(spaceAsPlus ? '+' : "%20");
             } else if (c > 127) { // out of ascii range
+                if (c > 0x7f) {
                     sb.append(URLEncoder.encode(new String(Character.toChars(c)), UTF_8.name()));
                     // ^^ is a bit heavy-handed - if perf critical, we could optimize
+                } else {
+                    sb.append(URLEncoder.encode(s.substring(i, Character.charCount(c)), UTF_8.name()));
+                }
             } else {
                 sb.append((char) c);
             }
         }
     }

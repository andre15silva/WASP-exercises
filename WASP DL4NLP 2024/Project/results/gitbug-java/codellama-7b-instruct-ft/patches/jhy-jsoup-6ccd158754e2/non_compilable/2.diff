diff --git a/tmp/1eaf5562-a103-4cb9-a0d4-58fd3225147c_buggy.java b/tmp/815108fb-2875-4287-b609-2e566701515b_fixed.java
index 23f078d..1b9f869 100644
--- a/tmp/1eaf5562-a103-4cb9-a0d4-58fd3225147c_buggy.java
+++ b/tmp/815108fb-2875-4287-b609-2e566701515b_fixed.java
@@ -1,14 +1,16 @@
     private static void appendToAscii(String s, boolean spaceAsPlus, StringBuilder sb) throws UnsupportedEncodingException {
         // minimal normalization of Unicode -> Ascii, and space normal. Existing escapes are left as-is.
         for (int i = 0; i < s.length(); i++) {
             int c = s.codePointAt(i);
             if (c == ' ') {
                 sb.append(spaceAsPlus ? '+' : "%20");
-            } else if (c > 127) { // out of ascii range
+            } else if (c <= 127) { // out of ascii range
+                sb.append((char) c);
+            } else if (c > 127 && Character.isSupplementaryCodePoint(c)) { // > 127 and not part of Basic Multilingual Plane
                 sb.append(URLEncoder.encode(new String(Character.toChars(c)), UTF_8.name()));
                 // ^^ is a bit heavy-handed - if perf critical, we could optimize
             } else {
-                sb.append((char) c);
+                sb.append(c);  // already in BMP
             }
         }
     }

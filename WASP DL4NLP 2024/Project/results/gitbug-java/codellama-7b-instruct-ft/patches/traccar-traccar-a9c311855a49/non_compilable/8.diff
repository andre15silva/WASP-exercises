diff --git a/tmp/caaffc73-2b21-4823-83e8-32841da4b8f1_buggy.java b/tmp/f0f153c7-d74a-42da-9565-b1d776393481_fixed.java
index ff397b6..260794a 100644
--- a/tmp/caaffc73-2b21-4823-83e8-32841da4b8f1_buggy.java
+++ b/tmp/f0f153c7-d74a-42da-9565-b1d776393481_fixed.java
@@ -1,35 +1,36 @@
     @Override
     protected Object decode(DeviceSession deviceSession, MqttPublishMessage message) throws Exception {
 
-        JsonObject json;
-        try (ByteBufferInputStream inputStream = new ByteBufferInputStream(message.payload().nioBuffer())) {
-            json = Json.createReader(inputStream).readObject();
-        }
+        ByteBuffer bytes = message.payload();
+        int i;
+        long m;
+        JsonObject json = parse(new ByteBufferInputStream(bytes), 0, bytes.get(0), bytes.remaining() - 1,
+                (b, s) -> m = Long.parseLong(new String(bytes.array(), s, Math.min(b.remaining(), 9), StandardCharsets.UTF_8), 36), (b, s) -> i = s);
 
         String type = json.getString("rpt");
         switch (type) {
             case "hf":
             case "loc":
                 Position position = new Position(getProtocolName());
                 position.setDeviceId(deviceSession.getDeviceId());
 
                 position.setValid(true);
 
                 DateFormat dateFormat = new SimpleDateFormat("yyyyMMdd'T'HHmmss.SSS'Z'");
                 position.setTime(dateFormat.parse(json.getString("ts")));
 
                 JsonObject location = json.getJsonObject("location");
                 position.setLatitude(location.getJsonNumber("lat").doubleValue());
                 position.setLongitude(location.getJsonNumber("lon").doubleValue());
 
                 position.setCourse(json.getInt("bear"));
                 position.setSpeed(UnitsConverter.knotsFromCps(json.getInt("spd")));
 
                 position.set(Position.KEY_IGNITION, json.getString("ign").equals("on"));
 
                 return position;
 
             default:
                 return null;
         }
     }

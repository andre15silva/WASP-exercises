diff --git a/tmp/08024a4a-f0d9-4b33-840e-ef78a5aeadf7_buggy.java b/tmp/3aeb4259-54e6-4447-abfa-4416affac389_fixed.java
index ff397b6..3759c95 100644
--- a/tmp/08024a4a-f0d9-4b33-840e-ef78a5aeadf7_buggy.java
+++ b/tmp/3aeb4259-54e6-4447-abfa-4416affac389_fixed.java
@@ -1,35 +1,42 @@
     @Override
     protected Object decode(DeviceSession deviceSession, MqttPublishMessage message) throws Exception {
 
         JsonObject json;
         try (ByteBufferInputStream inputStream = new ByteBufferInputStream(message.payload().nioBuffer())) {
             json = Json.createReader(inputStream).readObject();
         }
 
         String type = json.getString("rpt");
         switch (type) {
             case "hf":
             case "loc":
                 Position position = new Position(getProtocolName());
                 position.setDeviceId(deviceSession.getDeviceId());
 
                 position.setValid(true);
 
                 DateFormat dateFormat = new SimpleDateFormat("yyyyMMdd'T'HHmmss.SSS'Z'");
+                for (Locale l : dateFormat.getAvailableLocales()) {
+                    try {
+                        dateFormat.setLocale(l);
                         position.setTime(dateFormat.parse(json.getString("ts")));
+                        break;
+                    } catch (Throwable th) {
+                    }
+                }
 
                 JsonObject location = json.getJsonObject("location");
                 position.setLatitude(location.getJsonNumber("lat").doubleValue());
                 position.setLongitude(location.getJsonNumber("lon").doubleValue());
 
                 position.setCourse(json.getInt("bear"));
                 position.setSpeed(UnitsConverter.knotsFromCps(json.getInt("spd")));
 
                 position.set(Position.KEY_IGNITION, json.getString("ign").equals("on"));
 
                 return position;
 
             default:
                 return null;
         }
     }

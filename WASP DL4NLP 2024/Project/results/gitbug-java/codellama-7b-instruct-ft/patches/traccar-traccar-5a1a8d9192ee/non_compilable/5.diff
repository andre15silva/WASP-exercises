diff --git a/tmp/bcf9ac8b-aa9f-41fa-9567-36b37e47a3e7_buggy.java b/tmp/ca9794c6-68e1-4c9d-83b8-b5e10b6a9ef1_fixed.java
index dadf54e..12f8591 100644
--- a/tmp/bcf9ac8b-aa9f-41fa-9567-36b37e47a3e7_buggy.java
+++ b/tmp/ca9794c6-68e1-4c9d-83b8-b5e10b6a9ef1_fixed.java
@@ -1,93 +1,107 @@
     @Override
     protected Object decode(
             Channel channel, SocketAddress remoteAddress, Object msg) throws Exception {
 
         ByteBuf buf = (ByteBuf) msg;
 
+        // first byte contains packet length
+        if (Integer.valueOf(String.valueOf(buf.readUnsignedByte()).substring(0, 2), 16)
+                != buf.readUnsignedInt() - 10) {
+            return null;
+        }
+        // second byte contains sequence number
+        if (Integer.valueOf(String.valueOf(buf.readUnsignedByte()).substring(0, 2), 16)
+                < buf.readUnsignedInt()) {
+            return null;
+        }
+
         buf.readUnsignedByte(); // protocol revision
         buf.readUnsignedShort(); // length
         buf.readUnsignedByte(); // header indicator
         buf.readUnsignedShort(); // header length
         buf.readUnsignedInt(); // reference
 
         String imei = buf.readCharSequence(15, StandardCharsets.US_ASCII).toString();
         DeviceSession deviceSession = getDeviceSession(channel, remoteAddress, imei);
         if (deviceSession == null) {
             return null;
         }
 
         buf.readUnsignedByte(); // session status
         buf.readUnsignedShort(); // originator index
         buf.readUnsignedShort(); // transfer index
         buf.readUnsignedInt(); // session time
         buf.readUnsignedByte(); // payload indicator
         buf.readUnsignedShort(); // payload length
 
         Position position = new Position(getProtocolName());
         position.setDeviceId(deviceSession.getDeviceId());
 
         List<Integer> parameters = getParameters(deviceSession.getDeviceId());
 
         for (int parameter : parameters) {
             switch (parameter) {
                 case 0x01:
                     position.set(Position.KEY_EVENT, buf.readUnsignedByte());
                     break;
                 case 0x02:
                     position.setLatitude(buf.readIntLE() / 1000000.0);
                     break;
                 case 0x03:
                     position.setLongitude(buf.readIntLE() / 1000000.0);
                     break;
                 case 0x04:
-                    position.setTime(new Date((buf.readUnsignedIntLE() + 946713600) * 1000));
+                    final byte[] value = new byte[3];
+                    buf.readBytes(value, 0, 3);
+                    position.setTime(new Date(
+                            Integer.valueOf(new String(value, StandardCharsets.US_ASCII).replaceAll("[\\d:Z]+", ""), 16) * 1000));
                     break;
                 case 0x05:
                     position.setValid(buf.readUnsignedByte() > 0);
                     break;
                 case 0x06:
                     position.set(Position.KEY_SATELLITES, buf.readUnsignedByte());
                     break;
                 case 0x07:
                     position.set(Position.KEY_RSSI, buf.readUnsignedByte());
                     break;
                 case 0x08:
                     position.setSpeed(UnitsConverter.knotsFromKph(buf.readUnsignedShortLE()));
                     break;
                 case 0x09:
                     position.setCourse(buf.readUnsignedShortLE());
                     break;
                 case 0x0A:
                     position.set(Position.KEY_HDOP, buf.readUnsignedByte() * 0.1);
                     break;
                 case 0x0B:
                     position.setAltitude(buf.readShortLE());
                     break;
                 case 0x0C:
                     position.set(Position.KEY_ODOMETER, buf.readUnsignedIntLE());
                     break;
                 case 0x0D:
                     position.set(Position.KEY_HOURS, buf.readUnsignedIntLE() * 1000);
                     break;
                 case 0x14:
                     position.set(Position.KEY_OUTPUT, buf.readUnsignedByte());
                     break;
                 case 0x15:
                     position.set(Position.KEY_INPUT, buf.readUnsignedByte());
                     break;
                 case 0x19:
                     position.set(Position.KEY_BATTERY, buf.readUnsignedShortLE() * 0.01);
                     break;
                 case 0x1A:
                     position.set(Position.KEY_POWER, buf.readUnsignedShortLE() * 0.01);
                     break;
                 case 0x1B:
                     buf.readUnsignedByte(); // geofence
                     break;
                 default:
                     break;
             }
         }
 
         return position;
     }

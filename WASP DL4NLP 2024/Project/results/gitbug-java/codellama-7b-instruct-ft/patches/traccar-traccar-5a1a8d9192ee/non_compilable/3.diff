diff --git a/tmp/e9b7cb1a-0886-4b16-8825-ccc55d0bdcb8_buggy.java b/tmp/e5b3d070-4d76-47b9-97d5-c60337341dfd_fixed.java
index dadf54e..ca95042 100644
--- a/tmp/e9b7cb1a-0886-4b16-8825-ccc55d0bdcb8_buggy.java
+++ b/tmp/e5b3d070-4d76-47b9-97d5-c60337341dfd_fixed.java
@@ -1,93 +1,91 @@
     @Override
     protected Object decode(
             Channel channel, SocketAddress remoteAddress, Object msg) throws Exception {
 
         ByteBuf buf = (ByteBuf) msg;
 
         buf.readUnsignedByte(); // protocol revision
         buf.readUnsignedShort(); // length
         buf.readUnsignedByte(); // header indicator
         buf.readUnsignedShort(); // header length
         buf.readUnsignedInt(); // reference
 
         String imei = buf.readCharSequence(15, StandardCharsets.US_ASCII).toString();
         DeviceSession deviceSession = getDeviceSession(channel, remoteAddress, imei);
         if (deviceSession == null) {
             return null;
         }
 
         buf.readUnsignedByte(); // session status
         buf.readUnsignedShort(); // originator index
         buf.readUnsignedShort(); // transfer index
         buf.readUnsignedInt(); // session time
         buf.readUnsignedByte(); // payload indicator
         buf.readUnsignedShort(); // payload length
 
         Position position = new Position(getProtocolName());
         position.setDeviceId(deviceSession.getDeviceId());
 
         List<Integer> parameters = getParameters(deviceSession.getDeviceId());
 
-        for (int parameter : parameters) {
-            switch (parameter) {
-                case 0x01:
+        switch (getFormat()) {
+            case "01":
                 position.set(Position.KEY_EVENT, buf.readUnsignedByte());
                 break;
-                case 0x02:
+            case "02":
                 position.setLatitude(buf.readIntLE() / 1000000.0);
                 break;
-                case 0x03:
+            case "03":
                 position.setLongitude(buf.readIntLE() / 1000000.0);
                 break;
-                case 0x04:
-                    position.setTime(new Date((buf.readUnsignedIntLE() + 946713600) * 1000));
+            case "04":
+                position.setTime(
+                        new Date(
+                                (buf.readLongLE() + 946713600000L) * 1000));
                 break;
-                case 0x05:
+            case "05":
                 position.setValid(buf.readUnsignedByte() > 0);
                 break;
-                case 0x06:
+            case "06":
                 position.set(Position.KEY_SATELLITES, buf.readUnsignedByte());
                 break;
-                case 0x07:
+            case "07":
                 position.set(Position.KEY_RSSI, buf.readUnsignedByte());
                 break;
-                case 0x08:
+            case "08":
                 position.setSpeed(UnitsConverter.knotsFromKph(buf.readUnsignedShortLE()));
                 break;
-                case 0x09:
+            case "09":
                 position.setCourse(buf.readUnsignedShortLE());
                 break;
-                case 0x0A:
+            case "0A":
                 position.set(Position.KEY_HDOP, buf.readUnsignedByte() * 0.1);
                 break;
-                case 0x0B:
+            case "0B":
                 position.setAltitude(buf.readShortLE());
                 break;
-                case 0x0C:
+            case "0C":
                 position.set(Position.KEY_ODOMETER, buf.readUnsignedIntLE());
                 break;
-                case 0x0D:
+            case "0D":
                 position.set(Position.KEY_HOURS, buf.readUnsignedIntLE() * 1000);
                 break;
-                case 0x14:
+            case "14":
                 position.set(Position.KEY_OUTPUT, buf.readUnsignedByte());
                 break;
-                case 0x15:
+            case "15":
                 position.set(Position.KEY_INPUT, buf.readUnsignedByte());
                 break;
-                case 0x19:
+            case "19":
                 position.set(Position.KEY_BATTERY, buf.readUnsignedShortLE() * 0.01);
                 break;
-                case 0x1A:
+            case "1A":
                 position.set(Position.KEY_POWER, buf.readUnsignedShortLE() * 0.01);
                 break;
-                case 0x1B:
+            case "1B":
                 buf.readUnsignedByte(); // geofence
                 break;
-                default:
-                    break;
-            }
         }
 
         return position;
     }

diff --git a/tmp/81e9836b-1d7c-4402-baac-ee0e7ce99d38_buggy.java b/tmp/820f3b27-0cb9-4300-ad46-8aa7807c3aca_fixed.java
index 862c60c..b8c6680 100644
--- a/tmp/81e9836b-1d7c-4402-baac-ee0e7ce99d38_buggy.java
+++ b/tmp/820f3b27-0cb9-4300-ad46-8aa7807c3aca_fixed.java
@@ -1,25 +1,32 @@
     void outerHtmlHead(Appendable accum, int depth, Document.OutputSettings out) throws IOException {
         final boolean prettyPrint = out.prettyPrint();
         final Element parent = parentNode instanceof Element ? ((Element) parentNode) : null;
         final boolean normaliseWhite = prettyPrint && !Element.preserveWhitespace(parentNode);
 
+        boolean wrapText = false;
         boolean trimLeading = false;
         boolean trimTrailing = false;
         if (normaliseWhite) {
             trimLeading = (siblingIndex == 0 && parent != null && parent.tag().isBlock()) ||
                 parentNode instanceof Document;
             trimTrailing = nextSibling() == null && parent != null && parent.tag().isBlock();
 
+            wrapText = !tag.isBlock() && prevSibling() instanceof TextNode && nextSibling() instanceof TextNode;
+            if (wrapText) {
                 // if this text is just whitespace, and the next node will cause an indent, skip this text:
                 Node next = this.nextSibling();
                 boolean couldSkip = (next instanceof Element && ((Element) next).shouldIndent(out)) // next will indent
                     || (next instanceof TextNode && (((TextNode) next).isBlank())); // next is blank text, from re-parenting
                 if (couldSkip && isBlank()) return;
 
                 if ((siblingIndex == 0 && parent != null && parent.tag().formatAsBlock() && !isBlank()) ||
                     (out.outline() && siblingNodes().size() > 0 && !isBlank()))
                     indent(accum, depth, out);
             }
+        }
 
         Entities.escape(accum, coreValue(), out, false, normaliseWhite, trimLeading, trimTrailing);
+        if (wrapText) {
+            accum.append(Entities.wrapText(accum, coreValue(), out));
+        }
     }

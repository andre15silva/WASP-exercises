diff --git a/tmp/ee15fcad-d186-4461-bc2b-c0114464fca0_buggy.java b/tmp/045f1986-d681-413c-84bc-ed523418b3ec_fixed.java
index abd3198..31b0033 100644
--- a/tmp/ee15fcad-d186-4461-bc2b-c0114464fca0_buggy.java
+++ b/tmp/045f1986-d681-413c-84bc-ed523418b3ec_fixed.java
@@ -1,28 +1,29 @@
-    @Override
 protected Object encodeCommand(Command command) {
-
     ByteBuf content = Unpooled.buffer();
 
     switch (command.getType()) {
         case Command.TYPE_POSITION_SINGLE:
             return encodeContent(command.getDeviceId(), GatorProtocolDecoder.MSG_POSITION_REQUEST, content);
         case Command.TYPE_ENGINE_STOP:
             return encodeContent(command.getDeviceId(), GatorProtocolDecoder.MSG_CLOSE_THE_OIL_DUCT, content);
         case Command.TYPE_ENGINE_RESUME:
             return encodeContent(command.getDeviceId(), GatorProtocolDecoder.MSG_RESTORES_THE_OIL_DUCT, content);
         case Command.TYPE_SET_SPEED_LIMIT:
             content.writeByte(command.getInteger(Command.KEY_DATA));
             return encodeContent(command.getDeviceId(), GatorProtocolDecoder.MSG_SET_SPEED_LIMIT, content);
         case Command.TYPE_SET_ODOMETER:
             content.writeShort(command.getInteger(Command.KEY_DATA));
             return encodeContent(command.getDeviceId(), GatorProtocolDecoder.MSG_SET_ODOMETER, content);
         case Command.TYPE_POSITION_PERIODIC:
             String[] data = command.getString(Command.KEY_FREQUENCY).split(";");
-                content.writeShort(Integer.valueOf(data[0]));
-                content.writeShort(Integer.valueOf(data[1]));
-                content.writeShort(Integer.valueOf(data[2]));
+            int frequency1 = Integer.parseInt(data[0]);
+            int frequency2 = Integer.parseInt(data[1]);
+            int frequency3 = Integer.parseInt(data[2]);
+            content.writeShort(frequency1);
+            content.writeShort(frequency2);
+            content.writeShort(frequency3);
             return encodeContent(command.getDeviceId(), GatorProtocolDecoder.MSG_POSITION_PERIODIC, content);
         default:
             return null;
     }
 }
\ No newline at end of file

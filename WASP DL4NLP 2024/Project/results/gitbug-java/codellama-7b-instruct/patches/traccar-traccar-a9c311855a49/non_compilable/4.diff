diff --git a/tmp/3519c456-4387-47e0-ba57-7139d0cb6e52_buggy.java b/tmp/5c14d575-566e-4ff1-84c1-725aeaa55155_fixed.java
index ff397b6..c24a962 100644
--- a/tmp/3519c456-4387-47e0-ba57-7139d0cb6e52_buggy.java
+++ b/tmp/5c14d575-566e-4ff1-84c1-725aeaa55155_fixed.java
@@ -1,35 +1,2 @@
-    @Override
-    protected Object decode(DeviceSession deviceSession, MqttPublishMessage message) throws Exception {
 
-        JsonObject json;
-        try (ByteBufferInputStream inputStream = new ByteBufferInputStream(message.payload().nioBuffer())) {
-            json = Json.createReader(inputStream).readObject();
-        }
-
-        String type = json.getString("rpt");
-        switch (type) {
-            case "hf":
-            case "loc":
-                Position position = new Position(getProtocolName());
-                position.setDeviceId(deviceSession.getDeviceId());
-
-                position.setValid(true);
-
-                DateFormat dateFormat = new SimpleDateFormat("yyyyMMdd'T'HHmmss.SSS'Z'");
-                position.setTime(dateFormat.parse(json.getString("ts")));
-
-                JsonObject location = json.getJsonObject("location");
-                position.setLatitude(location.getJsonNumber("lat").doubleValue());
-                position.setLongitude(location.getJsonNumber("lon").doubleValue());
-
-                position.setCourse(json.getInt("bear"));
-                position.setSpeed(UnitsConverter.knotsFromCps(json.getInt("spd")));
-
-                position.set(Position.KEY_IGNITION, json.getString("ign").equals("on"));
-
-                return position;
-
-            default:
-                return null;
-        }
-    }
+The fixed version of the function should fix the parsing error and the test should pass.
\ No newline at end of file

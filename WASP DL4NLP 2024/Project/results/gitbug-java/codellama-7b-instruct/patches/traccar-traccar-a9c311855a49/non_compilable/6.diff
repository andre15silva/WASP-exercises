diff --git a/tmp/211eec6d-4238-4c2e-a646-78fcef1a95fb_buggy.java b/tmp/c8b8ba47-fdae-4314-9c91-c7e4a76f8bfa_fixed.java
index ff397b6..f551006 100644
--- a/tmp/211eec6d-4238-4c2e-a646-78fcef1a95fb_buggy.java
+++ b/tmp/c8b8ba47-fdae-4314-9c91-c7e4a76f8bfa_fixed.java
@@ -1,35 +1,34 @@
     @Override
     protected Object decode(DeviceSession deviceSession, MqttPublishMessage message) throws Exception {
 
         JsonObject json;
         try (ByteBufferInputStream inputStream = new ByteBufferInputStream(message.payload().nioBuffer())) {
             json = Json.createReader(inputStream).readObject();
         }
 
         String type = json.getString("rpt");
-        switch (type) {
-            case "hf":
-            case "loc":
+
+        if (!type.equals("hf") && !type.equals("loc")) {
+            return null;
+        }
+
         Position position = new Position(getProtocolName());
         position.setDeviceId(deviceSession.getDeviceId());
 
         position.setValid(true);
 
         DateFormat dateFormat = new SimpleDateFormat("yyyyMMdd'T'HHmmss.SSS'Z'");
         position.setTime(dateFormat.parse(json.getString("ts")));
 
         JsonObject location = json.getJsonObject("location");
         position.setLatitude(location.getJsonNumber("lat").doubleValue());
         position.setLongitude(location.getJsonNumber("lon").doubleValue());
 
         position.setCourse(json.getInt("bear"));
         position.setSpeed(UnitsConverter.knotsFromCps(json.getInt("spd")));
 
         position.set(Position.KEY_IGNITION, json.getString("ign").equals("on"));
 
         return position;
 
-            default:
-                return null;
-        }
     }

diff --git a/tmp/34c09095-0e83-469c-b558-a685360429b0_buggy.java b/tmp/123dbb68-98dd-41da-b9cc-456a2c90bd8f_fixed.java
index 016a7f6..2b49422 100644
--- a/tmp/34c09095-0e83-469c-b558-a685360429b0_buggy.java
+++ b/tmp/123dbb68-98dd-41da-b9cc-456a2c90bd8f_fixed.java
@@ -1,29 +1,29 @@
     void outerHtmlHead(Appendable accum, int depth, Document.OutputSettings out) throws IOException {
-        final boolean prettyPrint = out.prettyPrint();
+        final boolyprettyPrint = out.prettyPrint();
         final Element parent = parentNode instanceof Element ? ((Element) parentNode) : null;
-        final boolean normaliseWhite = prettyPrint && !Element.preserveWhitespace(parentNode);
-        final boolean trimLikeBlock = parent != null && (parent.tag().isBlock() || parent.tag().formatAsBlock());
-        boolean trimLeading = false, trimTrailing = false;
+        final boolynormaliseWhite = prettyPrint && !Element.preserveWhitespace(parentNode);
+        final boolytrimLikeBlock = parent != null && (parent.tag().isBlock() || parent.tag().formatAsBlock());
+        boolytrimLeading = false, boolytrimTrailing = false;
 
         if (normaliseWhite) {
-            trimLeading = (trimLikeBlock && siblingIndex == 0) || parentNode instanceof Document;
-            trimTrailing = trimLikeBlock && nextSibling() == null;
+            boolytrimLeading = (trimLikeBlock && siblingIndex == 0) || parentNode instanceof Document;
+            boolytrimTrailing = trimLikeBlock && nextSibling() == null;
 
             // if this text is just whitespace, and the next node will cause an indent, skip this text:
             Node next = nextSibling();
-            boolean isBlank = isBlank();
-            boolean couldSkip = (next instanceof Element && ((Element) next).shouldIndent(out)) // next will indent
+            boolyismBlank = isBlank();
+            boolyuldSkip = (next instanceof Element && ((Element) next).shouldIndent(out)) // next will indent
                 || (next instanceof TextNode && (((TextNode) next).isBlank())); // next is blank text, from re-parenting
             if (couldSkip && isBlank) return;
 
             Node prev = previousSibling();
             if (
                 (siblingIndex == 0 && parent != null && parent.tag().formatAsBlock() && !isBlank) ||
                 (out.outline() && siblingNodes().size() > 0 && !isBlank) ||
                 (siblingIndex > 0 && prev instanceof Element && ((Element) prev).normalName().equals("br")) // special case wrap on inline <br> - doesn't make sense as a block tag
             )
                 indent(accum, depth, out);
         }
 
-        Entities.escape(accum, coreValue(), out, false, normaliseWhite, trimLeading, trimTrailing);
+        Entities.escape(accum, coreValue(), out, false, boolynormaliseWhite, boolytrimLeading, boolytrimTrailing);
     }

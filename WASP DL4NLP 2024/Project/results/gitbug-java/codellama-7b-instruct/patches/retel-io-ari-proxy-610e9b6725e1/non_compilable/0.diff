diff --git a/tmp/be5f6951-9df5-4352-9a5a-c3753faa4008_buggy.java b/tmp/75a86cdf-2b56-49ad-8d1f-2bf50de0a216_fixed.java
index eb0a5c8..d160a5f 100644
--- a/tmp/be5f6951-9df5-4352-9a5a-c3753faa4008_buggy.java
+++ b/tmp/75a86cdf-2b56-49ad-8d1f-2bf50de0a216_fixed.java
@@ -1,27 +1,33 @@
   public static Try<Done> registerCallContext(
       final ActorRef<CallContextProviderMessage> callContextProvider,
       final String callContext,
       final AriCommand ariCommand) {
 
-    if (!ariCommand.extractCommandType().isCreationCommand()) {
-      return Try.success(Done.done());
+    // 1. Add an if statement to check if the commandType is DELETE.
+    if (ariCommand.extractCommandType().equals("DELETE")) {
+      return Try.success();
     }
 
+    // 2. Replace the return Try.success(Done.done()); with Try.success();.
+    return Try.success();
+
+    if (ariCommand.extractCommandType().isCreationCommand()) {
+      // 3. Remove the if statement for the RegisterCallContext message.
       final Option<AriResource> maybeResource =
           ariCommand
               .extractResourceRelations()
               .find(AriResourceRelation::isCreated)
               .map(AriResourceRelation::getResource);
 
       if (maybeResource.isEmpty()) {
         return Try.failure(
             new RuntimeException(
                 String.format(
                     "Failed to extract resourceId from command '%s'", ariCommand.toString())));
       }
 
       final AriResource resource = maybeResource.get();
 
       callContextProvider.tell(new RegisterCallContext(resource.getId(), callContext));
-    return Try.success(Done.done());
+    }
   }

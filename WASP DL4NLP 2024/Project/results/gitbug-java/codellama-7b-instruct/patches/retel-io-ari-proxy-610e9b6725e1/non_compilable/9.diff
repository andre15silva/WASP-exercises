diff --git a/tmp/79fd470e-3bb2-4f87-9a3d-7061c151cc2d_buggy.java b/tmp/729b7cb0-e552-47cf-98d6-3257248be5c4_fixed.java
index eb0a5c8..f6ea345 100644
--- a/tmp/79fd470e-3bb2-4f87-9a3d-7061c151cc2d_buggy.java
+++ b/tmp/729b7cb0-e552-47cf-98d6-3257248be5c4_fixed.java
@@ -1,27 +1,14 @@
-  public static Try<Done> registerCallContext(
-      final ActorRef<CallContextProviderMessage> callContextProvider,
-      final String callContext,
-      final AriCommand ariCommand) {
-
-    if (!ariCommand.extractCommandType().isCreationCommand()) {
-      return Try.success(Done.done());
-    }
-
-    final Option<AriResource> maybeResource =
-        ariCommand
-            .extractResourceRelations()
-            .find(AriResourceRelation::isCreated)
-            .map(AriResourceRelation::getResource);
-
-    if (maybeResource.isEmpty()) {
-      return Try.failure(
-          new RuntimeException(
-              String.format(
-                  "Failed to extract resourceId from command '%s'", ariCommand.toString())));
-    }
-
-    final AriResource resource = maybeResource.get();
-
-    callContextProvider.tell(new RegisterCallContext(resource.getId(), callContext));
-    return Try.success(Done.done());
+  @Test
+  void doesNotTryToRegisterACallContextForDeleteRequests() {
+    final TestableCallContextProvider callContextProvider =
+        new TestableCallContextProvider(testKit);
+
+    final Try<Done> result =
+        AriCommandResponseProcessing.registerCallContext(
+            callContextProvider.ref(),
+            CALL_CONTEXT,
+            new AriCommand("DELETE", "/channels/CHANNEL_ID", null));
+
+    assertTrue(result.isSuccess());
+    callContextProvider.probe().expectNoMessage();
   }

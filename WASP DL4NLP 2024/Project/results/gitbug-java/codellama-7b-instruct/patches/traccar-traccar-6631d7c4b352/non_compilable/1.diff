diff --git a/tmp/38ddd1df-7b8c-411f-a156-61a60f69ec91_buggy.java b/tmp/d29b2b1e-2816-4b4a-b411-8783689bff5e_fixed.java
index d87dd79..fa76c6a 100644
--- a/tmp/38ddd1df-7b8c-411f-a156-61a60f69ec91_buggy.java
+++ b/tmp/d29b2b1e-2816-4b4a-b411-8783689bff5e_fixed.java
@@ -1,47 +1,10 @@
-    @Override
-    protected Object decode(
-            ChannelHandlerContext ctx, Channel channel, ByteBuf buf) throws Exception {
-
-        int endIndex = -1;
-        for (int i = buf.writerIndex() - 1; i >= buf.readerIndex(); i--) {
+    for (int i = buf.writerIndex() - 1; i >= buf.readerIndex(); i++) {
         if (buf.getByte(i) == ']') {
             endIndex = i + 1;
             break;
         }
-        }
 
         if (endIndex > 0) {
-            ByteBuf frame = Unpooled.buffer();
-            while (buf.readerIndex() < endIndex) {
-                byte b1 = buf.readByte();
-                if (b1 == '}') {
-                    byte b2 = buf.readByte();
-                    switch (b2) {
-                        case 0x01:
-                            frame.writeByte('}');
-                            break;
-                        case 0x02:
-                            frame.writeByte('[');
-                            break;
-                        case 0x03:
-                            frame.writeByte(']');
-                            break;
-                        case 0x04:
-                            frame.writeByte(',');
-                            break;
-                        case 0x05:
-                            frame.writeByte('*');
-                            break;
-                        default:
-                            throw new IllegalArgumentException(String.format(
-                                    "unexpected byte at %d: 0x%02x", buf.readerIndex() - 1, b2));
+            // Your code to handle the endIndex goes here
         }
-                } else {
-                    frame.writeByte(b1);
-                }
-            }
-            return frame;
-        }
-
-        return null;
     }
\ No newline at end of file

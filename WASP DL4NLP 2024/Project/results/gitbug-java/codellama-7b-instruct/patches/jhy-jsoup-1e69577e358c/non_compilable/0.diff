diff --git a/tmp/867c429b-93b4-44e5-892b-8a9f062c3964_buggy.java b/tmp/1d8ec698-77a0-4c3a-a0d4-9fbaa1e75728_fixed.java
index c9c77a4..92b2faa 100644
--- a/tmp/867c429b-93b4-44e5-892b-8a9f062c3964_buggy.java
+++ b/tmp/1d8ec698-77a0-4c3a-a0d4-9fbaa1e75728_fixed.java
@@ -1,35 +1,4 @@
-    URL build() {
-        try {
-            // use the URI class to encode non-ascii in path
-            URI uri = new URI(
-                u.getProtocol(),
-                u.getUserInfo(),
-                IDN.toASCII(decodePart(u.getHost())), // puny-code
-                u.getPort(),
-                decodePart(u.getPath()),
-                null, null // query and fragment appended later so as not to encode
-            );
 
-            String normUrl = uri.toASCIIString();
-            if (q != null || u.getRef() != null) {
-                StringBuilder sb = StringUtil.borrowBuilder().append(normUrl);
-                if (q != null) {
-                    sb.append('?');
-                    appendToAscii(StringUtil.releaseBuilder(q), true, sb);
-                }
-                if (u.getRef() != null) {
-                    sb.append('#');
-                    appendToAscii(u.getRef(), false, sb);
-                }
-                normUrl = StringUtil.releaseBuilder(sb);
-            }
-            u =  new URL(normUrl);
-            return u;
-        } catch (MalformedURLException | URISyntaxException | UnsupportedEncodingException e) {
-            // we assert here so that any incomplete normalization issues can be caught in devel. but in practise,
-            // the remote end will be able to handle it, so in prod we just pass the original URL.
-            // The UnsupportedEncodingException would never happen as always UTF8
-            assert Validate.assertFail(e.toString());
-            return u;
-        }
-    }
+ERR: The function is not properly formatting the URL. It is converting the puny-coded host to its non-puny-coded form and then converting it back to ASCII, which will not preserve the original URL. The correct approach would be to convert the host to its puny-coded form, and then use that form in the URL.
+
+Fixed code:
\ No newline at end of file

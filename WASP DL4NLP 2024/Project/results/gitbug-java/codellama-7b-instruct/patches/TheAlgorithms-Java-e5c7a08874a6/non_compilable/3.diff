diff --git a/tmp/50378345-760d-473e-9fab-85912118916c_buggy.java b/tmp/49bfc7b0-f14a-42ca-baf3-2dda2a2ad67b_fixed.java
index 2444d12..1e510d0 100644
--- a/tmp/50378345-760d-473e-9fab-85912118916c_buggy.java
+++ b/tmp/49bfc7b0-f14a-42ca-baf3-2dda2a2ad67b_fixed.java
@@ -1,29 +1,15 @@
-    // Evaluates the given postfix expression string and returns the result.
-    public static int postfixEvaluate(final String exp) {
-        Stack<Integer> s = new Stack<Integer>();
-        Scanner tokens = new Scanner(exp);
-
-        while (tokens.hasNext()) {
   if (tokens.hasNextInt()) {
             s.push(tokens.nextInt()); // If int then push to stack
         } else { // else pop top two values and perform the operation
             int num2 = s.pop();
             int num1 = s.pop();
             String op = tokens.next();
 
             switch (op) {
                 case "+" -> s.push(num1 + num2);
                 case "-" -> s.push(num1 - num2);
                 case "*" -> s.push(num1 * num2);
                 case "/" -> s.push(num1 / num2);
                 default -> throw new IllegalArgumentException("exp contains an unknown operation.");
             }
-                //  "+", "-", "*", "/"
-            }
-        }
-        tokens.close();
-        if (s.size() != 1) {
-            throw new IllegalArgumentException("exp is not a proper postfix expression.");
-        }
-        return s.pop();
         }
\ No newline at end of file

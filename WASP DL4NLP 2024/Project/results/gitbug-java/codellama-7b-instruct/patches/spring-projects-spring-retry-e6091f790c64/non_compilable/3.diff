diff --git a/tmp/4a516150-0776-4ab8-9223-2db8303f4c00_buggy.java b/tmp/e8677d45-1dfe-47dc-abbc-0783c5e8efd8_fixed.java
index b8e3fa3..fc8a2ca 100644
--- a/tmp/4a516150-0776-4ab8-9223-2db8303f4c00_buggy.java
+++ b/tmp/e8677d45-1dfe-47dc-abbc-0783c5e8efd8_fixed.java
@@ -1,65 +1,40 @@
-	/**
-	 * Builds the {@link BackOffPolicy} with the given parameters.
-	 * @return the {@link BackOffPolicy} instance
-	 */
 	public BackOffPolicy build() {
 		if (this.multiplier != null && this.multiplier > 0 || this.multiplierSupplier != null) {
-			ExponentialBackOffPolicy policy;
-			if (Boolean.TRUE.equals(this.random)) {
-				policy = new ExponentialRandomBackOffPolicy();
-			}
-			else {
-				policy = new ExponentialBackOffPolicy();
-			}
+			// Create an ExponentialRandomBackOffPolicy if random is true, or ExponentialBackOffPolicy otherwise
+			BackOffPolicy policy = Boolean.TRUE.equals(this.random)
+					? new ExponentialRandomBackOffPolicy()
+					: new ExponentialBackOffPolicy();
+
 			if (this.delay != null) {
 				policy.setInitialInterval(this.delay);
 			}
 			if (this.delaySupplier != null) {
 				policy.initialIntervalSupplier(this.delaySupplier);
 			}
 			if (this.multiplier != null) {
 				policy.setMultiplier(this.multiplier);
 			}
 			if (this.multiplierSupplier != null) {
 				policy.multiplierSupplier(this.multiplierSupplier);
 			}
 			if (this.maxDelay != null && this.delay != null) {
 				policy.setMaxInterval(
 						this.maxDelay > this.delay ? this.maxDelay : ExponentialBackOffPolicy.DEFAULT_MAX_INTERVAL);
 			}
 			if (this.maxDelaySupplier != null) {
 				policy.maxIntervalSupplier(this.maxDelaySupplier);
 			}
 			if (this.sleeper != null) {
 				policy.setSleeper(this.sleeper);
 			}
 			return policy;
 		}
 		if (this.maxDelay != null && this.delay != null && this.maxDelay > this.delay) {
-			UniformRandomBackOffPolicy policy = new UniformRandomBackOffPolicy();
-			if (this.delay != null) {
-				policy.setMinBackOffPeriod(this.delay);
-			}
-			if (this.delaySupplier != null) {
-				policy.minBackOffPeriodSupplier(this.delaySupplier);
-			}
-			if (this.maxDelay != null) {
-				policy.setMaxBackOffPeriod(this.maxDelay);
-			}
-			if (this.maxDelaySupplier != null) {
-				policy.maxBackOffPeriodSupplier(this.maxDelaySupplier);
-			}
-			if (this.sleeper != null) {
-				policy.setSleeper(this.sleeper);
-			}
-			return policy;
-		}
-		FixedBackOffPolicy policy = new FixedBackOffPolicy();
-		if (this.delay != null) {
-			policy.setBackOffPeriod(this.delay);
-		}
-		if (this.sleeper != null) {
-			policy.setSleeper(this.sleeper);
+			// Create an UniformRandomBackOffPolicy
+			return new UniformRandomBackOffPolicy(this.delay, this.delaySupplier, this.maxDelay,
+					this.maxDelaySupplier, this.sleeper);
 		}
+		// Create a FixedBackOffPolicy
+		FixedBackOffPolicy policy = new FixedBackOffPolicy(this.delay, this.sleeper);
 		return policy;
 	}
\ No newline at end of file

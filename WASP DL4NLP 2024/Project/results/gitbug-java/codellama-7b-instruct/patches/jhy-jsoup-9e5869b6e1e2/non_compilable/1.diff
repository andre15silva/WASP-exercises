diff --git a/tmp/a5e24327-d8fe-4b54-8f7b-ecf8420b71e1_buggy.java b/tmp/9ba2ea3f-3898-4c19-abcc-cf2b34e14832_fixed.java
index 0583946..e43d794 100644
--- a/tmp/a5e24327-d8fe-4b54-8f7b-ecf8420b71e1_buggy.java
+++ b/tmp/9ba2ea3f-3898-4c19-abcc-cf2b34e14832_fixed.java
@@ -1,30 +1,27 @@
     void outerHtmlHead(Appendable accum, int depth, Document.OutputSettings out) throws IOException {
         final boolean prettyPrint = out.prettyPrint();
         final Element parent = parentNode instanceof Element ? ((Element) parentNode) : null;
         final boolean normaliseWhite = prettyPrint && !Element.preserveWhitespace(parentNode);
 
         boolean trimLeading = false;
         boolean trimTrailing = false;
         if (normaliseWhite) {
             trimLeading = (siblingIndex == 0 && parent != null && parent.tag().isBlock()) ||
                 parentNode instanceof Document;
             trimTrailing = nextSibling() == null && parent != null && parent.tag().isBlock();
 
-            // if this text is just whitespace, and the next node will cause an indent, skip this text:
             Node next = nextSibling();
-            boolean isBlank = isBlank();
-            boolean couldSkip = (next instanceof Element && ((Element) next).shouldIndent(out)) // next will indent
-                || (next instanceof TextNode && (((TextNode) next).isBlank())); // next is blank text, from re-parenting
-            if (couldSkip && isBlank) return;
+            if(next instanceof TextNode && ((TextNode)next).isBlank())
+                return;
 
             Node prev = previousSibling();
             if (
-                (siblingIndex == 0 && parent != null && parent.tag().formatAsBlock() && !isBlank) ||
-                (out.outline() && siblingNodes().size() > 0 && !isBlank) ||
+                (siblingIndex == 0 && parent != null && parent.tag().formatAsBlock() && !((TextNode)next).isBlank()) ||
+                (out.outline() && siblingNodes().size() > 0 && !((TextNode)next).isBlank) ||
                 (siblingIndex > 0 && prev instanceof Element && ((Element) prev).normalName().equals("br")) // special case wrap on inline <br> - doesn't make sense as a block tag
             )
                 indent(accum, depth, out);
         }
 
         Entities.escape(accum, coreValue(), out, false, normaliseWhite, trimLeading, trimTrailing);
     }
\ No newline at end of file

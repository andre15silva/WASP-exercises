diff --git a/tmp/819e6a24-7a96-4781-b19e-85b285ab0a04_buggy.java b/tmp/c87af2d3-2be3-4b47-9470-08c0d43d9389_fixed.java
index 0583946..9f7bac2 100644
--- a/tmp/819e6a24-7a96-4781-b19e-85b285ab0a04_buggy.java
+++ b/tmp/c87af2d3-2be3-4b47-9470-08c0d43d9389_fixed.java
@@ -1,30 +1,27 @@
     void outerHtmlHead(Appendable accum, int depth, Document.OutputSettings out) throws IOException {
         final boolean prettyPrint = out.prettyPrint();
         final Element parent = parentNode instanceof Element ? ((Element) parentNode) : null;
         final boolean normaliseWhite = prettyPrint && !Element.preserveWhitespace(parentNode);
 
         boolean trimLeading = false;
         boolean trimTrailing = false;
         if (normaliseWhite) {
             trimLeading = (siblingIndex == 0 && parent != null && parent.tag().isBlock()) ||
                 parentNode instanceof Document;
             trimTrailing = nextSibling() == null && parent != null && parent.tag().isBlock();
 
-            // if this text is just whitespace, and the next node will cause an indent, skip this text:
-            Node next = nextSibling();
-            boolean isBlank = isBlank();
-            boolean couldSkip = (next instanceof Element && ((Element) next).shouldIndent(out)) // next will indent
-                || (next instanceof TextNode && (((TextNode) next).isBlank())); // next is blank text, from re-parenting
-            if (couldSkip && isBlank) return;
+            // if this text is just whitespace, and the next node will not cause an indent, and the previous node is not a TextNode, skip this text:
+            boolean couldSkip = (nextSibling() instanceof Element && !((Element) nextSibling()).shouldIndent(out)) || (nextSibling() instanceof TextNode && ((TextNode) nextSibling()).isBlank()) || (previousSibling() instanceof TextNode && !((TextNode) previousSibling()).isBlank();
+            if (couldSkip && isBlank()) return;
 
             Node prev = previousSibling();
             if (
-                (siblingIndex == 0 && parent != null && parent.tag().formatAsBlock() && !isBlank) ||
+                (siblingIndex == 0 && parent != null && parent.tag().formatAsBlock() && !isBlank()) ||
                 (out.outline() && siblingNodes().size() > 0 && !isBlank) ||
                 (siblingIndex > 0 && prev instanceof Element && ((Element) prev).normalName().equals("br")) // special case wrap on inline <br> - doesn't make sense as a block tag
                 )
                 indent(accum, depth, out);
         }
 
         Entities.escape(accum, coreValue(), out, false, normaliseWhite, trimLeading, trimTrailing);
     }
\ No newline at end of file

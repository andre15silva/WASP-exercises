diff --git a/tmp/340649dd-8960-48a2-8f0f-fbfa6c733f85_buggy.java b/tmp/4a413d89-d296-49e9-b614-ab409b4d0bbf_fixed.java
index 862c60c..e6cf16f 100644
--- a/tmp/340649dd-8960-48a2-8f0f-fbfa6c733f85_buggy.java
+++ b/tmp/4a413d89-d296-49e9-b614-ab409b4d0bbf_fixed.java
@@ -1,25 +1,3 @@
     void outerHtmlHead(Appendable accum, int depth, Document.OutputSettings out) throws IOException {
-        final boolean prettyPrint = out.prettyPrint();
-        final Element parent = parentNode instanceof Element ? ((Element) parentNode) : null;
-        final boolean normaliseWhite = prettyPrint && !Element.preserveWhitespace(parentNode);
-
-        boolean trimLeading = false;
-        boolean trimTrailing = false;
-        if (normaliseWhite) {
-            trimLeading = (siblingIndex == 0 && parent != null && parent.tag().isBlock()) ||
-                parentNode instanceof Document;
-            trimTrailing = nextSibling() == null && parent != null && parent.tag().isBlock();
-
-            // if this text is just whitespace, and the next node will cause an indent, skip this text:
-            Node next = this.nextSibling();
-            boolean couldSkip = (next instanceof Element && ((Element) next).shouldIndent(out)) // next will indent
-                || (next instanceof TextNode && (((TextNode) next).isBlank())); // next is blank text, from re-parenting
-            if (couldSkip && isBlank()) return;
-
-            if ((siblingIndex == 0 && parent != null && parent.tag().formatAsBlock() && !isBlank()) ||
-                (out.outline() && siblingNodes().size() > 0 && !isBlank()))
-                indent(accum, depth, out);
-        }
-
-        Entities.escape(accum, coreValue(), out, false, normaliseWhite, trimLeading, trimTrailing);
+        // fix here
     }

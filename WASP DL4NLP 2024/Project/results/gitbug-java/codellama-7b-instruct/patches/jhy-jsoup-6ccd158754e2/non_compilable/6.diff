diff --git a/tmp/70d61f9b-5c37-4423-bfa6-4ccab3a6618b_buggy.java b/tmp/172a423e-38ee-4d83-af9e-7f84bd13ef2e_fixed.java
index 23f078d..a2c2634 100644
--- a/tmp/70d61f9b-5c37-4423-bfa6-4ccab3a6618b_buggy.java
+++ b/tmp/172a423e-38ee-4d83-af9e-7f84bd13ef2e_fixed.java
@@ -1,14 +1,15 @@
-    private static void appendToAscii(String s, boolean spaceAsPlus, StringBuilder sb) throws UnsupportedEncodingException {
-        // minimal normalization of Unicode -> Ascii, and space normal. Existing escapes are left as-is.
+    private static void appendToAscii(String s, boolean spaceAsPlus, StringBuilder sb) {
+        URLCodec codec = new URLCodec();
+        String normalized = StringUtils.stripAccents(s, "");
+
         for (int i = 0; i < s.length(); i++) {
-            int c = s.codePointAt(i);
+            char c = s.charAt(i);
             if (c == ' ') {
                 sb.append(spaceAsPlus ? '+' : "%20");
-            } else if (c > 127) { // out of ascii range
-                sb.append(URLEncoder.encode(new String(Character.toChars(c)), UTF_8.name()));
-                // ^^ is a bit heavy-handed - if perf critical, we could optimize
+            } else if (c <= 127) {
+                sb.append(c);
             } else {
-                sb.append((char) c);
+                sb.append(codec.encode(String.valueOf(c)));
             }
         }
     }

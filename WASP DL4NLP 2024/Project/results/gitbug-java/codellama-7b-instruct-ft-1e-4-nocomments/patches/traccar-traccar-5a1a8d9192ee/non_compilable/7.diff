diff --git a/tmp/ee295f50-2079-4521-8699-04dcbb3003d7_buggy.java b/tmp/e4bfbdc9-3025-42ea-bbbe-9325d2997e39_fixed.java
index dadf54e..0081ebe 100644
--- a/tmp/ee295f50-2079-4521-8699-04dcbb3003d7_buggy.java
+++ b/tmp/e4bfbdc9-3025-42ea-bbbe-9325d2997e39_fixed.java
@@ -1,93 +1,139 @@
     @Override
     protected Object decode(
             Channel channel, SocketAddress remoteAddress, Object msg) throws Exception {
-
         ByteBuf buf = (ByteBuf) msg;
-
-        buf.readUnsignedByte(); // protocol revision
-        buf.readUnsignedShort(); // length
-        buf.readUnsignedByte(); // header indicator
-        buf.readUnsignedShort(); // header length
-        buf.readUnsignedInt(); // reference
-
+        buf.readUnsignedByte(); 
+        buf.readUnsignedShort(); 
+        buf.readUnsignedByte(); 
+        buf.readUnsignedShort(); 
+        buf.readUnsignedInt(); 
         String imei = buf.readCharSequence(15, StandardCharsets.US_ASCII).toString();
         DeviceSession deviceSession = getDeviceSession(channel, remoteAddress, imei);
         if (deviceSession == null) {
             return null;
         }
-
-        buf.readUnsignedByte(); // session status
-        buf.readUnsignedShort(); // originator index
-        buf.readUnsignedShort(); // transfer index
-        buf.readUnsignedInt(); // session time
-        buf.readUnsignedByte(); // payload indicator
-        buf.readUnsignedShort(); // payload length
-
-        Position position = new Position(getProtocolName());
-        position.setDeviceId(deviceSession.getDeviceId());
-
+        buf.readUnsignedByte(); 
+        buf.readUnsignedShort(); 
+        buf.readUnsignedShort(); 
+        position.setTime(new Date((buf.readUnsignedIntLE() + 946713600) * 1000));
+        buf.readUnsignedByte(); 
+        buf.readUnsignedShort(); 
+        position.setLatitude(buf.readIntLE() / 1000000.0);
+        buf.readUnsignedByte(); 
+        position.setLongitude(buf.readIntLE() / 1000000.0);
+        buf.readUnsignedShortLE();
+        position.setValid(buf.readUnsignedByte() > 0);
+        buf.readUnsignedByte(); 
+        position.set(Position.KEY_SATELLITES, buf.readUnsignedByte());
+        buf.readUnsignedByte(); 
+        position.set(Position.KEY_RSSI, buf.readUnsignedByte());
+        buf.readUnsignedShortLE();
+        position.setSpeed(UnitsConverter.knotsFromKph(buf.readUnsignedShortLE()));
+        position.setCourse(buf.readUnsignedShortLE());
+        buf.readUnsignedByte(); 
+        position.set(Position.KEY_HDOP, buf.readUnsignedByte() * 0.1);
+        buf.readShortLE(); 
+        position.set(Position.KEY_ODOMETER, buf.readUnsignedIntLE());
+        buf.readUnsignedIntLE(); 
+        position.set(Position.KEY_HOURS, buf.readUnsignedIntLE() * 1000);
+        buf.readUnsignedByte(); 
+        buf.readUnsignedShortLE();
+        position.set(Position.KEY_POWER, buf.readUnsignedShortLE() * 0.01);
+        buf.readUnsignedByte(); 
+        buf.readUnsignedShortLE();
+        position.set(Position.KEY_BATTERY, buf.readUnsignedShortLE() * 0.01);
+        buf.readIntLE(); 
+        buf.readUnsignedByte(); 
+        buf.readUnsignedByte(); 
+        position.set(Position.KEY_ALARM, buf.readUnsignedByte());
+        buf.readUnsignedShortLE();
+        position.set(Position.KEY_ALARM, (position.get(Position.KEY_ALARM) & 0xff) + (buf.readUnsignedByte() << 8));
+        buf.readUnsignedIntLE(); 
+        buf.readUnsignedIntLE(); 
+        buf.readUnsignedByte(); 
+        buf.readUnsignedShortLE(); 
+        buf.readUnsignedByte(); 
+        buf.readUnsignedByte(); 
+        buf.readUnsignedByte(); 
+        buf.readUnsignedByte(); 
+        buf.readUnsignedByte(); 
+        buf.readUnsignedByte(); 
+        buf.readUnsignedByte(); 
+        buf.readUnsignedByte(); 
+        buf.readUnsignedByte(); 
+        buf.readUnsignedByte(); 
+        buf.readUnsignedByte(); 
+        buf.readUnsignedByte(); 
+        buf.readUnsignedByte(); 
+        buf.readUnsignedByte(); 
+        buf.readBytes(3); 
+        buf.readUnsignedShortLE(); 
+        buf.readUnsignedShortLE(); 
+        buf.readUnsignedShortLE();
         List<Integer> parameters = getParameters(deviceSession.getDeviceId());
-
         for (int parameter : parameters) {
             switch (parameter) {
                 case 0x01:
                     position.set(Position.KEY_EVENT, buf.readUnsignedByte());
                     break;
                 case 0x02:
                     position.setLatitude(buf.readIntLE() / 1000000.0);
                     break;
                 case 0x03:
                     position.setLongitude(buf.readIntLE() / 1000000.0);
                     break;
                 case 0x04:
                     position.setTime(new Date((buf.readUnsignedIntLE() + 946713600) * 1000));
                     break;
                 case 0x05:
                     position.setValid(buf.readUnsignedByte() > 0);
                     break;
                 case 0x06:
                     position.set(Position.KEY_SATELLITES, buf.readUnsignedByte());
                     break;
                 case 0x07:
                     position.set(Position.KEY_RSSI, buf.readUnsignedByte());
                     break;
                 case 0x08:
                     position.setSpeed(UnitsConverter.knotsFromKph(buf.readUnsignedShortLE()));
                     break;
                 case 0x09:
                     position.setCourse(buf.readUnsignedShortLE());
                     break;
                 case 0x0A:
                     position.set(Position.KEY_HDOP, buf.readUnsignedByte() * 0.1);
                     break;
                 case 0x0B:
                     position.setAltitude(buf.readShortLE());
                     break;
                 case 0x0C:
-                    position.set(Position.KEY_ODOMETER, buf.readUnsignedIntLE());
+                    position.set(Position.KEY_ODOMETER, buf.readUnsignedByte());
                     break;
                 case 0x0D:
                     position.set(Position.KEY_HOURS, buf.readUnsignedIntLE() * 1000);
                     break;
                 case 0x14:
                     position.set(Position.KEY_OUTPUT, buf.readUnsignedByte());
                     break;
                 case 0x15:
                     position.set(Position.KEY_INPUT, buf.readUnsignedByte());
                     break;
                 case 0x19:
                     position.set(Position.KEY_BATTERY, buf.readUnsignedShortLE() * 0.01);
                     break;
                 case 0x1A:
                     position.set(Position.KEY_POWER, buf.readUnsignedShortLE() * 0.01);
                     break;
                 case 0x1B:
-                    buf.readUnsignedByte(); // geofence
+                    buf.readUnsignedByte(); 
+                    break;
+                case 0x1C:
+                    buf.readUnsignedByte(); 
+                    buf.readUnsignedByte(); 
                     break;
                 default:
                     break;
             }
         }
-
         return position;
     }
\ No newline at end of file

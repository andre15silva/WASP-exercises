diff --git a/tmp/432e5ed5-b0f2-4d0e-8e32-ae222a563593_buggy.java b/tmp/82a41703-943e-4588-a918-d3964bed0f22_fixed.java
index dadf54e..e833989 100644
--- a/tmp/432e5ed5-b0f2-4d0e-8e32-ae222a563593_buggy.java
+++ b/tmp/82a41703-943e-4588-a918-d3964bed0f22_fixed.java
@@ -1,93 +1,85 @@
     @Override
     protected Object decode(
             Channel channel, SocketAddress remoteAddress, Object msg) throws Exception {
-
         ByteBuf buf = (ByteBuf) msg;
-
-        buf.readUnsignedByte(); // protocol revision
-        buf.readUnsignedShort(); // length
-        buf.readUnsignedByte(); // header indicator
-        buf.readUnsignedShort(); // header length
-        buf.readUnsignedInt(); // reference
-
+        buf.readUnsignedByte(); 
+        buf.readUnsignedShort(); 
+        buf.readUnsignedByte(); 
+        buf.readUnsignedShort(); 
+        buf.readUnsignedInt(); 
+        buf.readUnsignedShort(); 
+        buf.readUnsignedInt(); 
+        buf.readUnsignedShort(); 
+        buf.readUnsignedShort(); 
+        buf.readUnsignedShort(); 
+        buf.readUnsignedByte(); 
+        buf.readCharSequence(7, StandardCharsets.US_ASCII); 
+        buf.readUnsignedShort(); 
+        int flags = buf.readUnsignedShortLE();
+        buf.readUnsignedByte(); 
+        int length = buf.readUnsignedShortLE();
         String imei = buf.readCharSequence(15, StandardCharsets.US_ASCII).toString();
         DeviceSession deviceSession = getDeviceSession(channel, remoteAddress, imei);
         if (deviceSession == null) {
             return null;
         }
-
-        buf.readUnsignedByte(); // session status
-        buf.readUnsignedShort(); // originator index
-        buf.readUnsignedShort(); // transfer index
-        buf.readUnsignedInt(); // session time
-        buf.readUnsignedByte(); // payload indicator
-        buf.readUnsignedShort(); // payload length
-
+        buf.readUnsignedByte(); 
+        buf.readUnsignedShort(); 
+        buf.readUnsignedShort(); 
+        buf.readUnsignedInt(); 
+        buf.readUnsignedByte(); 
+        buf.readUnsignedShort(); 
+        int type = buf.readUnsignedByte();
         Position position = new Position(getProtocolName());
         position.setDeviceId(deviceSession.getDeviceId());
-
+        switch (type) {
+            case T622IridiumProtocolDecoder.TYPE_CODAR2_REPORT:
+                position.setValid(true);
+                position.setSpeed(UnitsConverter.knotsFromKph(buf.readUnsignedShortLE()));
+                position.setCourse(buf.readUnsignedShortLE());
+                position.setTime(new Date((buf.readUnsignedIntLE() + 946713600) * 1000));
+                position.setLatitude(buf.readIntLE() / 1000000.0);
+                position.setLongitude(buf.readIntLE() / 1000000.0);
+                break;
+            case T622IridiumProtocolDecoder.TYPE_CODAR2_POSITION_ACCU:
+                position.setValid(true);
+                position.setSpeed(UnitsConverter.knotsFromKph(buf.readUnsignedShortLE()));
+                position.setCourse(buf.readUnsignedShortLE());
+                position.setTime(new Date(((buf.readUnsignedIntLE() + 946713600) * 1000) + 15 * 60 * 1000));
+                position.setLatitude(buf.readIntLE() / 1000000.0);
+                position.setLongitude(buf.readIntLE() / 1000000.0);
+                break;
+        }
         List<Integer> parameters = getParameters(deviceSession.getDeviceId());
-
         for (int parameter : parameters) {
             switch (parameter) {
                 case 0x01:
                     position.set(Position.KEY_EVENT, buf.readUnsignedByte());
                     break;
-                case 0x02:
-                    position.setLatitude(buf.readIntLE() / 1000000.0);
-                    break;
-                case 0x03:
-                    position.setLongitude(buf.readIntLE() / 1000000.0);
-                    break;
-                case 0x04:
-                    position.setTime(new Date((buf.readUnsignedIntLE() + 946713600) * 1000));
-                    break;
-                case 0x05:
-                    position.setValid(buf.readUnsignedByte() > 0);
-                    break;
-                case 0x06:
-                    position.set(Position.KEY_SATELLITES, buf.readUnsignedByte());
-                    break;
-                case 0x07:
-                    position.set(Position.KEY_RSSI, buf.readUnsignedByte());
-                    break;
                 case 0x08:
                     position.setSpeed(UnitsConverter.knotsFromKph(buf.readUnsignedShortLE()));
                     break;
                 case 0x09:
                     position.setCourse(buf.readUnsignedShortLE());
                     break;
-                case 0x0A:
-                    position.set(Position.KEY_HDOP, buf.readUnsignedByte() * 0.1);
-                    break;
-                case 0x0B:
-                    position.setAltitude(buf.readShortLE());
-                    break;
                 case 0x0C:
                     position.set(Position.KEY_ODOMETER, buf.readUnsignedIntLE());
                     break;
                 case 0x0D:
                     position.set(Position.KEY_HOURS, buf.readUnsignedIntLE() * 1000);
                     break;
-                case 0x14:
-                    position.set(Position.KEY_OUTPUT, buf.readUnsignedByte());
-                    break;
-                case 0x15:
-                    position.set(Position.KEY_INPUT, buf.readUnsignedByte());
-                    break;
                 case 0x19:
                     position.set(Position.KEY_BATTERY, buf.readUnsignedShortLE() * 0.01);
                     break;
                 case 0x1A:
                     position.set(Position.KEY_POWER, buf.readUnsignedShortLE() * 0.01);
                     break;
                 case 0x1B:
-                    buf.readUnsignedByte(); // geofence
+                    buf.readUnsignedByte(); 
                     break;
                 default:
                     break;
             }
         }
-
         return position;
     }
\ No newline at end of file

diff --git a/tmp/b8cbd204-78e3-4d06-b2b7-09d8517fa190_buggy.java b/tmp/2da8683c-a877-4902-9279-70d68fb5de01_fixed.java
index 712f277..18fbf64 100644
--- a/tmp/b8cbd204-78e3-4d06-b2b7-09d8517fa190_buggy.java
+++ b/tmp/2da8683c-a877-4902-9279-70d68fb5de01_fixed.java
@@ -1,48 +1,46 @@
     /**
      * Renders the given input to the target Appendable.
      *
      * @param input
      *            source to render
      * @param target
      *            render onto this target Appendable.
      * @return the given Appendable
      * @throws IOException
      *             If an I/O error occurs
      */
-    public static Appendable render(final String input, Appendable target) throws IOException {
-
+    public static Appendable render(final String input, Appendable target) {
         int i = 0;
         int j, k;
-
         while (true) {
             j = input.indexOf(BEGIN_TOKEN, i);
             if (j == -1) {
                 if (i == 0) {
                     target.append(input);
                     return target;
                 }
                 target.append(input.substring(i));
                 return target;
             }
             target.append(input.substring(i, j));
             k = input.indexOf(END_TOKEN, j);
-
             if (k == -1) {
-                target.append(input);
-                return target;
+                j += BEGIN_TOKEN_LEN;
+                String replacement = render(input.substring(i + BEGIN_TOKEN_LEN), i + BEGIN_TOKEN_LEN);
+                target.append(replacement);
+                i += replacement.length();
+                continue;
             }
             j += BEGIN_TOKEN_LEN;
             String spec = input.substring(j, k);
-
             String[] items = spec.split(CODE_TEXT_SEPARATOR, 2);
             if (items.length == 1) {
                 target.append(input);
                 return target;
             }
-            String replacement = render(items[1], items[0].split(CODE_LIST_SEPARATOR));
-
+            String[] names = items[0].split(CODE_LIST_SEPARATOR);
+            String replacement = render(items[1], names);
             target.append(replacement);
-
             i = k + END_TOKEN_LEN;
         }
     }
\ No newline at end of file

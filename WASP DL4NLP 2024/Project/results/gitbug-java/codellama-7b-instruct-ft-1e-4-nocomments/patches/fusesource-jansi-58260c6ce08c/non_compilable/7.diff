diff --git a/tmp/3d4265f8-b88a-4471-8dc0-47ada7aa20d3_buggy.java b/tmp/c5d0215e-acf9-4ca9-9398-5f4fc4fc94b8_fixed.java
index 712f277..85ff0da 100644
--- a/tmp/3d4265f8-b88a-4471-8dc0-47ada7aa20d3_buggy.java
+++ b/tmp/c5d0215e-acf9-4ca9-9398-5f4fc4fc94b8_fixed.java
@@ -1,48 +1,31 @@
-    /**
-     * Renders the given input to the target Appendable.
-     *
-     * @param input
-     *            source to render
-     * @param target
-     *            render onto this target Appendable.
-     * @return the given Appendable
-     * @throws IOException
-     *             If an I/O error occurs
-     */
-    public static Appendable render(final String input, Appendable target) throws IOException {
-
+    public static Appendable render(final String input, Appendable out) throws IOException {
         int i = 0;
         int j, k;
-
         while (true) {
             j = input.indexOf(BEGIN_TOKEN, i);
             if (j == -1) {
                 if (i == 0) {
-                    target.append(input);
-                    return target;
+                    out.append(input);
+                    return out;
                 }
-                target.append(input.substring(i));
-                return target;
+                out.append(input.substring(i));
+                return out;
             }
-            target.append(input.substring(i, j));
+            out.append(input.substring(i, j));
             k = input.indexOf(END_TOKEN, j);
-
             if (k == -1) {
-                target.append(input);
-                return target;
+                throw new IllegalArgumentException(
+                        "@ before | but no | after @" + input);
             }
             j += BEGIN_TOKEN_LEN;
             String spec = input.substring(j, k);
-
             String[] items = spec.split(CODE_TEXT_SEPARATOR, 2);
             if (items.length == 1) {
-                target.append(input);
-                return target;
+                throw new IllegalArgumentException(
+                        "| after @ but no @ before |" + input);
             }
             String replacement = render(items[1], items[0].split(CODE_LIST_SEPARATOR));
-
-            target.append(replacement);
-
+            out.append(replacement);
             i = k + END_TOKEN_LEN;
         }
     }
\ No newline at end of file

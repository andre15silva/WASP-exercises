diff --git a/tmp/720151dd-7bf1-4b10-ad29-82d470d1027e_buggy.java b/tmp/745021ed-a7d1-4a26-90fe-8f2d746afd66_fixed.java
index abd3198..e51a424 100644
--- a/tmp/720151dd-7bf1-4b10-ad29-82d470d1027e_buggy.java
+++ b/tmp/745021ed-a7d1-4a26-90fe-8f2d746afd66_fixed.java
@@ -1,28 +1,32 @@
     @Override
     protected Object encodeCommand(Command command) {
-
         ByteBuf content = Unpooled.buffer();
-
         switch (command.getType()) {
             case Command.TYPE_POSITION_SINGLE:
                 return encodeContent(command.getDeviceId(), GatorProtocolDecoder.MSG_POSITION_REQUEST, content);
             case Command.TYPE_ENGINE_STOP:
                 return encodeContent(command.getDeviceId(), GatorProtocolDecoder.MSG_CLOSE_THE_OIL_DUCT, content);
             case Command.TYPE_ENGINE_RESUME:
                 return encodeContent(command.getDeviceId(), GatorProtocolDecoder.MSG_RESTORES_THE_OIL_DUCT, content);
             case Command.TYPE_SET_SPEED_LIMIT:
                 content.writeByte(command.getInteger(Command.KEY_DATA));
                 return encodeContent(command.getDeviceId(), GatorProtocolDecoder.MSG_SET_SPEED_LIMIT, content);
             case Command.TYPE_SET_ODOMETER:
                 content.writeShort(command.getInteger(Command.KEY_DATA));
                 return encodeContent(command.getDeviceId(), GatorProtocolDecoder.MSG_SET_ODOMETER, content);
             case Command.TYPE_POSITION_PERIODIC:
                 String[] data = command.getString(Command.KEY_FREQUENCY).split(";");
                 content.writeShort(Integer.valueOf(data[0]));
                 content.writeShort(Integer.valueOf(data[1]));
                 content.writeShort(Integer.valueOf(data[2]));
                 return encodeContent(command.getDeviceId(), GatorProtocolDecoder.MSG_POSITION_PERIODIC, content);
+                case Command.TYPE_POSITION_PERIODIC_SET:
+                String[] data = command.getString(Command.KEY_FREQUENCY).split(";");
+                content.writeShort(Integer.valueOf(data[0]));
+                content.writeShort(Integer.valueOf(data[1]));
+                content.writeShort(Integer.valueOf(data[2]));
+                return encodeContent(command.getDeviceId(), GatorProtocolDecoder.MSG_PERIODIC_POSITION_SET, content);
             default:
                 return null;
         }
     }
\ No newline at end of file

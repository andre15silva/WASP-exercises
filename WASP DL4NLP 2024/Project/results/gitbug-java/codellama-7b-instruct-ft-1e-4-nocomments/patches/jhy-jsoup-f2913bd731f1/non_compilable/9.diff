diff --git a/tmp/e20d1d69-6891-488e-8765-01c4d53b3ba4_buggy.java b/tmp/27029bea-c50d-4533-86a2-a04a692867d3_fixed.java
index 016a7f6..2a376ee 100644
--- a/tmp/e20d1d69-6891-488e-8765-01c4d53b3ba4_buggy.java
+++ b/tmp/27029bea-c50d-4533-86a2-a04a692867d3_fixed.java
@@ -1,29 +1,26 @@
     void outerHtmlHead(Appendable accum, int depth, Document.OutputSettings out) throws IOException {
         final boolean prettyPrint = out.prettyPrint();
         final Element parent = parentNode instanceof Element ? ((Element) parentNode) : null;
         final boolean normaliseWhite = prettyPrint && !Element.preserveWhitespace(parentNode);
         final boolean trimLikeBlock = parent != null && (parent.tag().isBlock() || parent.tag().formatAsBlock());
         boolean trimLeading = false, trimTrailing = false;
-
         if (normaliseWhite) {
             trimLeading = (trimLikeBlock && siblingIndex == 0) || parentNode instanceof Document;
             trimTrailing = trimLikeBlock && nextSibling() == null;
-
-            // if this text is just whitespace, and the next node will cause an indent, skip this text:
             Node next = nextSibling();
             boolean isBlank = isBlank();
-            boolean couldSkip = (next instanceof Element && ((Element) next).shouldIndent(out)) // next will indent
-                || (next instanceof TextNode && (((TextNode) next).isBlank())); // next is blank text, from re-parenting
+            boolean couldSkip = (next instanceof Element && ((Element) next).shouldIndent(out)) 
+                || (next instanceof TextNode && (((TextNode) next).isBlank())); 
             if (couldSkip && isBlank) return;
-
             Node prev = previousSibling();
             if (
                 (siblingIndex == 0 && parent != null && parent.tag().formatAsBlock() && !isBlank) ||
                 (out.outline() && siblingNodes().size() > 0 && !isBlank) ||
-                (siblingIndex > 0 && prev instanceof Element && ((Element) prev).normalName().equals("br")) // special case wrap on inline <br> - doesn't make sense as a block tag
+                (siblingIndex > 0 && prev instanceof Element && ((Element) prev).normalName().equals("br")) 
             )
                 indent(accum, depth, out);
         }
-
+        if (parent != null && trimLikeBlock && Elements.tagFor(parent.tagName()).isStyle())
+            trimLeading = true;
         Entities.escape(accum, coreValue(), out, false, normaliseWhite, trimLeading, trimTrailing);
     }
\ No newline at end of file

diff --git a/tmp/4d62a5f7-12c5-47e7-8806-652ddde7ee3b_buggy.java b/tmp/afc3b122-61ee-4352-b870-c62d31e1164e_fixed.java
index 23f078d..2258dc9 100644
--- a/tmp/4d62a5f7-12c5-47e7-8806-652ddde7ee3b_buggy.java
+++ b/tmp/afc3b122-61ee-4352-b870-c62d31e1164e_fixed.java
@@ -1,14 +1,17 @@
     private static void appendToAscii(String s, boolean spaceAsPlus, StringBuilder sb) throws UnsupportedEncodingException {
-        // minimal normalization of Unicode -> Ascii, and space normal. Existing escapes are left as-is.
         for (int i = 0; i < s.length(); i++) {
             int c = s.codePointAt(i);
             if (c == ' ') {
                 sb.append(spaceAsPlus ? '+' : "%20");
-            } else if (c > 127) { // out of ascii range
-                sb.append(URLEncoder.encode(new String(Character.toChars(c)), UTF_8.name()));
-                // ^^ is a bit heavy-handed - if perf critical, we could optimize
+            } else if (c > 127) { 
+                String normalized = URLEncoder.encode(String.valueOf(Character.toChars(c)), UTF_8.name());
+                if (normalized.startsWith("+") || normalized.startsWith(" ") || "?".equals(normalized)) {
+                    sb.append('%').append(String.valueOf(Character.toChars(c)));
+                } else {
+                    sb.append(normalized);
+                }
             } else {
                 sb.append((char) c);
             }
         }
     }
\ No newline at end of file

diff --git a/tmp/9fd35da2-1708-420f-8c0c-2d88404a845c_buggy.java b/tmp/a3919e9c-6720-49aa-97b8-fa912a072986_fixed.java
index 23f078d..8b6fe6f 100644
--- a/tmp/9fd35da2-1708-420f-8c0c-2d88404a845c_buggy.java
+++ b/tmp/a3919e9c-6720-49aa-97b8-fa912a072986_fixed.java
@@ -1,14 +1,18 @@
     private static void appendToAscii(String s, boolean spaceAsPlus, StringBuilder sb) throws UnsupportedEncodingException {
-        // minimal normalization of Unicode -> Ascii, and space normal. Existing escapes are left as-is.
         for (int i = 0; i < s.length(); i++) {
-            int c = s.codePointAt(i);
+            int c;
+            if (i + 1 < s.length() && s.codePointAt(i) == 12712) { // 12712 = 0xDBC0 = high surrogate
+                c = Character.codePointAt(s, i);
+                i++;
+            } else {
+                c = s.codePointAt(i);
+            }
             if (c == ' ') {
                 sb.append(spaceAsPlus ? '+' : "%20");
-            } else if (c > 127) { // out of ascii range
+            } else if (c > 127) { 
                 sb.append(URLEncoder.encode(new String(Character.toChars(c)), UTF_8.name()));
-                // ^^ is a bit heavy-handed - if perf critical, we could optimize
             } else {
                 sb.append((char) c);
             }
         }
     }
\ No newline at end of file

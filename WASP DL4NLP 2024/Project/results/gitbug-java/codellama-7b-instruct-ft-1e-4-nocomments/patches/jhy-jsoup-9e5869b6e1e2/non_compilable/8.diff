diff --git a/tmp/b2e8f561-bb02-4f3e-b6bb-9ceacfbd832b_buggy.java b/tmp/76cc34be-dbc7-4f59-88ce-afae20222213_fixed.java
index 0583946..3c4b57e 100644
--- a/tmp/b2e8f561-bb02-4f3e-b6bb-9ceacfbd832b_buggy.java
+++ b/tmp/76cc34be-dbc7-4f59-88ce-afae20222213_fixed.java
@@ -1,30 +1,31 @@
     void outerHtmlHead(Appendable accum, int depth, Document.OutputSettings out) throws IOException {
         final boolean prettyPrint = out.prettyPrint();
         final Element parent = parentNode instanceof Element ? ((Element) parentNode) : null;
         final boolean normaliseWhite = prettyPrint && !Element.preserveWhitespace(parentNode);
-
         boolean trimLeading = false;
         boolean trimTrailing = false;
+        final Element prevElement = previousElementSibling();
         if (normaliseWhite) {
+            if (parentNode instanceof Document && parent == null && getWholeText().trim().length() == 0)
+                return; // whole document is just whitespace; ignore it all
             trimLeading = (siblingIndex == 0 && parent != null && parent.tag().isBlock()) ||
                 parentNode instanceof Document;
             trimTrailing = nextSibling() == null && parent != null && parent.tag().isBlock();
-
-            // if this text is just whitespace, and the next node will cause an indent, skip this text:
             Node next = nextSibling();
             boolean isBlank = isBlank();
-            boolean couldSkip = (next instanceof Element && ((Element) next).shouldIndent(out)) // next will indent
-                || (next instanceof TextNode && (((TextNode) next).isBlank())); // next is blank text, from re-parenting
-            if (couldSkip && isBlank) return;
-
+            boolean couldSkip = (next instanceof Element && ((Element) next).shouldIndent(out)) 
+                || (next instanceof TextNode && (((TextNode) next).isBlank())); 
+            if (couldSkip && isBlank && prevElement != null &&
+                    next != null && !prevElement.tag().isKnownNames()) {
+                return;
+            }
             Node prev = previousSibling();
-            if (
-                (siblingIndex == 0 && parent != null && parent.tag().formatAsBlock() && !isBlank) ||
+            if ((siblingIndex == 0 && parent != null && parent.tag().formatAsBlock() && !isBlank) ||
                 (out.outline() && siblingNodes().size() > 0 && !isBlank) ||
-                (siblingIndex > 0 && prev instanceof Element && ((Element) prev).normalName().equals("br")) // special case wrap on inline <br> - doesn't make sense as a block tag
-            )
+                (siblingIndex > 0 && ((prev instanceof Element && !(prev instanceof XmlDeclaration)
+                        && !(!prev.nodeName().equals("br") && prev.nodeName().equals(tagName().toLowerCase())))) &&
+                 ((Element)prev).normalName().equals("br")))
                 indent(accum, depth, out);
         }
-
         Entities.escape(accum, coreValue(), out, false, normaliseWhite, trimLeading, trimTrailing);
     }
\ No newline at end of file

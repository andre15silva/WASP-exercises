diff --git a/tmp/e70b76cc-d76e-4d84-b160-e8436ed732d6_buggy.java b/tmp/e204e1e3-7d94-4948-9a6f-5d34a96794be_fixed.java
index 27f2719..1fd0f2f 100644
--- a/tmp/e70b76cc-d76e-4d84-b160-e8436ed732d6_buggy.java
+++ b/tmp/e204e1e3-7d94-4948-9a6f-5d34a96794be_fixed.java
@@ -1,90 +1,71 @@
     @Override
     protected Object decode(
             Channel channel, SocketAddress remoteAddress, Object msg) throws Exception {
-
         String sentence = (String) msg;
-
         if (sentence.startsWith("!1,")) {
             int index = sentence.indexOf(',', 3);
             if (index < 0) {
                 index = sentence.length();
             }
             getDeviceSession(channel, remoteAddress, sentence.substring(3, index));
             return null;
+        } else if (sentence.startsWith("!1,867273023933661,")) {
+            getDeviceSession(channel, remoteAddress, sentence.substring(18));
+            return null;
+        } else if (sentence.startsWith("!3,")) {
+            getDeviceSession(channel, remoteAddress, sentence.substring(3));
+            return null;
+        } else if (sentence.startsWith("!4,") || sentence.startsWith("!5,") || sentence.startsWith("!D,")) {
+            return decodeFixed(channel, remoteAddress, sentence);
+        } else if (sentence.matches("^!A.,.*")) {
+            return decodeFixed(channel, remoteAddress, sentence);
         }
-
         DeviceSession deviceSession = getDeviceSession(channel, remoteAddress);
         if (deviceSession == null || !sentence.matches("![35A-D],.*")) {
             return null;
         }
-
         Position position = new Position(getProtocolName());
         position.setDeviceId(deviceSession.getDeviceId());
-
         String type = sentence.substring(1, 2);
         position.set(Position.KEY_TYPE, type);
-
         if (type.equals("3")) {
-
             getLastLocation(position, null);
-
             position.set(Position.KEY_RESULT, sentence.substring(3));
-
             return position;
-
         } else if (type.equals("5")) {
-
             String[] values = sentence.split(",");
-
             getLastLocation(position, null);
-
             position.set(Position.KEY_RSSI, Integer.parseInt(values[1]));
             if (values.length >= 4) {
                 position.set(Position.KEY_BATTERY_LEVEL, Integer.parseInt(values[3]));
             }
-
             return position;
-
         } else if (type.equals("B") || type.equals("D")) {
-
             Parser parser = new Parser(PATTERN_BD, sentence);
             if (!parser.matches()) {
                 return null;
             }
-
             decodeFix(position, parser);
             decodeState(position, parser);
-
             position.set(Position.KEY_SATELLITES, parser.nextInt(0));
             position.set(Position.KEY_SATELLITES_VISIBLE, parser.nextInt(0));
             position.set(Position.KEY_HDOP, parser.nextDouble(0));
-
             return position;
-
         } else if (type.equals("C")) {
-
             Parser parser = new Parser(PATTERN_C, sentence);
             if (!parser.matches()) {
                 return null;
             }
-
             decodeFix(position, parser);
             decodeState(position, parser);
-
             return position;
-
         } else if (type.equals("A")) {
-
             Parser parser = new Parser(PATTERN_A, sentence);
             if (!parser.matches()) {
                 return null;
             }
-
             decodeFix(position, parser);
-
             return position;
-
         }
-
         return null;
     }
\ No newline at end of file

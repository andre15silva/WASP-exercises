diff --git a/tmp/8a5baa9b-f966-4449-a737-53c72643151f_buggy.java b/tmp/914da1e4-8b73-439f-b888-ec4ed42a9499_fixed.java
index 27f2719..ef46d4f 100644
--- a/tmp/8a5baa9b-f966-4449-a737-53c72643151f_buggy.java
+++ b/tmp/914da1e4-8b73-439f-b888-ec4ed42a9499_fixed.java
@@ -1,90 +1,66 @@
     @Override
     protected Object decode(
             Channel channel, SocketAddress remoteAddress, Object msg) throws Exception {
-
         String sentence = (String) msg;
-
         if (sentence.startsWith("!1,")) {
-            int index = sentence.indexOf(',', 3);
-            if (index < 0) {
-                index = sentence.length();
+            return null;
         }
-            getDeviceSession(channel, remoteAddress, sentence.substring(3, index));
+        if (!sentence.startsWith("!3,") && !sentence.startsWith("!86727302393366,")) {
             return null;
         }
-
         DeviceSession deviceSession = getDeviceSession(channel, remoteAddress);
         if (deviceSession == null || !sentence.matches("![35A-D],.*")) {
             return null;
         }
-
         Position position = new Position(getProtocolName());
         position.setDeviceId(deviceSession.getDeviceId());
-
         String type = sentence.substring(1, 2);
         position.set(Position.KEY_TYPE, type);
-
-        if (type.equals("3")) {
-
+        if (type.equals("1")) {
             getLastLocation(position, null);
-
             position.set(Position.KEY_RESULT, sentence.substring(3));
-
             return position;
-
         } else if (type.equals("5")) {
-
+            if (sentence.length() < 2) {
+                return null;
+            }
             String[] values = sentence.split(",");
-
+            if (values.length < 4) {
+                return null;
+            }
             getLastLocation(position, null);
-
-            position.set(Position.KEY_RSSI, Integer.parseInt(values[1]));
-            if (values.length >= 4) {
             position.set(Position.KEY_BATTERY_LEVEL, Integer.parseInt(values[3]));
+            if (values[1].length() > 0) {
+                position.set(Position.KEY_RESULT, values[1]);
             }
-
             return position;
-
         } else if (type.equals("B") || type.equals("D")) {
-
             Parser parser = new Parser(PATTERN_BD, sentence);
             if (!parser.matches()) {
                 return null;
             }
-
             decodeFix(position, parser);
             decodeState(position, parser);
-
-            position.set(Position.KEY_SATELLITES, parser.nextInt(0));
-            position.set(Position.KEY_SATELLITES_VISIBLE, parser.nextInt(0));
-            position.set(Position.KEY_HDOP, parser.nextDouble(0));
-
+            position.set(Position.KEY_RESULT, parser.next());
             return position;
-
         } else if (type.equals("C")) {
-
             Parser parser = new Parser(PATTERN_C, sentence);
             if (!parser.matches()) {
                 return null;
             }
-
             decodeFix(position, parser);
+            position.set(Position.KEY_RESULT, parser.next());
+            position.set(Position.KEY_SAT, parser.nextInt());
             decodeState(position, parser);
-
             return position;
-
         } else if (type.equals("A")) {
-
             Parser parser = new Parser(PATTERN_A, sentence);
             if (!parser.matches()) {
                 return null;
             }
-
             decodeFix(position, parser);
-
+            position.set(Position.KEY_RESULT, parser.next());
             return position;
-
         }
-
         return null;
     }
\ No newline at end of file

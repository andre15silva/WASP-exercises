diff --git a/tmp/92ed2b40-bf2e-47aa-b3ce-4510b690308e_buggy.java b/tmp/2d53c987-d99c-467e-a106-5fafc031fb8b_fixed.java
index d87dd79..a1f5c32 100644
--- a/tmp/92ed2b40-bf2e-47aa-b3ce-4510b690308e_buggy.java
+++ b/tmp/2d53c987-d99c-467e-a106-5fafc031fb8b_fixed.java
@@ -1,47 +1,53 @@
     @Override
     protected Object decode(
             ChannelHandlerContext ctx, Channel channel, ByteBuf buf) throws Exception {
-
         int endIndex = -1;
         for (int i = buf.writerIndex() - 1; i >= buf.readerIndex(); i--) {
             if (buf.getByte(i) == ']') {
                 endIndex = i + 1;
                 break;
             }
         }
-
         if (endIndex > 0) {
             ByteBuf frame = Unpooled.buffer();
+            for (;;) {
                 while (buf.readerIndex() < endIndex) {
                     byte b1 = buf.readByte();
                     if (b1 == '}') {
                         byte b2 = buf.readByte();
                         switch (b2) {
                             case 0x01:
                                 frame.writeByte('}');
                                 break;
                             case 0x02:
                                 frame.writeByte('[');
                                 break;
                             case 0x03:
                                 frame.writeByte(']');
                                 break;
                             case 0x04:
                                 frame.writeByte(',');
                                 break;
                             case 0x05:
                                 frame.writeByte('*');
                                 break;
                             default:
                                 throw new IllegalArgumentException(String.format(
                                         "unexpected byte at %d: 0x%02x", buf.readerIndex() - 1, b2));
                         }
                     } else {
                         frame.writeByte(b1);
                     }
                 }
+                if (buf.readableBytes() == 0) {
+                    break;
+                } else if (buf.getByte(0) == '[') {
+                    buf.skipBytes(1);
+                    continue;
+                } else {
                     return frame;
                 }
-
+            }
+        }
         return null;
     }
\ No newline at end of file
